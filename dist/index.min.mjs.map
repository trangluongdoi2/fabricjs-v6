{"version":3,"file":"index.min.mjs","sources":["../src/config.ts","../src/util/internals/console.ts","../src/filters/GLProbes/GLProbe.ts","../src/filters/GLProbes/WebGLProbe.ts","../src/env/browser.ts","../src/env/index.ts","../src/cache.ts","../src/constants.ts","../src/ClassRegistry.ts","../src/util/animation/AnimationRegistry.ts","../src/Observable.ts","../src/util/internals/findRight.ts","../src/util/internals/getRandomInt.ts","../src/util/internals/ifNaN.ts","../src/util/internals/removeFromArray.ts","../src/util/misc/cos.ts","../src/util/misc/sin.ts","../src/Point.ts","../src/Collection.ts","../src/CommonMethods.ts","../src/util/animation/AnimationFrameProvider.ts","../src/util/internals/uid.ts","../src/util/misc/dom.ts","../src/util/misc/radiansDegreesConversion.ts","../src/util/misc/matrix.ts","../src/util/misc/objectEnlive.ts","../src/util/misc/pick.ts","../src/color/color_map.ts","../src/color/util.ts","../src/color/Color.ts","../src/color/constants.ts","../src/util/misc/toFixed.ts","../src/util/misc/svgParsing.ts","../src/util/typeAssertions.ts","../src/util/dom_misc.ts","../src/util/dom_style.ts","../src/canvas/DOMManagers/util.ts","../src/canvas/DOMManagers/StaticCanvasDOMManager.ts","../src/canvas/StaticCanvasOptions.ts","../src/canvas/StaticCanvas.ts","../src/util/dom_event.ts","../src/util/misc/boundingBoxFromPoints.ts","../src/util/misc/objectTransforms.ts","../src/util/misc/planeChange.ts","../src/controls/fireEvent.ts","../src/util/misc/resolveOrigin.ts","../src/controls/util.ts","../src/controls/drag.ts","../src/shapes/Object/FabricObjectSVGExportMixin.ts","../src/util/animation/easing.ts","../src/util/animation/AnimationBase.ts","../src/util/animation/ValueAnimation.ts","../src/util/animation/ArrayAnimation.ts","../src/util/misc/capValue.ts","../src/util/animation/ColorAnimation.ts","../src/util/animation/animate.ts","../src/util/misc/vectors.ts","../src/Intersection.ts","../src/shapes/Object/ObjectOrigin.ts","../src/shapes/Object/ObjectGeometry.ts","../src/shapes/Object/StackedObject.ts","../src/shapes/Object/AnimatableObject.ts","../src/parser/getSvgRegex.ts","../src/parser/constants.ts","../src/Shadow.ts","../src/util/internals/cloneDeep.ts","../src/shapes/Object/defaultValues.ts","../src/shapes/Object/Object.ts","../src/controls/wrapWithFireEvent.ts","../src/controls/wrapWithFixedAnchor.ts","../src/controls/changeWidth.ts","../src/controls/controlRendering.ts","../src/controls/Control.ts","../src/controls/rotate.ts","../src/controls/scale.ts","../src/controls/skew.ts","../src/controls/scaleSkew.ts","../src/controls/commonControls.ts","../src/shapes/Object/InteractiveObject.ts","../src/util/applyMixins.ts","../src/shapes/Object/FabricObject.ts","../src/util/misc/isTransparent.ts","../src/util/misc/projectStroke/StrokeProjectionsBase.ts","../src/util/misc/projectStroke/StrokeLineJoinProjections.ts","../src/util/misc/projectStroke/StrokeLineCapProjections.ts","../src/util/misc/projectStroke/index.ts","../src/util/lang_string.ts","../src/util/misc/textStyles.ts","../src/parser/attributes.ts","../src/parser/selectorMatches.ts","../src/parser/elementMatchesRule.ts","../src/parser/doesSomeParentMatch.ts","../src/parser/normalizeAttr.ts","../src/util/internals/cleanupSvgAttribute.ts","../src/parser/parseTransformAttribute.ts","../src/parser/normalizeValue.ts","../src/parser/parseFontDeclaration.ts","../src/parser/parseStyleAttribute.ts","../src/parser/parseStyleString.ts","../src/parser/parseStyleObject.ts","../src/parser/setStrokeFillOpacity.ts","../src/parser/parseAttributes.ts","../src/parser/getGlobalStylesForElement.ts","../src/shapes/Rect.ts","../src/LayoutManager/constants.ts","../src/LayoutManager/LayoutStrategies/utils.ts","../src/LayoutManager/LayoutStrategies/LayoutStrategy.ts","../src/LayoutManager/LayoutStrategies/FitContentLayout.ts","../src/LayoutManager/LayoutManager.ts","../src/shapes/Group.ts","../src/util/misc/groupSVGElements.ts","../src/util/misc/findScaleTo.ts","../src/util/path/regex.ts","../src/util/path/index.ts","../src/util/internals/dom_request.ts","../src/util/transform_matrix_removal.ts","../src/util/misc/mergeClipPaths.ts","../src/util/misc/rotatePoint.ts","../src/canvas/DOMManagers/CanvasDOMManager.ts","../src/canvas/SelectableCanvas.ts","../src/canvas/CanvasOptions.ts","../src/canvas/TextEditingManager.ts","../src/canvas/Canvas.ts","../src/gradient/constants.ts","../src/parser/percent.ts","../src/gradient/parser/parseColorStops.ts","../src/gradient/parser/misc.ts","../src/gradient/parser/parseCoords.ts","../src/gradient/Gradient.ts","../src/Pattern/Pattern.ts","../src/brushes/BaseBrush.ts","../src/shapes/Path.ts","../src/brushes/PencilBrush.ts","../src/shapes/Circle.ts","../src/brushes/CircleBrush.ts","../src/brushes/SprayBrush.ts","../src/brushes/PatternBrush.ts","../src/shapes/Line.ts","../src/shapes/Triangle.ts","../src/shapes/Ellipse.ts","../src/parser/parsePointsAttribute.ts","../src/shapes/Polyline.ts","../src/shapes/Polygon.ts","../src/shapes/Text/constants.ts","../src/shapes/Text/StyledText.ts","../src/shapes/Text/TextSVGExportMixin.ts","../src/shapes/Text/Text.ts","../src/shapes/IText/DraggableTextDelegate.ts","../src/shapes/IText/ITextBehavior.ts","../src/shapes/IText/ITextKeyBehavior.ts","../src/shapes/IText/ITextClickBehavior.ts","../src/shapes/IText/constants.ts","../src/shapes/IText/IText.ts","../src/shapes/Textbox.ts","../src/LayoutManager/LayoutStrategies/ClipPathLayout.ts","../src/LayoutManager/LayoutStrategies/FixedLayout.ts","../src/shapes/ActiveSelection.ts","../src/filters/Canvas2dFilterBackend.ts","../src/filters/WebGLFilterBackend.ts","../src/filters/FilterBackend.ts","../src/shapes/Image.ts","../src/parser/applyViewboxTransform.ts","../src/parser/getTagName.ts","../src/parser/hasInvalidAncestor.ts","../src/parser/getMultipleNodes.ts","../src/parser/recursivelyParseGradientsXlink.ts","../src/parser/getGradientDefs.ts","../src/parser/getCSSRules.ts","../src/parser/elements_parser.ts","../src/parser/parseSVGDocument.ts","../src/parser/parseUseDirectives.ts","../src/parser/loadSVGFromString.ts","../src/parser/loadSVGFromURL.ts","../src/controls/polyControl.ts","../src/filters/utils.ts","../src/filters/shaders/baseFilter.ts","../src/filters/BaseFilter.ts","../src/filters/shaders/blendColor.ts","../src/filters/BlendColor.ts","../src/filters/shaders/blendImage.ts","../src/filters/BlendImage.ts","../src/filters/Blur.ts","../src/filters/shaders/blur.ts","../src/filters/Brightness.ts","../src/filters/shaders/brightness.ts","../src/filters/shaders/colorMatrix.ts","../src/filters/ColorMatrix.ts","../src/filters/ColorMatrixFilters.ts","../src/filters/Composed.ts","../src/filters/Contrast.ts","../src/filters/shaders/constrast.ts","../src/filters/shaders/convolute.ts","../src/filters/Convolute.ts","../src/filters/shaders/gamma.ts","../src/filters/Gamma.ts","../src/filters/shaders/grayscale.ts","../src/filters/Grayscale.ts","../src/filters/HueRotation.ts","../src/filters/Invert.ts","../src/filters/shaders/invert.ts","../src/filters/Noise.ts","../src/filters/shaders/noise.ts","../src/filters/Pixelate.ts","../src/filters/shaders/pixelate.ts","../src/filters/RemoveColor.ts","../src/filters/shaders/removeColor.ts","../src/filters/Resize.ts","../src/filters/Saturation.ts","../src/filters/shaders/saturation.ts","../src/filters/Vibrance.ts","../src/filters/shaders/vibrance.ts"],"sourcesContent":["export type TConfiguration = Partial<BaseConfiguration>;\n\nclass BaseConfiguration {\n  /**\n   * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n   * which is unitless and not rendered equally across browsers.\n   *\n   * Values that work quite well (as of October 2017) are:\n   * - Chrome: 1.5\n   * - Edge: 1.75\n   * - Firefox: 0.9\n   * - Safari: 0.95\n   *\n   * @since 2.0.0\n   * @type Number\n   * @default 1\n   */\n  browserShadowBlurConstant = 1;\n\n  /**\n   * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n   */\n  DPI = 96;\n\n  /**\n   * Device Pixel Ratio\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n   */\n  devicePixelRatio =\n    typeof window !== 'undefined' ? window.devicePixelRatio : 1; // eslint-disable-line no-restricted-globals\n\n  /**\n   * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  perfLimitSizeTotal = 2097152;\n\n  /**\n   * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  maxCacheSideLimit = 4096;\n\n  /**\n   * Lowest pixel limit for cache canvases, set at 256PX\n   * @since 1.7.14\n   * @type Number\n   * @default\n   */\n  minCacheSideLimit = 256;\n\n  /**\n   * When 'true', style information is not retained when copy/pasting text, making\n   * pasted text use destination style.\n   * Defaults to 'false'.\n   * @type Boolean\n   * @default\n   * @deprecated\n   */\n  disableStyleCopyPaste = false;\n\n  /**\n   * Enable webgl for filtering picture is available\n   * A filtering backend will be initialized, this will both take memory and\n   * time since a default 2048x2048 canvas will be created for the gl context\n   * @since 2.0.0\n   * @type Boolean\n   * @default\n   */\n  enableGLFiltering = true;\n\n  /**\n   * if webgl is enabled and available, textureSize will determine the size\n   * of the canvas backend\n   *\n   * In order to support old hardware set to `2048` to avoid OOM\n   *\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  textureSize = 4096;\n\n  /**\n   * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n   * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n   * this has to be set before instantiating the filtering backend ( before filtering the first image )\n   * @type Boolean\n   * @default false\n   */\n  forceGLPutImageData = false;\n\n  /**\n   * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n   * @default true\n   */\n  cachesBoundsOfCurve = true;\n\n  /**\n   * Map of font files\n   * Map<fontFamily, pathToFile> of font files\n   */\n  fontPaths: Record</** fontFamily */ string, /** pathToFile */ string> = {};\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * Used in exporting methods (`toObject`, `toJSON`, `toSVG`)\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   */\n  NUM_FRACTION_DIGITS = 4;\n}\n\nexport class Configuration extends BaseConfiguration {\n  constructor(config?: TConfiguration) {\n    super();\n    this.configure(config);\n  }\n\n  configure(config: TConfiguration = {}) {\n    Object.assign(this, config);\n  }\n\n  /**\n   * Map<fontFamily, pathToFile> of font files\n   */\n  addFonts(\n    paths: Record</** fontFamily */ string, /** pathToFile */ string> = {}\n  ) {\n    this.fontPaths = {\n      ...this.fontPaths,\n      ...paths,\n    };\n  }\n\n  removeFonts(fontFamilys: string[] = []) {\n    fontFamilys.forEach((fontFamily) => {\n      delete this.fontPaths[fontFamily];\n    });\n  }\n\n  clearFonts() {\n    this.fontPaths = {};\n  }\n\n  restoreDefaults<T extends BaseConfiguration>(keys?: (keyof T)[]) {\n    const defaults = new BaseConfiguration() as T;\n    const config =\n      keys?.reduce((acc, key) => {\n        acc[key] = defaults[key];\n        return acc;\n      }, {} as T) || defaults;\n    this.configure(config);\n  }\n}\n\nexport const config = new Configuration();\n","export const log = (\n  severity: 'log' | 'warn' | 'error',\n  ...optionalParams: any[]\n) =>\n  // eslint-disable-next-line no-restricted-syntax\n  console[severity]('fabric', ...optionalParams);\n\nexport class FabricError extends Error {\n  constructor(message?: string, options?: ErrorOptions) {\n    super(`fabric: ${message}`, options);\n  }\n}\n\nexport class SignalAbortedError extends FabricError {\n  constructor(context: string) {\n    super(`${context} 'options.signal' is in 'aborted' state`);\n  }\n}\n","export type GLPrecision = 'lowp' | 'mediump' | 'highp';\n\nexport abstract class GLProbe {\n  declare GLPrecision: GLPrecision | undefined;\n  abstract queryWebGL(canvas: HTMLCanvasElement): void;\n  abstract isSupported(textureSize: number): boolean;\n}\n","import { log } from '../../util/internals/console';\nimport { GLProbe } from './GLProbe';\nimport type { GLPrecision } from './GLProbe';\n\n/**\n * Lazy initialize WebGL constants\n */\nexport class WebGLProbe extends GLProbe {\n  declare maxTextureSize?: number;\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {GLPrecision} Precision to test can be any of following\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  private testPrecision(\n    gl: WebGLRenderingContext,\n    precision: GLPrecision\n  ): boolean {\n    const fragmentSource = `precision ${precision} float;\\nvoid main(){}`;\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    if (!fragmentShader) {\n      return false;\n    }\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    return !!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS);\n  }\n\n  /**\n   * query browser for WebGL\n   */\n  queryWebGL(canvas: HTMLCanvasElement) {\n    const gl = canvas.getContext('webgl');\n    if (gl) {\n      this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      this.GLPrecision = (['highp', 'mediump', 'lowp'] as const).find(\n        (precision) => this.testPrecision(gl, precision)\n      );\n      gl.getExtension('WEBGL_lose_context')!.loseContext();\n      log('log', `WebGL: max texture size ${this.maxTextureSize}`);\n    }\n  }\n\n  isSupported(textureSize: number) {\n    return !!this.maxTextureSize && this.maxTextureSize >= textureSize;\n  }\n}\n","/* eslint-disable no-restricted-globals */\nimport { WebGLProbe } from '../filters/GLProbes/WebGLProbe';\nimport type { TCopyPasteData, TFabricEnv } from './types';\n\nconst copyPasteData: TCopyPasteData = {};\n\nexport const getEnv = (): TFabricEnv => {\n  return {\n    document,\n    window,\n    isTouchSupported:\n      'ontouchstart' in window ||\n      'ontouchstart' in document ||\n      (window && window.navigator && window.navigator.maxTouchPoints > 0),\n    WebGLProbe: new WebGLProbe(),\n    dispose() {\n      // noop\n    },\n    copyPasteData,\n  };\n};\n","/**\n * This file is consumed by fabric.\n * The `./node` and `./browser` files define the env variable that is used by this module.\n * The `./browser` module is defined to be the default env and doesn't set the env at all.\n * This is done in order to support isomorphic usage for browser and node applications\n * since window and document aren't defined at time of import in SSR, we can't set env so we avoid it by deferring to the default env.\n */\n\nimport { config } from '../config';\nimport { getEnv as getBrowserEnv } from './browser';\nimport type { TFabricEnv } from './types';\nimport type { DOMWindow } from 'jsdom';\n\nlet env: TFabricEnv;\n\n/**\n * Sets the environment variables used by fabric.\\\n * This is exposed for special cases, such as configuring a test environment, and should be used with care.\n *\n * **CAUTION**: Must be called before using the package.\n *\n * @example\n * <caption>Passing `window` and `document` objects to fabric (in case they are mocked or something)</caption>\n * import { getEnv, setEnv } from 'fabric';\n * // we want fabric to use the `window` and `document` objects exposed by the environment we are running in.\n * setEnv({ ...getEnv(), window, document });\n * // done with setup, using fabric is now safe\n */\nexport const setEnv = (value: TFabricEnv) => {\n  env = value;\n};\n\n/**\n * In order to support SSR we **MUST** access the browser env only after the window has loaded\n */\nexport const getEnv = () => env || (env = getBrowserEnv());\n\nexport const getFabricDocument = (): Document => getEnv().document;\n\nexport const getFabricWindow = (): (Window & typeof globalThis) | DOMWindow =>\n  getEnv().window;\n\n/**\n * @returns the config value if defined, fallbacks to the environment value\n */\nexport const getDevicePixelRatio = () =>\n  Math.max(config.devicePixelRatio ?? getFabricWindow().devicePixelRatio, 1);\n","import { config } from './config';\nimport type { TRectBounds } from './typedefs';\n\nexport class Cache {\n  /**\n   * Cache of widths of chars in text rendering.\n   */\n  charWidthsCache: Record<\n    /** fontFamily */ string,\n    Record<\n      /** fontStyleCacheKey */ string,\n      Record</** char */ string, /** width */ number>\n    >\n  > = {};\n\n  /**\n   * @return {Object} reference to cache\n   */\n  getFontCache({\n    fontFamily,\n    fontStyle,\n    fontWeight,\n  }: {\n    fontFamily: string;\n    fontStyle: string;\n    fontWeight: string | number;\n  }) {\n    fontFamily = fontFamily.toLowerCase();\n    if (!this.charWidthsCache[fontFamily]) {\n      this.charWidthsCache[fontFamily] = {};\n    }\n    const fontCache = this.charWidthsCache[fontFamily];\n    const cacheKey = `${fontStyle.toLowerCase()}_${(\n      fontWeight + ''\n    ).toLowerCase()}`;\n    if (!fontCache[cacheKey]) {\n      fontCache[cacheKey] = {};\n    }\n    return fontCache[cacheKey];\n  }\n\n  /**\n   * Clear char widths cache for the given font family or all the cache if no\n   * fontFamily is specified.\n   * Use it if you know you are loading fonts in a lazy way and you are not waiting\n   * for custom fonts to load properly when adding text objects to the canvas.\n   * If a text object is added when its own font is not loaded yet, you will get wrong\n   * measurement and so wrong bounding boxes.\n   * After the font cache is cleared, either change the textObject text content or call\n   * initDimensions() to trigger a recalculation\n   * @param {String} [fontFamily] font family to clear\n   */\n  clearFontCache(fontFamily?: string) {\n    fontFamily = (fontFamily || '').toLowerCase();\n    if (!fontFamily) {\n      this.charWidthsCache = {};\n    } else if (this.charWidthsCache[fontFamily]) {\n      delete this.charWidthsCache[fontFamily];\n    }\n  }\n\n  /**\n   * Given current aspect ratio, determines the max width and height that can\n   * respect the total allowed area for the cache.\n   * @param {number} ar aspect ratio\n   * @return {number[]} Limited dimensions X and Y\n   */\n  limitDimsByArea(ar: number) {\n    const { perfLimitSizeTotal } = config;\n    const roughWidth = Math.sqrt(perfLimitSizeTotal * ar);\n    // we are not returning a point on purpose, to avoid circular dependencies\n    // this is an internal utility\n    return [\n      Math.floor(roughWidth),\n      Math.floor(perfLimitSizeTotal / roughWidth),\n    ];\n  }\n\n  /**\n   * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n   * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n   * you do not get any speed benefit and you get a big object in memory.\n   * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n   * can eventually clear it.\n   * It was an internal variable, is accessible since version 2.3.4\n   */\n  boundsOfCurveCache: Record<string, TRectBounds> = {};\n}\n\nexport const cache = new Cache();\n","import type { TMat2D } from './typedefs';\n// use this syntax so babel plugin see this import here\nimport { version } from '../package.json';\n\nexport const VERSION = version;\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noop() {}\n\nexport const halfPI = Math.PI / 2;\nexport const twoMathPi = Math.PI * 2;\nexport const PiBy180 = Math.PI / 180;\n\nexport const iMatrix = Object.freeze([1, 0, 0, 1, 0, 0]) as TMat2D;\nexport const DEFAULT_SVG_FONT_SIZE = 16;\nexport const ALIASING_LIMIT = 2;\n\n/* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\nexport const kRect = 1 - 0.5522847498;\n\nexport const CENTER = 'center';\nexport const LEFT = 'left';\nexport const TOP = 'top';\nexport const BOTTOM = 'bottom';\nexport const RIGHT = 'right';\nexport const NONE = 'none';\n\nexport const reNewline = /\\r?\\n/;\n","import { FabricError } from './util/internals/console';\n\n/*\n * This Map connects the objects type value with their\n * class implementation. It used from any object to understand which are\n * the classes to enlive when requesting a object.type = 'path' for example.\n * Objects uses it for clipPath, Canvas uses it for everything.\n * This is necessary for generic code to run and enlive instances from serialized representation.\n * You can customize which classes get enlived from SVG parsing using this classRegistry.\n * The Registry start empty and gets filled in depending which files you import.\n * If you want to be able to parse arbitrary SVGs or JSON representation of canvases, coming from\n * different sources you will need to import all fabric because you may need all classes.\n */\n\nexport const JSON = 'json';\nexport const SVG = 'svg';\n\nexport class ClassRegistry {\n  declare [JSON]: Map<string, any>;\n  declare [SVG]: Map<string, any>;\n\n  constructor() {\n    this[JSON] = new Map();\n    this[SVG] = new Map();\n  }\n\n  getClass<T>(classType: string): T {\n    const constructor = this[JSON].get(classType);\n    if (!constructor) {\n      throw new FabricError(`No class registered for ${classType}`);\n    }\n    return constructor;\n  }\n\n  setClass(classConstructor: any, classType?: string) {\n    if (classType) {\n      this[JSON].set(classType, classConstructor);\n    } else {\n      this[JSON].set(classConstructor.type, classConstructor);\n      // legacy\n      // @TODO: needs to be removed in fabric 7 or 8\n      this[JSON].set(classConstructor.type.toLowerCase(), classConstructor);\n    }\n  }\n\n  getSVGClass(SVGTagName: string): any {\n    return this[SVG].get(SVGTagName);\n  }\n\n  setSVGClass(classConstructor: any, SVGTagName?: string) {\n    this[SVG].set(\n      SVGTagName ?? classConstructor.type.toLowerCase(),\n      classConstructor\n    );\n  }\n}\n\nexport const classRegistry = new ClassRegistry();\n","import type { StaticCanvas } from '../../canvas/StaticCanvas';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport type { AnimationBase } from './AnimationBase';\n\n/**\n * Array holding all running animations\n */\nclass AnimationRegistry extends Array<AnimationBase> {\n  /**\n   * Remove a single animation using an animation context\n   * @param {AnimationBase} context\n   */\n  remove(context: AnimationBase) {\n    const index = this.indexOf(context);\n    index > -1 && this.splice(index, 1);\n  }\n\n  /**\n   * Cancel all running animations on the next frame\n   */\n  cancelAll() {\n    const animations = this.splice(0);\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n\n  /**\n   * Cancel all running animations attached to a canvas on the next frame\n   * @param {StaticCanvas} canvas\n   */\n  cancelByCanvas(canvas: StaticCanvas) {\n    if (!canvas) {\n      return [];\n    }\n    const animations = this.filter(\n      (animation) =>\n        animation.target === canvas ||\n        (typeof animation.target === 'object' &&\n          (animation.target as FabricObject)?.canvas === canvas)\n    );\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n\n  /**\n   * Cancel all running animations for target on the next frame\n   * @param target\n   */\n  cancelByTarget(target: AnimationBase['target']) {\n    if (!target) {\n      return [];\n    }\n    const animations = this.filter((animation) => animation.target === target);\n    animations.forEach((animation) => animation.abort());\n    return animations;\n  }\n}\n\nexport const runningAnimations = new AnimationRegistry();\n","export type TEventCallback<T = any> = (options: T) => any;\n\ntype EventRegistryObject<E> = {\n  [K in keyof E]?: TEventCallback<E[K]>;\n};\n\n/**\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n * @see {@link http://fabricjs.com/events|Events demo}\n */\nexport class Observable<EventSpec> {\n  private __eventListeners: Record<keyof EventSpec, TEventCallback[]> =\n    {} as Record<keyof EventSpec, TEventCallback[]>;\n\n  /**\n   * Observes specified event\n   * @alias on\n   * @param {string} eventName Event name (eg. 'after:render')\n   * @param {EventRegistryObject} handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Function} disposer\n   */\n  on<K extends keyof EventSpec, E extends EventSpec[K]>(\n    eventName: K,\n    handler: TEventCallback<E>\n  ): VoidFunction;\n  on(handlers: EventRegistryObject<EventSpec>): VoidFunction;\n  on<K extends keyof EventSpec, E extends EventSpec[K]>(\n    arg0: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback<E>\n  ): VoidFunction {\n    if (!this.__eventListeners) {\n      this.__eventListeners = {} as Record<keyof EventSpec, TEventCallback[]>;\n    }\n    if (typeof arg0 === 'object') {\n      // one object with key/value pairs was passed\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        this.on(eventName as K, handler as TEventCallback);\n      });\n      return () => this.off(arg0);\n    } else if (handler) {\n      const eventName = arg0;\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n      return () => this.off(eventName, handler);\n    } else {\n      // noop\n      return () => false;\n    }\n  }\n\n  /**\n   * Observes specified event **once**\n   * @alias once\n   * @param {string} eventName Event name (eg. 'after:render')\n   * @param {EventRegistryObject} handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Function} disposer\n   */\n  once<K extends keyof EventSpec, E extends EventSpec[K]>(\n    eventName: K,\n    handler: TEventCallback<E>\n  ): VoidFunction;\n  once(handlers: EventRegistryObject<EventSpec>): VoidFunction;\n  once<K extends keyof EventSpec, E extends EventSpec[K]>(\n    arg0: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback<E>\n  ): VoidFunction {\n    if (typeof arg0 === 'object') {\n      // one object with key/value pairs was passed\n      const disposers: VoidFunction[] = [];\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        disposers.push(this.once(eventName as K, handler as TEventCallback));\n      });\n      return () => disposers.forEach((d) => d());\n    } else if (handler) {\n      const disposer = this.on<K, E>(\n        arg0,\n        function onceHandler(this: Observable<EventSpec>, ...args) {\n          handler.call(this, ...args);\n          disposer();\n        }\n      );\n      return disposer;\n    } else {\n      // noop\n      return () => false;\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} eventName\n   * @param {Function} [handler]\n   */\n  private _removeEventListener<K extends keyof EventSpec>(\n    eventName: K,\n    handler?: TEventCallback\n  ) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n\n    if (handler) {\n      const eventListener = this.__eventListeners[eventName];\n      const index = eventListener.indexOf(handler);\n      index > -1 && eventListener.splice(index, 1);\n    } else {\n      this.__eventListeners[eventName] = [];\n    }\n  }\n\n  /**\n   * unsubscribe an event listener\n   * @param {string} eventName event name (eg. 'after:render')\n   * @param {TEventCallback} handler event listener to unsubscribe\n   */\n  off<K extends keyof EventSpec>(eventName: K, handler: TEventCallback): void;\n  /**\n   * unsubscribe event listeners\n   * @param handlers handlers key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   */\n  off(handlers: EventRegistryObject<EventSpec>): void;\n  /**\n   * unsubscribe all event listeners\n   */\n  off(): void;\n  off<K extends keyof EventSpec>(\n    arg0?: K | EventRegistryObject<EventSpec>,\n    handler?: TEventCallback\n  ) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (typeof arg0 === 'undefined') {\n      for (const eventName in this.__eventListeners) {\n        this._removeEventListener(eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (typeof arg0 === 'object') {\n      Object.entries(arg0).forEach(([eventName, handler]) => {\n        this._removeEventListener(eventName as K, handler as TEventCallback);\n      });\n    } else {\n      this._removeEventListener(arg0, handler);\n    }\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   */\n  fire<K extends keyof EventSpec>(eventName: K, options?: EventSpec[K]) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    const listenersForEvent = this.__eventListeners[eventName]?.concat();\n    if (listenersForEvent) {\n      for (let i = 0; i < listenersForEvent.length; i++) {\n        listenersForEvent[i].call(this, options || {});\n      }\n    }\n  }\n}\n","export const findIndexRight = <T>(\n  array: T[],\n  predicate: (value: T, index: number, array: T[]) => boolean\n) => {\n  for (let index = array.length - 1; index >= 0; index--) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n};\n","/**\n * Returns random number between 2 specified ones.\n * @param {Number} min lower limit\n * @param {Number} max upper limit\n * @return {Number} random value (between min and max)\n */\nexport const getRandomInt = (min: number, max: number): number =>\n  Math.floor(Math.random() * (max - min + 1)) + min;\n","/**\n *\n * @param value value to check if NaN\n * @param [valueIfNaN]\n * @returns `fallback` is `value is NaN\n */\nexport const ifNaN = (value: number, valueIfNaN?: number) => {\n  return isNaN(value) && typeof valueIfNaN === 'number' ? valueIfNaN : value;\n};\n","/**\n * Removes value from an array.\n * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n * @param {Array} array\n * @param {*} value\n * @return {Array} original array\n */\nexport const removeFromArray = <T>(array: T[], value: T): T[] => {\n  const idx = array.indexOf(value);\n  if (idx !== -1) {\n    array.splice(idx, 1);\n  }\n  return array;\n};\n","import type { TRadian } from '../../typedefs';\nimport { halfPI } from '../../constants';\n\n/**\n * Calculate the cos of an angle, avoiding returning floats for known results\n * This function is here just to avoid getting 0.999999999999999 when dealing\n * with numbers that are really 1 or 0.\n * @param {TRadian} angle the angle\n * @return {Number} the cosin value for angle.\n */\nexport const cos = (angle: TRadian): number => {\n  if (angle === 0) {\n    return 1;\n  }\n  const angleSlice = Math.abs(angle) / halfPI;\n  switch (angleSlice) {\n    case 1:\n    case 3:\n      return 0;\n    case 2:\n      return -1;\n  }\n  return Math.cos(angle);\n};\n","import type { TRadian } from '../../typedefs';\nimport { halfPI } from '../../constants';\n\n/**\n * Calculate the cos of an angle, avoiding returning floats for known results\n * This function is here just to avoid getting 0.999999999999999 when dealing\n * with numbers that are really 1 or 0.\n * @param {TRadian} angle the angle\n * @return {Number} the sin value for angle.\n */\nexport const sin = (angle: TRadian): number => {\n  if (angle === 0) {\n    return 0;\n  }\n  const angleSlice = angle / halfPI;\n  const value = Math.sign(angle);\n  switch (angleSlice) {\n    case 1:\n      return value;\n    case 2:\n      return 0;\n    case 3:\n      return -value;\n  }\n  return Math.sin(angle);\n};\n","import type { TMat2D, TRadian } from './typedefs';\nimport { cos } from './util/misc/cos';\nimport { sin } from './util/misc/sin';\n\nexport interface XY {\n  x: number;\n  y: number;\n}\n\n/**\n * Adaptation of work of Kevin Lindsey(kevin@kevlindev.com)\n */\nexport class Point implements XY {\n  declare x: number;\n\n  declare y: number;\n\n  constructor();\n  constructor(x: number, y: number);\n  constructor(point?: XY);\n  constructor(arg0: number | XY = 0, y = 0) {\n    if (typeof arg0 === 'object') {\n      this.x = arg0.x;\n      this.y = arg0.y;\n    } else {\n      this.x = arg0;\n      this.y = y;\n    }\n  }\n\n  /**\n   * Adds another point to this one and returns another one\n   * @param {XY} that\n   * @return {Point} new Point instance with added values\n   */\n  add(that: XY): Point {\n    return new Point(this.x + that.x, this.y + that.y);\n  }\n\n  /**\n   * Adds another point to this one\n   * @param {XY} that\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  addEquals(that: XY): Point {\n    this.x += that.x;\n    this.y += that.y;\n    return this;\n  }\n\n  /**\n   * Adds value to this point and returns a new one\n   * @param {Number} scalar\n   * @return {Point} new Point with added value\n   */\n  scalarAdd(scalar: number): Point {\n    return new Point(this.x + scalar, this.y + scalar);\n  }\n\n  /**\n   * Adds value to this point\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarAddEquals(scalar: number): Point {\n    this.x += scalar;\n    this.y += scalar;\n    return this;\n  }\n\n  /**\n   * Subtracts another point from this point and returns a new one\n   * @param {XY} that\n   * @return {Point} new Point object with subtracted values\n   */\n  subtract(that: XY): Point {\n    return new Point(this.x - that.x, this.y - that.y);\n  }\n\n  /**\n   * Subtracts another point from this point\n   * @param {XY} that\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  subtractEquals(that: XY): Point {\n    this.x -= that.x;\n    this.y -= that.y;\n    return this;\n  }\n\n  /**\n   * Subtracts value from this point and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarSubtract(scalar: number): Point {\n    return new Point(this.x - scalar, this.y - scalar);\n  }\n\n  /**\n   * Subtracts value from this point\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarSubtractEquals(scalar: number): Point {\n    this.x -= scalar;\n    this.y -= scalar;\n    return this;\n  }\n\n  /**\n   * Multiplies this point by another value and returns a new one\n   * @param {XY} that\n   * @return {Point}\n   */\n  multiply(that: XY): Point {\n    return new Point(this.x * that.x, this.y * that.y);\n  }\n\n  /**\n   * Multiplies this point by a value and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarMultiply(scalar: number): Point {\n    return new Point(this.x * scalar, this.y * scalar);\n  }\n\n  /**\n   * Multiplies this point by a value\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarMultiplyEquals(scalar: number): Point {\n    this.x *= scalar;\n    this.y *= scalar;\n    return this;\n  }\n\n  /**\n   * Divides this point by another and returns a new one\n   * @param {XY} that\n   * @return {Point}\n   */\n  divide(that: XY): Point {\n    return new Point(this.x / that.x, this.y / that.y);\n  }\n\n  /**\n   * Divides this point by a value and returns a new one\n   * @param {Number} scalar\n   * @return {Point}\n   */\n  scalarDivide(scalar: number): Point {\n    return new Point(this.x / scalar, this.y / scalar);\n  }\n\n  /**\n   * Divides this point by a value\n   * @param {Number} scalar\n   * @return {Point} thisArg\n   * @chainable\n   * @deprecated\n   */\n  scalarDivideEquals(scalar: number): Point {\n    this.x /= scalar;\n    this.y /= scalar;\n    return this;\n  }\n\n  /**\n   * Returns true if this point is equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  eq(that: XY): boolean {\n    return this.x === that.x && this.y === that.y;\n  }\n\n  /**\n   * Returns true if this point is less than another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  lt(that: XY): boolean {\n    return this.x < that.x && this.y < that.y;\n  }\n\n  /**\n   * Returns true if this point is less than or equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  lte(that: XY): boolean {\n    return this.x <= that.x && this.y <= that.y;\n  }\n\n  /**\n\n   * Returns true if this point is greater another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  gt(that: XY): boolean {\n    return this.x > that.x && this.y > that.y;\n  }\n\n  /**\n   * Returns true if this point is greater than or equal to another one\n   * @param {XY} that\n   * @return {Boolean}\n   */\n  gte(that: XY): boolean {\n    return this.x >= that.x && this.y >= that.y;\n  }\n\n  /**\n   * Returns new point which is the result of linear interpolation with this one and another one\n   * @param {XY} that\n   * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n   * @return {Point}\n   */\n  lerp(that: XY, t = 0.5): Point {\n    t = Math.max(Math.min(1, t), 0);\n    return new Point(\n      this.x + (that.x - this.x) * t,\n      this.y + (that.y - this.y) * t\n    );\n  }\n\n  /**\n   * Returns distance from this point and another one\n   * @param {XY} that\n   * @return {Number}\n   */\n  distanceFrom(that: XY): number {\n    const dx = this.x - that.x,\n      dy = this.y - that.y;\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  /**\n   * Returns the point between this point and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  midPointFrom(that: XY): Point {\n    return this.lerp(that);\n  }\n\n  /**\n   * Returns a new point which is the min of this and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  min(that: XY): Point {\n    return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n  }\n\n  /**\n   * Returns a new point which is the max of this and another one\n   * @param {XY} that\n   * @return {Point}\n   */\n  max(that: XY): Point {\n    return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n  }\n\n  /**\n   * Returns string representation of this point\n   * @return {String}\n   */\n  toString(): string {\n    return `${this.x},${this.y}`;\n  }\n\n  /**\n   * Sets x/y of this point\n   * @param {Number} x\n   * @param {Number} y\n   * @chainable\n   */\n  setXY(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Sets x of this point\n   * @param {Number} x\n   * @chainable\n   */\n  setX(x: number) {\n    this.x = x;\n    return this;\n  }\n\n  /**\n   * Sets y of this point\n   * @param {Number} y\n   * @chainable\n   */\n  setY(y: number) {\n    this.y = y;\n    return this;\n  }\n\n  /**\n   * Sets x/y of this point from another point\n   * @param {XY} that\n   * @chainable\n   */\n  setFromPoint(that: XY) {\n    this.x = that.x;\n    this.y = that.y;\n    return this;\n  }\n\n  /**\n   * Swaps x/y of this point and another point\n   * @param {XY} that\n   */\n  swap(that: XY) {\n    const x = this.x,\n      y = this.y;\n    this.x = that.x;\n    this.y = that.y;\n    that.x = x;\n    that.y = y;\n  }\n\n  /**\n   * return a cloned instance of the point\n   * @return {Point}\n   */\n  clone(): Point {\n    return new Point(this.x, this.y);\n  }\n\n  /**\n   * Rotates `point` around `origin` with `radians`\n   * @static\n   * @memberOf fabric.util\n   * @param {XY} origin The origin of the rotation\n   * @param {TRadian} radians The radians of the angle for the rotation\n   * @return {Point} The new rotated point\n   */\n  rotate(radians: TRadian, origin: XY = ZERO): Point {\n    // TODO benchmark and verify the add and subtract how much cost\n    // and then in case early return if no origin is passed\n    const sinus = sin(radians),\n      cosinus = cos(radians);\n    const p = this.subtract(origin);\n    const rotated = new Point(\n      p.x * cosinus - p.y * sinus,\n      p.x * sinus + p.y * cosinus\n    );\n    return rotated.add(origin);\n  }\n\n  /**\n   * Apply transform t to point p\n   * @static\n   * @memberOf fabric.util\n   * @param  {TMat2D} t The transform\n   * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n   * @return {Point} The transformed point\n   */\n  transform(t: TMat2D, ignoreOffset = false): Point {\n    return new Point(\n      t[0] * this.x + t[2] * this.y + (ignoreOffset ? 0 : t[4]),\n      t[1] * this.x + t[3] * this.y + (ignoreOffset ? 0 : t[5])\n    );\n  }\n}\n\nexport const ZERO = new Point(0, 0);\n","import type { Constructor, TBBox } from './typedefs';\nimport { removeFromArray } from './util/internals';\nimport { Point } from './Point';\nimport type { ActiveSelection } from './shapes/ActiveSelection';\nimport type { Group } from './shapes/Group';\nimport type { InteractiveFabricObject } from './shapes/Object/InteractiveObject';\nimport type { FabricObject } from './shapes/Object/FabricObject';\n\nexport const isCollection = (\n  fabricObject?: FabricObject\n): fabricObject is Group | ActiveSelection => {\n  return !!fabricObject && Array.isArray((fabricObject as Group)._objects);\n};\n\nexport function createCollectionMixin<TBase extends Constructor>(Base: TBase) {\n  class Collection extends Base {\n    /**\n     * @type {FabricObject[]}\n     * @TODO needs to end up in the constructor too\n     */\n    _objects: FabricObject[] = [];\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onObjectAdded(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onObjectRemoved(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _onStackOrderChanged(object: FabricObject) {\n      // subclasses should override this method\n    }\n\n    /**\n     * Adds objects to collection\n     * Objects should be instances of (or inherit from) FabricObject\n     * @param {...FabricObject[]} objects to add\n     * @returns {number} new array length\n     */\n    add(...objects: FabricObject[]): number {\n      const size = this._objects.push(...objects);\n      objects.forEach((object) => this._onObjectAdded(object));\n      return size;\n    }\n\n    /**\n     * Inserts an object into collection at specified index\n     * @param {number} index Index to insert object at\n     * @param {...FabricObject[]} objects Object(s) to insert\n     * @returns {number} new array length\n     */\n    insertAt(index: number, ...objects: FabricObject[]) {\n      this._objects.splice(index, 0, ...objects);\n      objects.forEach((object) => this._onObjectAdded(object));\n      return this._objects.length;\n    }\n\n    /**\n     * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n     * @private\n     * @param {...FabricObject[]} objects objects to remove\n     * @returns {FabricObject[]} removed objects\n     */\n    remove(...objects: FabricObject[]) {\n      const array = this._objects,\n        removed: FabricObject[] = [];\n      objects.forEach((object) => {\n        const index = array.indexOf(object);\n        // only call onObjectRemoved if an object was actually removed\n        if (index !== -1) {\n          array.splice(index, 1);\n          removed.push(object);\n          this._onObjectRemoved(object);\n        }\n      });\n      return removed;\n    }\n\n    /**\n     * Executes given function for each object in this group\n     * A simple shortcut for getObjects().forEach, before es6 was more complicated,\n     * now is just a shortcut.\n     * @param {Function} callback\n     *                   Callback invoked with current object as first argument,\n     *                   index - as second and an array of all objects - as third.\n     */\n    forEachObject(\n      callback: (\n        object: FabricObject,\n        index: number,\n        array: FabricObject[]\n      ) => any\n    ) {\n      this.getObjects().forEach((object, index, objects) =>\n        callback(object, index, objects)\n      );\n    }\n\n    /**\n     * Returns an array of children objects of this instance\n     * @param {...String} [types] When specified, only objects of these types are returned\n     * @return {Array}\n     */\n    getObjects(...types: string[]) {\n      if (types.length === 0) {\n        return [...this._objects];\n      }\n      return this._objects.filter((o) => o.isType(...types));\n    }\n\n    /**\n     * Returns object at specified index\n     * @param {Number} index\n     * @return {Object} object at index\n     */\n    item(index: number) {\n      return this._objects[index];\n    }\n\n    /**\n     * Returns true if collection contains no objects\n     * @return {Boolean} true if collection is empty\n     */\n    isEmpty() {\n      return this._objects.length === 0;\n    }\n\n    /**\n     * Returns a size of a collection (i.e: length of an array containing its objects)\n     * @return {Number} Collection size\n     */\n    size() {\n      return this._objects.length;\n    }\n\n    /**\n     * Returns true if collection contains an object.\\\n     * **Prefer using {@link FabricObject#isDescendantOf} for performance reasons**\n     * instead of `a.contains(b)` use `b.isDescendantOf(a)`\n     * @param {Object} object Object to check against\n     * @param {Boolean} [deep=false] `true` to check all descendants, `false` to check only `_objects`\n     * @return {Boolean} `true` if collection contains an object\n     */\n    contains(object: FabricObject, deep?: boolean): boolean {\n      if (this._objects.includes(object)) {\n        return true;\n      } else if (deep) {\n        return this._objects.some(\n          (obj) =>\n            obj instanceof Collection &&\n            (obj as unknown as Collection).contains(object, true)\n        );\n      }\n      return false;\n    }\n\n    /**\n     * Returns number representation of a collection complexity\n     * @return {Number} complexity\n     */\n    complexity() {\n      return this._objects.reduce((memo, current) => {\n        memo += current.complexity ? current.complexity() : 0;\n        return memo;\n      }, 0);\n    }\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @returns {boolean} true if change occurred\n     */\n    sendObjectToBack(object: FabricObject) {\n      if (!object || object === this._objects[0]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.unshift(object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @returns {boolean} true if change occurred\n     */\n    bringObjectToFront(object: FabricObject) {\n      if (!object || object === this._objects[this._objects.length - 1]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.push(object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional parameter, `intersecting` allows to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @returns {boolean} true if change occurred\n     */\n    sendObjectBackwards(object: FabricObject, intersecting?: boolean) {\n      if (!object) {\n        return false;\n      }\n      const idx = this._objects.indexOf(object);\n      if (idx !== 0) {\n        // if object is not on the bottom of stack\n        const newIdx = this.findNewLowerIndex(object, idx, intersecting);\n        removeFromArray(this._objects, object);\n        this._objects.splice(newIdx, 0, object);\n        this._onStackOrderChanged(object);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional parameter, intersecting allows to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @returns {boolean} true if change occurred\n     */\n    bringObjectForward(object: FabricObject, intersecting?: boolean) {\n      if (!object) {\n        return false;\n      }\n      const idx = this._objects.indexOf(object);\n      if (idx !== this._objects.length - 1) {\n        // if object is not on top of stack (last item in an array)\n        const newIdx = this.findNewUpperIndex(object, idx, intersecting);\n        removeFromArray(this._objects, object);\n        this._objects.splice(newIdx, 0, object);\n        this._onStackOrderChanged(object);\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {number} index Position to move to\n     * @returns {boolean} true if change occurred\n     */\n    moveObjectTo(object: FabricObject, index: number) {\n      if (object === this._objects[index]) {\n        return false;\n      }\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      this._onStackOrderChanged(object);\n      return true;\n    }\n\n    findNewLowerIndex(\n      object: FabricObject,\n      idx: number,\n      intersecting?: boolean\n    ) {\n      let newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n        // traverse down the stack looking for the nearest intersecting object\n        for (let i = idx - 1; i >= 0; --i) {\n          if (object.isOverlapping(this._objects[i])) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    }\n\n    findNewUpperIndex(\n      object: FabricObject,\n      idx: number,\n      intersecting?: boolean\n    ) {\n      let newIdx;\n\n      if (intersecting) {\n        newIdx = idx;\n        // traverse up the stack looking for the nearest intersecting object\n        for (let i = idx + 1; i < this._objects.length; ++i) {\n          if (object.isOverlapping(this._objects[i])) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    }\n\n    /**\n     * Given a bounding box, return all the objects of the collection that are contained in the bounding box.\n     * If `includeIntersecting` is true, return also the objects that intersect the bounding box as well.\n     * This is meant to work with selection. Is not a generic method.\n     * @param {TBBox} bbox a bounding box in scene coordinates\n     * @param {{ includeIntersecting?: boolean }} options an object with includeIntersecting\n     * @returns array of objects contained in the bounding box, ordered from top to bottom stacking wise\n     */\n    collectObjects(\n      { left, top, width, height }: TBBox,\n      { includeIntersecting = true }: { includeIntersecting?: boolean } = {}\n    ) {\n      const objects: InteractiveFabricObject[] = [],\n        tl = new Point(left, top),\n        br = tl.add(new Point(width, height));\n\n      // we iterate reverse order to collect top first in case of click.\n      for (let i = this._objects.length - 1; i >= 0; i--) {\n        const object = this._objects[i] as unknown as InteractiveFabricObject;\n        if (\n          object.selectable &&\n          object.visible &&\n          ((includeIntersecting && object.intersectsWithRect(tl, br)) ||\n            object.isContainedWithinRect(tl, br) ||\n            (includeIntersecting && object.containsPoint(tl)) ||\n            (includeIntersecting && object.containsPoint(br)))\n        ) {\n          objects.push(object);\n        }\n      }\n\n      return objects;\n    }\n  }\n\n  // https://github.com/microsoft/TypeScript/issues/32080\n  return Collection as typeof Collection & TBase;\n}\n","import { Observable } from './Observable';\n\nexport class CommonMethods<EventSpec> extends Observable<EventSpec> {\n  /**\n   * Sets object's properties from options, for initialization only\n   * @protected\n   * @param {Object} [options] Options object\n   */\n  protected _setOptions(options: any = {}) {\n    for (const prop in options) {\n      this.set(prop, options[prop]);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setObject(obj: Record<string, any>) {\n    for (const prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  }\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   */\n  set(key: string | Record<string, any>, value?: any) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    } else {\n      this._set(key, value);\n    }\n    return this;\n  }\n\n  _set(key: string, value: any) {\n    this[key as keyof this] = value;\n  }\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   */\n  toggle(property: string) {\n    const value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  }\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get(property: string): any {\n    return this[property as keyof this];\n  }\n}\n","import { getFabricWindow } from '../../env';\n\nexport function requestAnimFrame(callback: FrameRequestCallback): number {\n  return getFabricWindow().requestAnimationFrame(callback);\n}\n\nexport function cancelAnimFrame(handle: number): void {\n  return getFabricWindow().cancelAnimationFrame(handle);\n}\n","let id = 0;\n\nexport const uid = () => id++;\n","import { getFabricDocument } from '../../env';\nimport type { ImageFormat } from '../../typedefs';\nimport { FabricError } from '../internals/console';\n/**\n * Creates canvas element\n * @return {CanvasElement} initialized canvas element\n */\nexport const createCanvasElement = (): HTMLCanvasElement => {\n  const element = getFabricDocument().createElement('canvas');\n  if (!element || typeof element.getContext === 'undefined') {\n    throw new FabricError('Failed to create `canvas` element');\n  }\n  return element;\n};\n\n/**\n * Creates image element (works on client and node)\n * @return {HTMLImageElement} HTML image element\n */\nexport const createImage = (): HTMLImageElement =>\n  getFabricDocument().createElement('img');\n\n/**\n * Creates a canvas element that is a copy of another and is also painted\n * @param {CanvasElement} canvas to copy size and content of\n * @return {CanvasElement} initialized canvas element\n */\nexport const copyCanvasElement = (\n  canvas: HTMLCanvasElement\n): HTMLCanvasElement => {\n  const newCanvas = createCanvasElement();\n  newCanvas.width = canvas.width;\n  newCanvas.height = canvas.height;\n  newCanvas.getContext('2d')?.drawImage(canvas, 0, 0);\n  return newCanvas;\n};\n\n/**\n * since 2.6.0 moved from canvas instance to utility.\n * possibly useless\n * @param {CanvasElement} canvasEl to copy size and content of\n * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n * @param {Number} quality <= 1 and > 0\n * @return {String} data url\n */\nexport const toDataURL = (\n  canvasEl: HTMLCanvasElement,\n  format: ImageFormat,\n  quality: number\n) => canvasEl.toDataURL(`image/${format}`, quality);\n\nexport const isHTMLCanvas = (\n  canvas?: HTMLCanvasElement | string\n): canvas is HTMLCanvasElement => {\n  return !!canvas && (canvas as HTMLCanvasElement).getContext !== undefined;\n};\n","import type { TRadian, TDegree } from '../../typedefs';\nimport { PiBy180 } from '../../constants';\n\n/**\n * Transforms degrees to radians.\n * @param {TDegree} degrees value in degrees\n * @return {TRadian} value in radians\n */\nexport const degreesToRadians = (degrees: TDegree): TRadian =>\n  (degrees * PiBy180) as TRadian;\n\n/**\n * Transforms radians to degrees.\n * @param {TRadian} radians value in radians\n * @return {TDegree} value in degrees\n */\nexport const radiansToDegrees = (radians: TRadian): TDegree =>\n  (radians / PiBy180) as TDegree;\n","import { iMatrix } from '../../constants';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport type { TDegree, TRadian, TMat2D } from '../../typedefs';\nimport { cos } from './cos';\nimport { degreesToRadians, radiansToDegrees } from './radiansDegreesConversion';\nimport { sin } from './sin';\n\nexport type TRotateMatrixArgs = {\n  angle?: TDegree;\n};\n\nexport type TTranslateMatrixArgs = {\n  translateX?: number;\n  translateY?: number;\n};\n\nexport type TScaleMatrixArgs = {\n  scaleX?: number;\n  scaleY?: number;\n  flipX?: boolean;\n  flipY?: boolean;\n  skewX?: TDegree;\n  skewY?: TDegree;\n};\n\nexport type TComposeMatrixArgs = TTranslateMatrixArgs &\n  TRotateMatrixArgs &\n  TScaleMatrixArgs;\n\nexport type TQrDecomposeOut = Required<\n  Omit<TComposeMatrixArgs, 'flipX' | 'flipY'>\n>;\n\nexport const isIdentityMatrix = (mat: TMat2D) =>\n  mat.every((value, index) => value === iMatrix[index]);\n\n/**\n * Apply transform t to point p\n * @deprecated use {@link Point#transform}\n * @param  {Point | XY} p The point to transform\n * @param  {Array} t The transform\n * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n * @return {Point} The transformed point\n */\nexport const transformPoint = (\n  p: XY,\n  t: TMat2D,\n  ignoreOffset?: boolean\n): Point => new Point(p).transform(t, ignoreOffset);\n\n/**\n * Invert transformation t\n * @param {Array} t The transform\n * @return {Array} The inverted transform\n */\nexport const invertTransform = (t: TMat2D): TMat2D => {\n  const a = 1 / (t[0] * t[3] - t[1] * t[2]),\n    r = [a * t[3], -a * t[1], -a * t[2], a * t[0], 0, 0] as TMat2D,\n    { x, y } = new Point(t[4], t[5]).transform(r, true);\n  r[4] = -x;\n  r[5] = -y;\n  return r;\n};\n\n/**\n * Multiply matrix A by matrix B to nest transformations\n * @param  {TMat2D} a First transformMatrix\n * @param  {TMat2D} b Second transformMatrix\n * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n * @return {TMat2D} The product of the two transform matrices\n */\nexport const multiplyTransformMatrices = (\n  a: TMat2D,\n  b: TMat2D,\n  is2x2?: boolean\n): TMat2D =>\n  [\n    a[0] * b[0] + a[2] * b[1],\n    a[1] * b[0] + a[3] * b[1],\n    a[0] * b[2] + a[2] * b[3],\n    a[1] * b[2] + a[3] * b[3],\n    is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n    is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5],\n  ] as TMat2D;\n\n/**\n * Multiplies {@link matrices} such that a matrix defines the plane for the rest of the matrices **after** it\n *\n * `multiplyTransformMatrixArray([A, B, C, D])` is equivalent to `A(B(C(D)))`\n *\n * @param matrices an array of matrices\n * @param [is2x2] flag to multiply matrices as 2x2 matrices\n * @returns the multiplication product\n */\nexport const multiplyTransformMatrixArray = (\n  matrices: (TMat2D | undefined | null | false)[],\n  is2x2?: boolean\n) =>\n  matrices.reduceRight(\n    (product: TMat2D, curr) =>\n      curr ? multiplyTransformMatrices(curr, product, is2x2) : product,\n    iMatrix\n  );\n\nexport const calcPlaneRotation = ([a, b]: TMat2D) =>\n  Math.atan2(b, a) as TRadian;\n\n/**\n * Decomposes standard 2x3 matrix into transform components\n * @param  {TMat2D} a transformMatrix\n * @return {Object} Components of transform\n */\nexport const qrDecompose = (a: TMat2D): TQrDecomposeOut => {\n  const angle = calcPlaneRotation(a),\n    denom = Math.pow(a[0], 2) + Math.pow(a[1], 2),\n    scaleX = Math.sqrt(denom),\n    scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX,\n    skewX = Math.atan2(a[0] * a[2] + a[1] * a[3], denom);\n  return {\n    angle: radiansToDegrees(angle),\n    scaleX,\n    scaleY,\n    skewX: radiansToDegrees(skewX),\n    skewY: 0 as TDegree,\n    translateX: a[4] || 0,\n    translateY: a[5] || 0,\n  };\n};\n\n/**\n * Generate a translation matrix\n *\n * A translation matrix in the form of\n * [ 1 0 x ]\n * [ 0 1 y ]\n * [ 0 0 1 ]\n *\n * See @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#translate for more details\n *\n * @param {number} x translation on X axis\n * @param {number} [y] translation on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createTranslateMatrix = (x: number, y = 0): TMat2D => [\n  1,\n  0,\n  0,\n  1,\n  x,\n  y,\n];\n\n/**\n * Generate a rotation matrix around around a point (x,y), defaulting to (0,0)\n *\n * A matrix in the form of\n * [cos(a) -sin(a) -x*cos(a)+y*sin(a)+x]\n * [sin(a)  cos(a) -x*sin(a)-y*cos(a)+y]\n * [0       0      1                 ]\n *\n *\n * @param {TDegree} angle rotation in degrees\n * @param {XY} [pivotPoint] pivot point to rotate around\n * @returns {TMat2D} matrix\n */\nexport function createRotateMatrix(\n  { angle = 0 }: TRotateMatrixArgs = {},\n  { x = 0, y = 0 }: Partial<XY> = {}\n): TMat2D {\n  const angleRadiant = degreesToRadians(angle),\n    cosValue = cos(angleRadiant),\n    sinValue = sin(angleRadiant);\n  return [\n    cosValue,\n    sinValue,\n    -sinValue,\n    cosValue,\n    x ? x - (cosValue * x - sinValue * y) : 0,\n    y ? y - (sinValue * x + cosValue * y) : 0,\n  ];\n}\n\n/**\n * Generate a scale matrix around the point (0,0)\n *\n * A matrix in the form of\n * [x 0 0]\n * [0 y 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#scale\n *\n * @param {number} x scale on X axis\n * @param {number} [y] scale on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createScaleMatrix = (x: number, y: number = x): TMat2D => [\n  x,\n  0,\n  0,\n  y,\n  0,\n  0,\n];\n\nexport const angleToSkew = (angle: TDegree) =>\n  Math.tan(degreesToRadians(angle));\n\nexport const skewToAngle = (value: TRadian) =>\n  radiansToDegrees(Math.atan(value));\n\n/**\n * Generate a skew matrix for the X axis\n *\n * A matrix in the form of\n * [1 x 0]\n * [0 1 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#skewx\n *\n * @param {TDegree} skewValue translation on X axis\n * @returns {TMat2D} matrix\n */\nexport const createSkewXMatrix = (skewValue: TDegree): TMat2D => [\n  1,\n  0,\n  angleToSkew(skewValue),\n  1,\n  0,\n  0,\n];\n\n/**\n * Generate a skew matrix for the Y axis\n *\n * A matrix in the form of\n * [1 0 0]\n * [y 1 0]\n * [0 0 1]\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform#skewy\n *\n * @param {TDegree} skewValue translation on Y axis\n * @returns {TMat2D} matrix\n */\nexport const createSkewYMatrix = (skewValue: TDegree): TMat2D => [\n  1,\n  angleToSkew(skewValue),\n  0,\n  1,\n  0,\n  0,\n];\n\n/**\n * Returns a transform matrix starting from an object of the same kind of\n * the one returned from qrDecompose, useful also if you want to calculate some\n * transformations from an object that is not enlived yet.\n * is called DimensionsTransformMatrix because those properties are the one that influence\n * the size of the resulting box of the object.\n * @param  {Object} options\n * @param  {Number} [options.scaleX]\n * @param  {Number} [options.scaleY]\n * @param  {Boolean} [options.flipX]\n * @param  {Boolean} [options.flipY]\n * @param  {Number} [options.skewX]\n * @param  {Number} [options.skewY]\n * @return {Number[]} transform matrix\n */\nexport const calcDimensionsMatrix = ({\n  scaleX = 1,\n  scaleY = 1,\n  flipX = false,\n  flipY = false,\n  skewX = 0 as TDegree,\n  skewY = 0 as TDegree,\n}: TScaleMatrixArgs) => {\n  return multiplyTransformMatrixArray(\n    [\n      createScaleMatrix(flipX ? -scaleX : scaleX, flipY ? -scaleY : scaleY),\n      skewX && createSkewXMatrix(skewX),\n      skewY && createSkewYMatrix(skewY),\n    ],\n    true\n  );\n};\n\n/**\n * Returns a transform matrix starting from an object of the same kind of\n * the one returned from qrDecompose, useful also if you want to calculate some\n * transformations from an object that is not enlived yet\n * @param  {Object} options\n * @param  {Number} [options.angle]\n * @param  {Number} [options.scaleX]\n * @param  {Number} [options.scaleY]\n * @param  {Boolean} [options.flipX]\n * @param  {Boolean} [options.flipY]\n * @param  {Number} [options.skewX]\n * @param  {Number} [options.skewY]\n * @param  {Number} [options.translateX]\n * @param  {Number} [options.translateY]\n * @return {Number[]} transform matrix\n */\nexport const composeMatrix = ({\n  translateX = 0,\n  translateY = 0,\n  angle = 0 as TDegree,\n  ...otherOptions\n}: TComposeMatrixArgs): TMat2D => {\n  return multiplyTransformMatrixArray([\n    createTranslateMatrix(translateX, translateY),\n    angle && createRotateMatrix({ angle }),\n    calcDimensionsMatrix(otherOptions),\n  ]);\n};\n","import { noop } from '../../constants';\nimport type { Pattern } from '../../Pattern';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport type {\n  Abortable,\n  Constructor,\n  TCrossOrigin,\n  TFiller,\n} from '../../typedefs';\nimport { createImage } from './dom';\nimport { classRegistry } from '../../ClassRegistry';\nimport type { BaseFilter } from '../../filters/BaseFilter';\nimport type { FabricObject as BaseFabricObject } from '../../shapes/Object/Object';\nimport { FabricError, SignalAbortedError } from '../internals/console';\nimport type { Shadow } from '../../Shadow';\n\nexport type LoadImageOptions = Abortable & {\n  /**\n   * cors value for the image loading, default to anonymous\n   */\n  crossOrigin?: TCrossOrigin;\n};\n\n/**\n * Loads image element from given url and resolve it, or catch.\n * @param {String} url URL representing an image\n * @param {LoadImageOptions} [options] image loading options\n * @returns {Promise<HTMLImageElement>} the loaded image.\n */\nexport const loadImage = (\n  url: string,\n  { signal, crossOrigin = null }: LoadImageOptions = {}\n) =>\n  new Promise<HTMLImageElement>(function (resolve, reject) {\n    if (signal && signal.aborted) {\n      return reject(new SignalAbortedError('loadImage'));\n    }\n    const img = createImage();\n    let abort: EventListenerOrEventListenerObject;\n    if (signal) {\n      abort = function (err: Event) {\n        img.src = '';\n        reject(err);\n      };\n      signal.addEventListener('abort', abort, { once: true });\n    }\n    const done = function () {\n      img.onload = img.onerror = null;\n      abort && signal?.removeEventListener('abort', abort);\n      resolve(img);\n    };\n    if (!url) {\n      done();\n      return;\n    }\n    img.onload = done;\n    img.onerror = function () {\n      abort && signal?.removeEventListener('abort', abort);\n      reject(new FabricError(`Error loading ${img.src}`));\n    };\n    crossOrigin && (img.crossOrigin = crossOrigin);\n    img.src = url;\n  });\n\nexport type EnlivenObjectOptions = Abortable & {\n  /**\n   * Method for further parsing of object elements,\n   * called after each fabric object created.\n   */\n  reviver?: <\n    T extends BaseFabricObject | FabricObject | BaseFilter | Shadow | TFiller\n  >(\n    serializedObj: Record<string, any>,\n    instance: T\n  ) => void;\n};\n\n/**\n * Creates corresponding fabric instances from their object representations\n * @param {Object[]} objects Objects to enliven\n * @param {EnlivenObjectOptions} [options]\n * @param {(serializedObj: object, instance: FabricObject) => any} [options.reviver] Method for further parsing of object elements,\n * called after each fabric object created.\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @returns {Promise<FabricObject[]>}\n */\nexport const enlivenObjects = <\n  T extends BaseFabricObject | FabricObject | BaseFilter | Shadow | TFiller\n>(\n  objects: any[],\n  { signal, reviver = noop }: EnlivenObjectOptions = {}\n) =>\n  new Promise<T[]>((resolve, reject) => {\n    const instances: T[] = [];\n    signal && signal.addEventListener('abort', reject, { once: true });\n    Promise.all(\n      objects.map((obj) =>\n        classRegistry\n          .getClass<\n            Constructor<T> & {\n              fromObject(options: any, context: Abortable): Promise<T>;\n            }\n          >(obj.type)\n          .fromObject(obj, { signal })\n          .then((fabricInstance) => {\n            reviver(obj, fabricInstance);\n            instances.push(fabricInstance);\n            return fabricInstance;\n          })\n      )\n    )\n      .then(resolve)\n      .catch((error) => {\n        // cleanup\n        instances.forEach((instance) => {\n          (instance as FabricObject).dispose &&\n            (instance as FabricObject).dispose();\n        });\n        reject(error);\n      })\n      .finally(() => {\n        signal && signal.removeEventListener('abort', reject);\n      });\n  });\n\n/**\n * Creates corresponding fabric instances residing in an object, e.g. `clipPath`\n * @param {Object} object with properties to enlive ( fill, stroke, clipPath, path )\n * @param {object} [options]\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @returns {Promise<Record<string, FabricObject | TFiller | null>>} the input object with enlived values\n */\nexport const enlivenObjectEnlivables = <\n  R = Record<string, FabricObject | TFiller | null>\n>(\n  serializedObject: any,\n  { signal }: Abortable = {}\n) =>\n  new Promise<R>((resolve, reject) => {\n    const instances: (FabricObject | TFiller | Shadow)[] = [];\n    signal && signal.addEventListener('abort', reject, { once: true });\n    // enlive every possible property\n    const promises = Object.values(serializedObject).map((value: any) => {\n      if (!value) {\n        return value;\n      }\n      // clipPath or shadow or gradient\n      if (value.type) {\n        return enlivenObjects<FabricObject | Shadow | TFiller>([value], {\n          signal,\n        }).then(([enlived]) => {\n          instances.push(enlived);\n          return enlived;\n        });\n      }\n      // pattern\n      if (value.source) {\n        return classRegistry\n          .getClass<typeof Pattern>('pattern')\n          .fromObject(value, { signal })\n          .then((pattern: Pattern) => {\n            instances.push(pattern);\n            return pattern;\n          });\n      }\n      return value;\n    });\n    const keys = Object.keys(serializedObject);\n    Promise.all(promises)\n      .then((enlived) => {\n        return enlived.reduce((acc, instance, index) => {\n          acc[keys[index]] = instance;\n          return acc;\n        }, {});\n      })\n      .then(resolve)\n      .catch((error) => {\n        // cleanup\n        instances.forEach((instance: any) => {\n          instance.dispose && instance.dispose();\n        });\n        reject(error);\n      })\n      .finally(() => {\n        signal && signal.removeEventListener('abort', reject);\n      });\n  });\n","/**\n * Populates an object with properties of another object\n * @param {Object} source Source object\n * @param {string[]} properties Properties names to include\n * @returns object populated with the picked keys\n */\nexport const pick = <T extends Record<string, any>>(\n  source: T,\n  keys: (keyof T)[] = []\n) => {\n  return keys.reduce((o, key) => {\n    if (key in source) {\n      o[key] = source[key];\n    }\n    return o;\n  }, {} as Partial<T>);\n};\n\nexport const pickBy = <T extends Record<string, any>>(\n  source: T,\n  predicate: <K extends keyof T>(value: T[K], key: K, collection: T) => boolean\n) => {\n  return (Object.keys(source) as (keyof T)[]).reduce((o, key) => {\n    if (predicate(source[key], key, source)) {\n      o[key] = source[key];\n    }\n    return o;\n  }, {} as Partial<T>);\n};\n","/**\n * Map of the 148 color names with HEX code\n * @see: https://www.w3.org/TR/css3-color/#svg-color\n */\nexport const ColorNameMap = {\n  aliceblue: '#F0F8FF',\n  antiquewhite: '#FAEBD7',\n  aqua: '#0FF',\n  aquamarine: '#7FFFD4',\n  azure: '#F0FFFF',\n  beige: '#F5F5DC',\n  bisque: '#FFE4C4',\n  black: '#000',\n  blanchedalmond: '#FFEBCD',\n  blue: '#00F',\n  blueviolet: '#8A2BE2',\n  brown: '#A52A2A',\n  burlywood: '#DEB887',\n  cadetblue: '#5F9EA0',\n  chartreuse: '#7FFF00',\n  chocolate: '#D2691E',\n  coral: '#FF7F50',\n  cornflowerblue: '#6495ED',\n  cornsilk: '#FFF8DC',\n  crimson: '#DC143C',\n  cyan: '#0FF',\n  darkblue: '#00008B',\n  darkcyan: '#008B8B',\n  darkgoldenrod: '#B8860B',\n  darkgray: '#A9A9A9',\n  darkgrey: '#A9A9A9',\n  darkgreen: '#006400',\n  darkkhaki: '#BDB76B',\n  darkmagenta: '#8B008B',\n  darkolivegreen: '#556B2F',\n  darkorange: '#FF8C00',\n  darkorchid: '#9932CC',\n  darkred: '#8B0000',\n  darksalmon: '#E9967A',\n  darkseagreen: '#8FBC8F',\n  darkslateblue: '#483D8B',\n  darkslategray: '#2F4F4F',\n  darkslategrey: '#2F4F4F',\n  darkturquoise: '#00CED1',\n  darkviolet: '#9400D3',\n  deeppink: '#FF1493',\n  deepskyblue: '#00BFFF',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1E90FF',\n  firebrick: '#B22222',\n  floralwhite: '#FFFAF0',\n  forestgreen: '#228B22',\n  fuchsia: '#F0F',\n  gainsboro: '#DCDCDC',\n  ghostwhite: '#F8F8FF',\n  gold: '#FFD700',\n  goldenrod: '#DAA520',\n  gray: '#808080',\n  grey: '#808080',\n  green: '#008000',\n  greenyellow: '#ADFF2F',\n  honeydew: '#F0FFF0',\n  hotpink: '#FF69B4',\n  indianred: '#CD5C5C',\n  indigo: '#4B0082',\n  ivory: '#FFFFF0',\n  khaki: '#F0E68C',\n  lavender: '#E6E6FA',\n  lavenderblush: '#FFF0F5',\n  lawngreen: '#7CFC00',\n  lemonchiffon: '#FFFACD',\n  lightblue: '#ADD8E6',\n  lightcoral: '#F08080',\n  lightcyan: '#E0FFFF',\n  lightgoldenrodyellow: '#FAFAD2',\n  lightgray: '#D3D3D3',\n  lightgrey: '#D3D3D3',\n  lightgreen: '#90EE90',\n  lightpink: '#FFB6C1',\n  lightsalmon: '#FFA07A',\n  lightseagreen: '#20B2AA',\n  lightskyblue: '#87CEFA',\n  lightslategray: '#789',\n  lightslategrey: '#789',\n  lightsteelblue: '#B0C4DE',\n  lightyellow: '#FFFFE0',\n  lime: '#0F0',\n  limegreen: '#32CD32',\n  linen: '#FAF0E6',\n  magenta: '#F0F',\n  maroon: '#800000',\n  mediumaquamarine: '#66CDAA',\n  mediumblue: '#0000CD',\n  mediumorchid: '#BA55D3',\n  mediumpurple: '#9370DB',\n  mediumseagreen: '#3CB371',\n  mediumslateblue: '#7B68EE',\n  mediumspringgreen: '#00FA9A',\n  mediumturquoise: '#48D1CC',\n  mediumvioletred: '#C71585',\n  midnightblue: '#191970',\n  mintcream: '#F5FFFA',\n  mistyrose: '#FFE4E1',\n  moccasin: '#FFE4B5',\n  navajowhite: '#FFDEAD',\n  navy: '#000080',\n  oldlace: '#FDF5E6',\n  olive: '#808000',\n  olivedrab: '#6B8E23',\n  orange: '#FFA500',\n  orangered: '#FF4500',\n  orchid: '#DA70D6',\n  palegoldenrod: '#EEE8AA',\n  palegreen: '#98FB98',\n  paleturquoise: '#AFEEEE',\n  palevioletred: '#DB7093',\n  papayawhip: '#FFEFD5',\n  peachpuff: '#FFDAB9',\n  peru: '#CD853F',\n  pink: '#FFC0CB',\n  plum: '#DDA0DD',\n  powderblue: '#B0E0E6',\n  purple: '#800080',\n  rebeccapurple: '#639',\n  red: '#F00',\n  rosybrown: '#BC8F8F',\n  royalblue: '#4169E1',\n  saddlebrown: '#8B4513',\n  salmon: '#FA8072',\n  sandybrown: '#F4A460',\n  seagreen: '#2E8B57',\n  seashell: '#FFF5EE',\n  sienna: '#A0522D',\n  silver: '#C0C0C0',\n  skyblue: '#87CEEB',\n  slateblue: '#6A5ACD',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#FFFAFA',\n  springgreen: '#00FF7F',\n  steelblue: '#4682B4',\n  tan: '#D2B48C',\n  teal: '#008080',\n  thistle: '#D8BFD8',\n  tomato: '#FF6347',\n  turquoise: '#40E0D0',\n  violet: '#EE82EE',\n  wheat: '#F5DEB3',\n  white: '#FFF',\n  whitesmoke: '#F5F5F5',\n  yellow: '#FF0',\n  yellowgreen: '#9ACD32',\n};\n","import type { TRGBAColorSource } from './typedefs';\n\n/**\n * @param {Number} p\n * @param {Number} q\n * @param {Number} t\n * @return {Number}\n */\nexport const hue2rgb = (p: number, q: number, t: number): number => {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n};\n\n/**\n * Adapted from {@link https://gist.github.com/mjackson/5311256 https://gist.github.com/mjackson}\n * @param {Number} r Red color value\n * @param {Number} g Green color value\n * @param {Number} b Blue color value\n * @param {Number} a Alpha color value pass through\n * @return {TRGBColorSource} Hsl color\n */\nexport const rgb2Hsl = (\n  r: number,\n  g: number,\n  b: number,\n  a: number\n): TRGBAColorSource => {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  const maxValue = Math.max(r, g, b),\n    minValue = Math.min(r, g, b);\n\n  let h!: number, s: number;\n  const l = (maxValue + minValue) / 2;\n\n  if (maxValue === minValue) {\n    h = s = 0; // achromatic\n  } else {\n    const d = maxValue - minValue;\n    s = l > 0.5 ? d / (2 - maxValue - minValue) : d / (maxValue + minValue);\n    switch (maxValue) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return [Math.round(h * 360), Math.round(s * 100), Math.round(l * 100), a];\n};\n\nexport const fromAlphaToFloat = (value = '1') =>\n  parseFloat(value) / (value.endsWith('%') ? 100 : 1);\n\n/**\n * Convert a value in the inclusive range [0, 255] to hex\n */\nexport const hexify = (value: number) =>\n  Math.min(Math.round(value), 255).toString(16).toUpperCase().padStart(2, '0');\n\n/**\n * Calculate the grey average value for rgb and pass through alpha\n */\nexport const greyAverage = ([\n  r,\n  g,\n  b,\n  a = 1,\n]: TRGBAColorSource): TRGBAColorSource => {\n  const avg = Math.round(r * 0.3 + g * 0.59 + b * 0.11);\n  return [avg, avg, avg, a];\n};\n","import { ColorNameMap } from './color_map';\nimport { reHSLa, reHex, reRGBa } from './constants';\nimport type { TRGBAColorSource, TColorArg } from './typedefs';\nimport {\n  hue2rgb,\n  hexify,\n  rgb2Hsl,\n  fromAlphaToFloat,\n  greyAverage,\n} from './util';\n\n/**\n * @class Color common color operations\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors colors}\n */\nexport class Color {\n  private declare _source: TRGBAColorSource;\n\n  /**\n   *\n   * @param {string} [color] optional in hex or rgb(a) or hsl format or from known color list\n   */\n  constructor(color?: TColorArg) {\n    if (!color) {\n      // we default to black as canvas does\n      this.setSource([0, 0, 0, 1]);\n    } else if (color instanceof Color) {\n      this.setSource([...color._source]);\n    } else if (Array.isArray(color)) {\n      const [r, g, b, a = 1] = color;\n      this.setSource([r, g, b, a]);\n    } else {\n      this.setSource(this._tryParsingColor(color));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} [color] Color value to parse\n   * @returns {TRGBAColorSource}\n   */\n  protected _tryParsingColor(color: string) {\n    if (color in ColorNameMap) {\n      color = ColorNameMap[color as keyof typeof ColorNameMap];\n    }\n    return color === 'transparent'\n      ? ([255, 255, 255, 0] as TRGBAColorSource)\n      : Color.sourceFromHex(color) ||\n          Color.sourceFromRgb(color) ||\n          Color.sourceFromHsl(color) ||\n          // color is not recognized\n          // we default to black as canvas does\n          ([0, 0, 0, 1] as TRGBAColorSource);\n  }\n\n  /**\n   * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n   * @return {TRGBAColorSource}\n   */\n  getSource() {\n    return this._source;\n  }\n\n  /**\n   * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n   * @param {TRGBAColorSource} source\n   */\n  setSource(source: TRGBAColorSource) {\n    this._source = source;\n  }\n\n  /**\n   * Returns color representation in RGB format\n   * @return {String} ex: rgb(0-255,0-255,0-255)\n   */\n  toRgb() {\n    const [r, g, b] = this.getSource();\n    return `rgb(${r},${g},${b})`;\n  }\n\n  /**\n   * Returns color representation in RGBA format\n   * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n   */\n  toRgba() {\n    return `rgba(${this.getSource().join(',')})`;\n  }\n\n  /**\n   * Returns color representation in HSL format\n   * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n   */\n  toHsl() {\n    const [h, s, l] = rgb2Hsl(...this.getSource());\n    return `hsl(${h},${s}%,${l}%)`;\n  }\n\n  /**\n   * Returns color representation in HSLA format\n   * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n   */\n  toHsla() {\n    const [h, s, l, a] = rgb2Hsl(...this.getSource());\n    return `hsla(${h},${s}%,${l}%,${a})`;\n  }\n\n  /**\n   * Returns color representation in HEX format\n   * @return {String} ex: FF5555\n   */\n  toHex() {\n    const fullHex = this.toHexa();\n    return fullHex.slice(0, 6);\n  }\n\n  /**\n   * Returns color representation in HEXA format\n   * @return {String} ex: FF5555CC\n   */\n  toHexa() {\n    const [r, g, b, a] = this.getSource();\n    return `${hexify(r)}${hexify(g)}${hexify(b)}${hexify(Math.round(a * 255))}`;\n  }\n\n  /**\n   * Gets value of alpha channel for this color\n   * @return {Number} 0-1\n   */\n  getAlpha() {\n    return this.getSource()[3];\n  }\n\n  /**\n   * Sets value of alpha channel for this color\n   * @param {Number} alpha Alpha value 0-1\n   * @return {Color} thisArg\n   */\n  setAlpha(alpha: number) {\n    this._source[3] = alpha;\n    return this;\n  }\n\n  /**\n   * Transforms color to its grayscale representation\n   * @return {Color} thisArg\n   */\n  toGrayscale() {\n    this.setSource(greyAverage(this.getSource()));\n    return this;\n  }\n\n  /**\n   * Transforms color to its black and white representation\n   * @param {Number} threshold\n   * @return {Color} thisArg\n   */\n  toBlackWhite(threshold: number) {\n    const [average, , , a] = greyAverage(this.getSource()),\n      bOrW = average < (threshold || 127) ? 0 : 255;\n    this.setSource([bOrW, bOrW, bOrW, a]);\n    return this;\n  }\n\n  /**\n   * Overlays color with another color\n   * @param {String|Color} otherColor\n   * @return {Color} thisArg\n   */\n  overlayWith(otherColor: string | Color) {\n    if (!(otherColor instanceof Color)) {\n      otherColor = new Color(otherColor);\n    }\n\n    const source = this.getSource(),\n      otherAlpha = 0.5,\n      otherSource = otherColor.getSource(),\n      [R, G, B] = source.map((value, index) =>\n        Math.round(value * (1 - otherAlpha) + otherSource[index] * otherAlpha)\n      );\n\n    this.setSource([R, G, B, source[3]]);\n    return this;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {Color}\n   */\n  static fromRgb(color: string): Color {\n    return Color.fromRgba(color);\n  }\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf Color\n   * @param {String} color\n   * @return {Color}\n   */\n  static fromRgba(color: string): Color {\n    return new Color(Color.sourceFromRgb(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {TRGBAColorSource | undefined} source\n   */\n  static sourceFromRgb(color: string): TRGBAColorSource | undefined {\n    const match = color.match(reRGBa());\n    if (match) {\n      const [r, g, b] = match.slice(1, 4).map((value) => {\n        const parsedValue = parseFloat(value);\n        return value.endsWith('%')\n          ? Math.round(parsedValue * 2.55)\n          : parsedValue;\n      });\n      return [r, g, b, fromAlphaToFloat(match[4])];\n    }\n  }\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf Color\n   * @return {Color}\n   */\n  static fromHsl(color: string): Color {\n    return Color.fromHsla(color);\n  }\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf Color\n   * @param {String} color\n   * @return {Color}\n   */\n  static fromHsla(color: string): Color {\n    return new Color(Color.sourceFromHsl(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {TRGBAColorSource | undefined} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  static sourceFromHsl(color: string): TRGBAColorSource | undefined {\n    const match = color.match(reHSLa());\n    if (!match) {\n      return;\n    }\n\n    const h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n      s = parseFloat(match[2]) / 100,\n      l = parseFloat(match[3]) / 100;\n    let r: number, g: number, b: number;\n\n    if (s === 0) {\n      r = g = b = l;\n    } else {\n      const q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n        p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      fromAlphaToFloat(match[4]),\n    ];\n  }\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf Color\n   * @param {String} color Color value ex: FF5555\n   * @return {Color}\n   */\n  static fromHex(color: string): Color {\n    return new Color(Color.sourceFromHex(color));\n  }\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {TRGBAColorSource | undefined} source\n   */\n  static sourceFromHex(color: string): TRGBAColorSource | undefined {\n    if (color.match(reHex())) {\n      const value = color.slice(color.indexOf('#') + 1),\n        isShortNotation = value.length <= 4;\n      let expandedValue: string[];\n      if (isShortNotation) {\n        expandedValue = value.split('').map((hex) => hex + hex);\n      } else {\n        expandedValue = value.match(/.{2}/g)!;\n      }\n      const [r, g, b, a = 255] = expandedValue.map((hexCouple) =>\n        parseInt(hexCouple, 16)\n      );\n      return [r, g, b, a / 255];\n    }\n  }\n}\n","/**\n * Regex matching color in RGB or RGBA formats (ex: `rgb(0, 0, 0)`, `rgba(255, 100, 10, 0.5)`, `rgba( 255 , 100 , 10 , 0.5 )`, `rgb(1,1,1)`, `rgba(100%, 60%, 10%, 0.5)`)\n * Also matching rgba(r g b / a) as per new specs\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/rgb\n * Formal syntax at the time of writing:\n * <rgb()> =\n *  rgb( [ <percentage> | none ]{3} [ / [ <alpha-value> | none ] ]? )  |\n *  rgb( [ <number> | none ]{3} [ / [ <alpha-value> | none ] ]? )\n * <alpha-value> = <number> | <percentage>\n *\n * For learners this is how you can read this regex\n * Regular expression for matching an rgba or rgb CSS color value\n *\n * /^          # Beginning of the string\n * rgba?       # \"rgb\" or \"rgba\"\n * \\(\\s*       # Opening parenthesis and optional whitespace\n * (\\d{0,3}    # 0 to three digits R channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the first color component\n * %?          # Optional percent sign after the first color component\n * \\s*         # Optional whitespace\n * [\\s|,]      # Separator between color components can be a space or comma\n * \\s*         # Optional whitespace\n * (\\d{0,3}    # 0 to three digits G channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the second color component\n * %?          # Optional percent sign after the second color component\n * \\s*         # Optional whitespace\n * [\\s|,]      # Separator between color components can be a space or comma\n * \\s*         # Optional whitespace\n * (\\d{0,3}    # 0 to three digits B channel\n *  (?:\\.\\d+)? # Optional decimal with one or more digits\n * )           # End of capturing group for the third color component\n * %?          # Optional percent sign after the third color component\n * \\s*         # Optional whitespace\n * (?:         # Beginning of non-capturing group for alpha value\n *  \\s*        # Optional whitespace\n *  [,/]       # Comma or slash separator for alpha value\n *  \\s*        # Optional whitespace\n *  (\\d{0,3}   # Zero to three digits\n *    (?:\\.\\d+)? # Optional decimal with one or more digits\n *  )          # End of capturing group for alpha value\n *  %?         # Optional percent sign after alpha value\n *  \\s*        # Optional whitespace\n * )?          # End of non-capturing group for alpha value (optional)\n * \\)          # Closing parenthesis\n * $           # End of the string\n *\n * The alpha channel can be in the format 0.4 .7 or 1 or 73%\n *\n * WARNING this regex doesn't fail on off spec colors. it matches everything that could be a color.\n * So the spec does not allow for `rgba(30 , 45%  35, 49%)` but this will work anyways for us\n */\nexport const reRGBa = () =>\n  /^rgba?\\(\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*[\\s|,]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*(?:\\s*[,/]\\s*(\\d{0,3}(?:\\.\\d+)?%?)\\s*)?\\)$/i;\n\n/**\n * Regex matching color in HSL or HSLA formats (ex: hsl(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n * Also matching rgba(r g b / a) as per new specs\n * https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hsl\n * Formal syntax at the time of writing:\n * <hsl()> =\n *   hsl( [ <hue> | none ] [ <percentage> | none ] [ <percentage> | none ] [ / [ <alpha-value> | none ] ]? )\n *\n * <hue> =\n *   <number>  |\n *   <angle>\n *\n * <alpha-value> =\n *   <number>      |\n *   <percentage>\n *\n * For learners this is how you can read this regex\n * Regular expression for matching an hsla or hsl CSS color value\n *\n * /^hsla?\\(         // Matches the beginning of the string and the opening parenthesis of \"hsl\" or \"hsla\"\n * \\s*               // Matches any whitespace characters (space, tab, etc.) zero or more times\n * (\\d{1,3})         // Hue: Matches one to three digits and captures it in a group\n * \\s*               // Matches any whitespace characters zero or more times\n * [\\s|,]            // Matches a space, tab or comma\n * \\s*               // Matches any whitespace characters zero or more times\n * (\\d{1,3}%)        // Saturation: Matches one to three digits followed by a percentage sign and captures it in a group\n * \\s*               // Matches any whitespace characters zero or more times\n * [\\s|,]            // Matches a space, tab or comma\n * \\s*               // Matches any whitespace characters zero or more times\n * (\\d{1,3}%)        // Lightness: Matches one to three digits followed by a percentage sign and captures it in a group\n * \\s*               // Matches any whitespace characters zero or more times\n * (?:               // Alpha: Begins a non-capturing group for the alpha value\n *   \\s*             // Matches any whitespace characters zero or more times\n *   [,/]            // Matches a comma or forward slash\n *   \\s*             // Matches any whitespace characters zero or more times\n *   (\\d*(?:\\.\\d+)?%?) // Matches zero or more digits, optionally followed by a decimal point and one or more digits, followed by an optional percentage sign and captures it in a group\n *   \\s*             // Matches any whitespace characters zero or more times\n * )?                // Makes the alpha value group optional\n * \\)                // Matches the closing parenthesis\n * $/i               // Matches the end of the string and sets the regular expression to case-insensitive mode\n *\n * WARNING this regex doesn't fail on off spec colors. It matches everything that could be a color.\n * So the spec does not allow `hsl(30 , 45%  35, 49%)` but this will work anyways for us.\n */\nexport const reHSLa = () =>\n  /^hsla?\\(\\s*([+-]?\\d{1,3})\\s*[\\s|,]\\s*(\\d{1,3}%)\\s*[\\s|,]\\s*(\\d{1,3}%)\\s*(?:\\s*[,/]\\s*(\\d*(?:\\.\\d+)?%?)\\s*)?\\)$/i;\n\n/**\n * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n */\nexport const reHex = () => /^#?(([0-9a-f]){3,4}|([0-9a-f]{2}){3,4})$/i;\n","/**\n * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n * @param {number|string} number number to operate on\n * @param {number} fractionDigits number of fraction digits to \"leave\"\n * @return {number}\n */\nexport const toFixed = (number: number | string, fractionDigits: number) =>\n  parseFloat(Number(number).toFixed(fractionDigits));\n","import { Color } from '../../color/Color';\nimport { config } from '../../config';\nimport { DEFAULT_SVG_FONT_SIZE, NONE } from '../../constants';\nimport type {\n  TBBox,\n  TMat2D,\n  SVGElementName,\n  SupportedSVGUnit,\n} from '../../typedefs';\nimport { toFixed } from './toFixed';\n\n/**\n * Returns array of attributes for given svg that fabric parses\n * @param {SVGElementName} type Type of svg element (eg. 'circle')\n * @return {Array} string names of supported attributes\n */\nexport const getSvgAttributes = (type: SVGElementName) => {\n  const commonAttributes = ['instantiated_by_use', 'style', 'id', 'class'];\n  switch (type) {\n    case 'linearGradient':\n      return commonAttributes.concat([\n        'x1',\n        'y1',\n        'x2',\n        'y2',\n        'gradientUnits',\n        'gradientTransform',\n      ]);\n    case 'radialGradient':\n      return commonAttributes.concat([\n        'gradientUnits',\n        'gradientTransform',\n        'cx',\n        'cy',\n        'r',\n        'fx',\n        'fy',\n        'fr',\n      ]);\n    case 'stop':\n      return commonAttributes.concat(['offset', 'stop-color', 'stop-opacity']);\n  }\n  return commonAttributes;\n};\n\n/**\n * Converts from attribute value to pixel value if applicable.\n * Returns converted pixels or original value not converted.\n * @param {string} value number to operate on\n * @param {number} fontSize\n * @return {number}\n */\nexport const parseUnit = (value: string, fontSize = DEFAULT_SVG_FONT_SIZE) => {\n  const unit = /\\D{0,2}$/.exec(value),\n    number = parseFloat(value);\n  const dpi = config.DPI;\n  switch (unit?.[0] as SupportedSVGUnit) {\n    case 'mm':\n      return (number * dpi) / 25.4;\n\n    case 'cm':\n      return (number * dpi) / 2.54;\n\n    case 'in':\n      return number * dpi;\n\n    case 'pt':\n      return (number * dpi) / 72; // or * 4 / 3\n\n    case 'pc':\n      return ((number * dpi) / 72) * 12; // or * 16\n\n    case 'em':\n      return number * fontSize;\n\n    default:\n      return number;\n  }\n};\n\nexport type MeetOrSlice = 'meet' | 'slice';\n\nexport type MinMidMax = 'Min' | 'Mid' | 'Max' | 'none';\n\nexport type TPreserveArParsed = {\n  meetOrSlice: MeetOrSlice;\n  alignX: MinMidMax;\n  alignY: MinMidMax;\n};\n\n// align can be either none or undefined or a combination of mid/max\nconst parseAlign = (align: string): MinMidMax[] => {\n  //divide align in alignX and alignY\n  if (align && align !== NONE) {\n    return [align.slice(1, 4) as MinMidMax, align.slice(5, 8) as MinMidMax];\n  } else if (align === NONE) {\n    return [align, align];\n  }\n  return ['Mid', 'Mid'];\n};\n\n/**\n * Parse preserveAspectRatio attribute from element\n * https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/preserveAspectRatio\n * @param {string} attribute to be parsed\n * @return {Object} an object containing align and meetOrSlice attribute\n */\nexport const parsePreserveAspectRatioAttribute = (\n  attribute: string\n): TPreserveArParsed => {\n  const [firstPart, secondPart] = attribute.trim().split(' ') as [\n    MinMidMax,\n    MeetOrSlice | undefined\n  ];\n  const [alignX, alignY] = parseAlign(firstPart);\n  return {\n    meetOrSlice: secondPart || 'meet',\n    alignX,\n    alignY,\n  };\n};\n\n/**\n * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n * @param {TMat2D} transform an array with 6 numbers\n * @return {String} transform matrix for svg\n */\nexport const matrixToSVG = (transform: TMat2D) =>\n  'matrix(' +\n  transform\n    .map((value) => toFixed(value, config.NUM_FRACTION_DIGITS))\n    .join(' ') +\n  ')';\n\n/**\n * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n * @param prop\n * @param value\n * @param {boolean} inlineStyle The default is inline style, the separator used is \":\", The other is \"=\"\n * @returns\n */\nexport const colorPropToSVG = (\n  prop: string,\n  value?: any,\n  inlineStyle = true\n) => {\n  let colorValue;\n  let opacityValue;\n  if (!value) {\n    colorValue = 'none';\n  } else if (value.toLive) {\n    colorValue = `url(#SVGID_${value.id})`;\n  } else {\n    const color = new Color(value),\n      opacity = color.getAlpha();\n\n    colorValue = color.toRgb();\n    if (opacity !== 1) {\n      opacityValue = opacity.toString();\n    }\n  }\n  if (inlineStyle) {\n    return `${prop}: ${colorValue}; ${\n      opacityValue ? `${prop}-opacity: ${opacityValue}; ` : ''\n    }`;\n  } else {\n    return `${prop}=\"${colorValue}\" ${\n      opacityValue ? `${prop}-opacity=\"${opacityValue}\" ` : ''\n    }`;\n  }\n};\n\nexport const createSVGRect = (\n  color: string,\n  { left, top, width, height }: TBBox,\n  precision = config.NUM_FRACTION_DIGITS\n) => {\n  const svgColor = colorPropToSVG('fill', color, false);\n  const [x, y, w, h] = [left, top, width, height].map((value) =>\n    toFixed(value, precision)\n  );\n  return `<rect ${svgColor} x=\"${x}\" y=\"${y}\" width=\"${w}\" height=\"${h}\"></rect>`;\n};\n","import type { FabricObject } from '../shapes/Object/Object';\nimport type { TFiller } from '../typedefs';\nimport type { FabricText } from '../shapes/Text/Text';\nimport type { Pattern } from '../Pattern';\nimport type { Path } from '../shapes/Path';\nimport type { ActiveSelection } from '../shapes/ActiveSelection';\n\nexport const isFiller = (\n  filler: TFiller | string | null\n): filler is TFiller => {\n  return !!filler && (filler as TFiller).toLive !== undefined;\n};\n\nexport const isSerializableFiller = (\n  filler: TFiller | string | null\n): filler is TFiller => {\n  return !!filler && typeof (filler as TFiller).toObject === 'function';\n};\n\nexport const isPattern = (filler: TFiller): filler is Pattern => {\n  return (\n    !!filler &&\n    (filler as Pattern).offsetX !== undefined &&\n    Object.hasOwn(filler, 'source')\n  );\n};\n\nexport const isTextObject = (\n  fabricObject?: FabricObject\n): fabricObject is FabricText => {\n  return (\n    !!fabricObject &&\n    typeof (fabricObject as FabricText)._renderText === 'function'\n  );\n};\n\nexport const isPath = (fabricObject?: FabricObject): fabricObject is Path => {\n  // we could use instanceof but that would mean pulling in Text code for a simple check\n  // @todo discuss what to do and how to do\n  return (\n    !!fabricObject &&\n    typeof (fabricObject as Path)._renderPathCommands === 'function'\n  );\n};\n\nexport const isActiveSelection = (\n  fabricObject?: FabricObject\n): fabricObject is ActiveSelection =>\n  !!fabricObject && Object.hasOwn(fabricObject, 'multiSelectionStacking');\n","/**\n * Returns element scroll offsets\n * @param {HTMLElement} element Element to operate on\n * @return {Object} Object with left/top values\n */\nexport function getScrollLeftTop(element: HTMLElement | null) {\n  const doc = element && getDocumentFromElement(element);\n  let left = 0,\n    top = 0;\n  if (!element || !doc) {\n    return { left, top };\n  }\n\n  const docElement = doc.documentElement,\n    body = doc.body || {\n      scrollLeft: 0,\n      scrollTop: 0,\n    };\n  // While loop checks (and then sets element to) .parentNode OR .host\n  //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n  //  but the .parentNode of a root ShadowDOM node will always be null, instead\n  //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n  // @ts-expect-error Set element to element parent, or 'host' in case of ShadowDOM\n  while (element && (element.parentNode || element.host)) {\n    // @ts-expect-error Set element to element parent, or 'host' in case of ShadowDOM\n    element = element.parentNode || element.host;\n    // @ts-expect-error because element is typed as HTMLElement but it can go up to document\n    if (element === doc) {\n      left = body.scrollLeft || docElement.scrollLeft || 0;\n      top = body.scrollTop || docElement.scrollTop || 0;\n    } else {\n      left += element!.scrollLeft || 0;\n      top += element!.scrollTop || 0;\n    }\n\n    if (element!.nodeType === 1 && element!.style.position === 'fixed') {\n      break;\n    }\n  }\n\n  return { left, top };\n}\n\nexport const getDocumentFromElement = (el: HTMLElement) =>\n  el.ownerDocument || null;\n\nexport const getWindowFromElement = (el: HTMLElement) =>\n  el.ownerDocument?.defaultView || null;\n","// TODO this file needs to go away, cross browser style support is not fabricjs domain.\n\n/**\n * wrapper for setting element's style\n * @param {HTMLElement} element\n * @param {Object | string} styles\n */\nexport function setStyle(\n  element: HTMLElement,\n  styles: string | Record<string, string>\n) {\n  const elementStyle = element.style;\n  if (!elementStyle) {\n    return;\n  } else if (typeof styles === 'string') {\n    element.style.cssText += ';' + styles;\n  } else {\n    Object.entries(styles).forEach(([property, value]) =>\n      elementStyle.setProperty(property, value)\n    );\n  }\n}\n","import { LEFT, NONE, TOP } from '../../constants';\nimport type { TSize } from '../../typedefs';\nimport {\n  getDocumentFromElement,\n  getWindowFromElement,\n  getScrollLeftTop,\n} from '../../util/dom_misc';\nimport { setStyle } from '../../util/dom_style';\n\nexport const setCanvasDimensions = (\n  el: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  { width, height }: TSize,\n  retinaScaling = 1\n) => {\n  el.width = width;\n  el.height = height;\n  if (retinaScaling > 1) {\n    el.setAttribute('width', (width * retinaScaling).toString());\n    el.setAttribute('height', (height * retinaScaling).toString());\n    ctx.scale(retinaScaling, retinaScaling);\n  }\n};\n\nexport function allowTouchScrolling(element: HTMLElement, allow: boolean) {\n  const touchAction = allow ? 'manipulation' : NONE;\n  setStyle(element, {\n    'touch-action': touchAction,\n    '-ms-touch-action': touchAction,\n  });\n}\n\nexport type CSSDimensions = {\n  width: number | string;\n  height: number | string;\n};\n\nexport const setCSSDimensions = (\n  el: HTMLElement,\n  { width, height }: Partial<CSSDimensions>\n) => {\n  width && (el.style.width = typeof width === 'number' ? `${width}px` : width);\n  height &&\n    (el.style.height = typeof height === 'number' ? `${height}px` : height);\n};\n\n/**\n * Returns offset for a given element\n * @param {HTMLElement} element Element to get offset for\n * @return {Object} Object with \"left\" and \"top\" properties\n */\nexport function getElementOffset(element: HTMLElement) {\n  let box = { left: 0, top: 0 };\n  const doc = element && getDocumentFromElement(element),\n    offset = { left: 0, top: 0 },\n    offsetAttributes = {\n      borderLeftWidth: LEFT,\n      borderTopWidth: TOP,\n      paddingLeft: LEFT,\n      paddingTop: TOP,\n    } as const;\n\n  if (!doc) {\n    return offset;\n  }\n  const elemStyle =\n    getWindowFromElement(element)?.getComputedStyle(element, null) || {};\n  for (const attr in offsetAttributes) {\n    // @ts-expect-error TS learn to iterate!\n    offset[offsetAttributes[attr]] += parseInt(elemStyle[attr], 10) || 0;\n  }\n\n  const docElem = doc.documentElement;\n  if (typeof element.getBoundingClientRect !== 'undefined') {\n    box = element.getBoundingClientRect();\n  }\n\n  const scrollLeftTop = getScrollLeftTop(element);\n\n  return {\n    left:\n      box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n    top: box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top,\n  };\n}\n\n/**\n * Makes element unselectable\n * @param {HTMLElement} element Element to make unselectable\n * @return {HTMLElement} Element that was passed in\n */\nexport function makeElementUnselectable(element: HTMLElement) {\n  if (typeof element.onselectstart !== 'undefined') {\n    element.onselectstart = () => false;\n  }\n  element.style.userSelect = NONE;\n  return element;\n}\n","import { getEnv, getFabricDocument } from '../../env';\nimport type { TSize } from '../../typedefs';\nimport type { CSSDimensions } from './util';\nimport { setCSSDimensions, getElementOffset } from './util';\nimport { createCanvasElement, isHTMLCanvas } from '../../util/misc/dom';\nimport { setCanvasDimensions } from './util';\nimport { FabricError } from '../../util/internals/console';\n\nexport type CanvasItem = {\n  el: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n};\n\nexport class StaticCanvasDOMManager {\n  /**\n   * Keeps a copy of the canvas style before setting retina scaling and other potions\n   * in order to return it to original state on dispose\n   * @type string\n   */\n  private _originalCanvasStyle?: string;\n\n  lower: CanvasItem;\n\n  constructor(arg0?: string | HTMLCanvasElement) {\n    const el = this.createLowerCanvas(arg0);\n    this.lower = { el, ctx: el.getContext('2d')! };\n  }\n\n  protected createLowerCanvas(arg0?: HTMLCanvasElement | string) {\n    // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n    const el = isHTMLCanvas(arg0)\n      ? arg0\n      : (arg0 &&\n          (getFabricDocument().getElementById(arg0) as HTMLCanvasElement)) ||\n        createCanvasElement();\n    if (el.hasAttribute('data-fabric')) {\n      throw new FabricError(\n        'Trying to initialize a canvas that has already been initialized. Did you forget to dispose the canvas?'\n      );\n    }\n    this._originalCanvasStyle = el.style.cssText;\n    el.setAttribute('data-fabric', 'main');\n    el.classList.add('lower-canvas');\n    return el;\n  }\n\n  cleanupDOM({ width, height }: TSize) {\n    const { el } = this.lower;\n    // restore canvas style and attributes\n    el.classList.remove('lower-canvas');\n    el.removeAttribute('data-fabric');\n    // restore canvas size to original size in case retina scaling was applied\n    el.setAttribute('width', `${width}`);\n    el.setAttribute('height', `${height}`);\n    el.style.cssText = this._originalCanvasStyle || '';\n    this._originalCanvasStyle = undefined;\n  }\n\n  setDimensions(size: TSize, retinaScaling: number) {\n    const { el, ctx } = this.lower;\n    setCanvasDimensions(el, ctx, size, retinaScaling);\n  }\n\n  setCSSDimensions(size: Partial<CSSDimensions>) {\n    setCSSDimensions(this.lower.el, size);\n  }\n\n  /**\n   * Calculates canvas element offset relative to the document\n   */\n  calcOffset() {\n    return getElementOffset(this.lower.el);\n  }\n\n  dispose() {\n    getEnv().dispose(this.lower.el);\n    // @ts-expect-error disposing\n    delete this.lower;\n  }\n}\n","import { iMatrix } from '../constants';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TFiller, TMat2D, TOptions } from '../typedefs';\nimport type { StaticCanvas } from './StaticCanvas';\n\ninterface CanvasDrawableOptions {\n  /**\n   * if set to false background image is not affected by viewport transform\n   * @since 1.6.3\n   * @type Boolean\n   * @todo we should really find a different way to do this\n   * @default\n   */\n  backgroundVpt: boolean;\n\n  /**\n   * Background color of canvas instance.\n   * @type {(String|TFiller)}\n   * @default\n   */\n  backgroundColor: TFiller | string;\n\n  /**\n   * Background image of canvas instance.\n   * since 2.4.0 image caching is active, please when putting an image as background, add to the\n   * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n   * vale. As an alternative you can disable image objectCaching\n   * @type FabricObject\n   * @default\n   */\n  backgroundImage?: FabricObject;\n\n  /**\n   * if set to false overlay image is not affected by viewport transform\n   * @since 1.6.3\n   * @type Boolean\n   * @todo we should really find a different way to do this\n   * @default\n   */\n  overlayVpt: boolean;\n\n  /**\n   * Overlay color of canvas instance.\n   * @since 1.3.9\n   * @type {(String|TFiller)}\n   * @default\n   */\n  overlayColor: TFiller | string;\n\n  /**\n   * Overlay image of canvas instance.\n   * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n   * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n   * vale. As an alternative you can disable image objectCaching\n   * @type FabricObject\n   * @default\n   */\n  overlayImage?: FabricObject;\n}\n\ninterface CanvasRenderingOptions {\n  /**\n   * Indicates whether {@link StaticCanvas#add}, {@link StaticCanvas#insertAt} and {@link StaticCanvas#remove},\n   * {@link StaticCanvas#moveTo}, {@link StaticCanvas#clear} and many more, should also re-render canvas.\n   * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n   * since the renders are queued and executed one per frame.\n   * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n   * Left default to true to do not break documentation and old app, fiddles.\n   * @type Boolean\n   * @default\n   */\n  renderOnAddRemove: boolean;\n\n  /**\n   * Based on vptCoords and object.aCoords, skip rendering of objects that\n   * are not included in current viewport.\n   * May greatly help in applications with crowded canvas and use of zoom/pan\n   * If One of the corner of the bounding box of the object is on the canvas\n   * the objects get rendered.\n   * @type Boolean\n   * @default true\n   */\n  skipOffscreen: boolean;\n\n  /**\n   * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n   * @type Boolean\n   * @default\n   */\n  enableRetinaScaling: boolean;\n\n  /**\n   * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n   * @type Boolean\n   * @default\n   */\n  imageSmoothingEnabled: boolean;\n\n  /**\n   * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n   * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n   * top left corner of the canvas.\n   * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n   * @type FabricObject\n   */\n  clipPath?: FabricObject;\n}\n\nexport interface CanvasExportOptions {\n  /**\n   * Indicates whether toObject/toDatalessObject should include default values\n   * if set to false, takes precedence over the object value.\n   * @type Boolean\n   * @default\n   */\n  includeDefaultValues: boolean;\n\n  /**\n   * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n   * a zoomed canvas will then produce zoomed SVG output.\n   * @type Boolean\n   * @default\n   */\n  svgViewportTransformation: boolean;\n}\n\nexport interface StaticCanvasOptions\n  extends CanvasDrawableOptions,\n    CanvasRenderingOptions,\n    CanvasExportOptions {\n  /**\n   * Width in virtual/logical pixels of the canvas.\n   * The canvas can be larger than width if retina scaling is active\n   * @type number\n   */\n  width: number;\n\n  /**\n   * Height in virtual/logical pixels of the canvas.\n   * The canvas can be taller than width if retina scaling is active\n   * @type height\n   */\n  height: number;\n\n  /**\n   * Indicates whether object controls (borders/controls) are rendered above overlay image\n   * @type Boolean\n   * @default\n   *\n   * @todo move to Canvas\n   */\n  controlsAboveOverlay: boolean;\n\n  /**\n   * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n   * @type Boolean\n   * @default\n   *\n   * @todo move to Canvas\n   */\n  allowTouchScrolling: boolean;\n\n  /**\n   * The transformation (a Canvas 2D API transform matrix) which focuses the viewport\n   * @type Array\n   * @example <caption>Default transform</caption>\n   * canvas.viewportTransform = [1, 0, 0, 1, 0, 0];\n   * @example <caption>Scale by 70% and translate toward bottom-right by 50, without skewing</caption>\n   * canvas.viewportTransform = [0.7, 0, 0, 0.7, 50, 50];\n   * @default\n   */\n  viewportTransform: TMat2D;\n}\n\nexport const staticCanvasDefaults: TOptions<StaticCanvasOptions> = {\n  backgroundVpt: true,\n  backgroundColor: '',\n  overlayVpt: true,\n  overlayColor: '',\n\n  includeDefaultValues: true,\n  svgViewportTransformation: true,\n\n  renderOnAddRemove: true,\n  skipOffscreen: true,\n  enableRetinaScaling: true,\n  imageSmoothingEnabled: true,\n\n  /**\n   * @todo move to Canvas\n   */\n  controlsAboveOverlay: false,\n  /**\n   * @todo move to Canvas\n   */\n  allowTouchScrolling: false,\n\n  viewportTransform: [...iMatrix],\n};\n","import { config } from '../config';\nimport { CENTER, VERSION } from '../constants';\nimport type { CanvasEvents, StaticCanvasEvents } from '../EventTypeDefs';\nimport type { Gradient } from '../gradient/Gradient';\nimport { createCollectionMixin, isCollection } from '../Collection';\nimport { CommonMethods } from '../CommonMethods';\nimport type { Pattern } from '../Pattern';\nimport { Point } from '../Point';\nimport type { TCachedFabricObject } from '../shapes/Object/Object';\nimport type {\n  Abortable,\n  Constructor,\n  TCornerPoint,\n  TDataUrlOptions,\n  TFiller,\n  TMat2D,\n  TSize,\n  TSVGReviver,\n  TToCanvasElementOptions,\n  TValidToObjectMethod,\n  TOptions,\n} from '../typedefs';\nimport {\n  cancelAnimFrame,\n  requestAnimFrame,\n} from '../util/animation/AnimationFrameProvider';\nimport { runningAnimations } from '../util/animation/AnimationRegistry';\nimport { uid } from '../util/internals/uid';\nimport { createCanvasElement, toDataURL } from '../util/misc/dom';\nimport { invertTransform, transformPoint } from '../util/misc/matrix';\nimport type { EnlivenObjectOptions } from '../util/misc/objectEnlive';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n} from '../util/misc/objectEnlive';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgParsing';\nimport { toFixed } from '../util/misc/toFixed';\nimport { isFiller, isPattern, isTextObject } from '../util/typeAssertions';\nimport { StaticCanvasDOMManager } from './DOMManagers/StaticCanvasDOMManager';\nimport type { CSSDimensions } from './DOMManagers/util';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\nimport { staticCanvasDefaults } from './StaticCanvasOptions';\nimport { log, FabricError } from '../util/internals/console';\nimport { getDevicePixelRatio } from '../env';\n\n/**\n * Having both options in TCanvasSizeOptions set to true transform the call in a calcOffset\n * Better try to restrict with types to avoid confusion.\n */\nexport type TCanvasSizeOptions =\n  | {\n      backstoreOnly?: true;\n      cssOnly?: false;\n    }\n  | {\n      backstoreOnly?: false;\n      cssOnly?: true;\n    };\n\nexport type TSVGExportOptions = {\n  suppressPreamble?: boolean;\n  viewBox?: {\n    x: number;\n    y: number;\n    width: number;\n    height: number;\n  };\n  encoding?: 'UTF-8'; // test Encoding type and see what happens\n  width?: string;\n  height?: string;\n  reviver?: TSVGReviver;\n};\n\n/**\n * Static canvas class\n * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n * @fires before:render\n * @fires after:render\n * @fires canvas:cleared\n * @fires object:added\n * @fires object:removed\n */\n// TODO: fix `EventSpec` inheritance https://github.com/microsoft/TypeScript/issues/26154#issuecomment-1366616260\nexport class StaticCanvas<\n    EventSpec extends StaticCanvasEvents = StaticCanvasEvents\n  >\n  extends createCollectionMixin(CommonMethods<CanvasEvents>)\n  implements StaticCanvasOptions\n{\n  declare width: number;\n  declare height: number;\n\n  // background\n  declare backgroundVpt: boolean;\n  declare backgroundColor: TFiller | string;\n  declare backgroundImage?: FabricObject;\n  // overlay\n  declare overlayVpt: boolean;\n  declare overlayColor: TFiller | string;\n  declare overlayImage?: FabricObject;\n\n  declare clipPath?: FabricObject;\n\n  declare includeDefaultValues: boolean;\n\n  // rendering config\n  declare renderOnAddRemove: boolean;\n  declare skipOffscreen: boolean;\n  declare enableRetinaScaling: boolean;\n  declare imageSmoothingEnabled: boolean;\n\n  /**\n   * @todo move to Canvas\n   */\n  declare controlsAboveOverlay: boolean;\n\n  /**\n   * @todo move to Canvas\n   */\n  declare allowTouchScrolling: boolean;\n\n  declare viewportTransform: TMat2D;\n\n  /**\n   * The viewport bounding box in scene plane coordinates, see {@link calcViewportBoundaries}\n   */\n  declare vptCoords: TCornerPoint;\n\n  /**\n   * A reference to the canvas actual HTMLCanvasElement.\n   * Can be use to read the raw pixels, but never write or manipulate\n   * @type HTMLCanvasElement\n   */\n  get lowerCanvasEl() {\n    return this.elements.lower?.el;\n  }\n\n  get contextContainer() {\n    return this.elements.lower?.ctx;\n  }\n\n  /**\n   * If true the Canvas is in the process or has been disposed/destroyed.\n   * No more rendering operation will be executed on this canvas.\n   * @type boolean\n   */\n  declare destroyed?: boolean;\n\n  /**\n   * Started the process of disposing but not done yet.\n   * WIll likely complete the render cycle already scheduled but stopping adding more.\n   * @type boolean\n   */\n  declare disposed?: boolean;\n\n  declare _offset: { left: number; top: number };\n  protected declare hasLostContext: boolean;\n  protected declare nextRenderHandle: number;\n\n  declare elements: StaticCanvasDOMManager;\n\n  static ownDefaults = staticCanvasDefaults;\n\n  // reference to\n  protected declare __cleanupTask?: {\n    (): void;\n    kill: (reason?: any) => void;\n  };\n\n  static getDefaults(): Record<string, any> {\n    return StaticCanvas.ownDefaults;\n  }\n\n  constructor(\n    el?: string | HTMLCanvasElement,\n    options: TOptions<StaticCanvasOptions> = {}\n  ) {\n    super();\n    Object.assign(\n      this,\n      (this.constructor as typeof StaticCanvas).getDefaults()\n    );\n    this.set(options);\n    this.initElements(el);\n    this._setDimensionsImpl({\n      width: this.width || this.elements.lower.el.width || 0,\n      height: this.height || this.elements.lower.el.height || 0,\n    });\n    this.viewportTransform = [...this.viewportTransform];\n    this.calcViewportBoundaries();\n  }\n\n  protected initElements(el?: string | HTMLCanvasElement) {\n    this.elements = new StaticCanvasDOMManager(el);\n  }\n\n  add(...objects: FabricObject[]) {\n    const size = super.add(...objects);\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return size;\n  }\n\n  insertAt(index: number, ...objects: FabricObject[]) {\n    const size = super.insertAt(index, ...objects);\n    objects.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return size;\n  }\n\n  remove(...objects: FabricObject[]) {\n    const removed = super.remove(...objects);\n    removed.length > 0 && this.renderOnAddRemove && this.requestRenderAll();\n    return removed;\n  }\n\n  _onObjectAdded(obj: FabricObject) {\n    if (obj.canvas && (obj.canvas as StaticCanvas) !== this) {\n      log(\n        'warn',\n        'Canvas is trying to add an object that belongs to a different canvas.\\n' +\n          'Resulting to default behavior: removing object from previous canvas and adding to new canvas'\n      );\n      obj.canvas.remove(obj);\n    }\n    obj._set('canvas', this);\n    obj.setCoords();\n    this.fire('object:added', { target: obj });\n    obj.fire('added', { target: this });\n  }\n\n  _onObjectRemoved(obj: FabricObject) {\n    obj._set('canvas', undefined);\n    this.fire('object:removed', { target: obj });\n    obj.fire('removed', { target: this });\n  }\n\n  _onStackOrderChanged() {\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * @private\n   * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n   * @return {Number} retinaScaling if applied, otherwise 1;\n   */\n  getRetinaScaling() {\n    return this.enableRetinaScaling ? getDevicePixelRatio() : 1;\n  }\n\n  /**\n   * Calculates canvas element offset relative to the document\n   * This method is also attached as \"resize\" event handler of window\n   */\n  calcOffset() {\n    return (this._offset = this.elements.calcOffset());\n  }\n\n  /**\n   * Returns canvas width (in px)\n   * @return {Number}\n   */\n  getWidth(): number {\n    return this.width;\n  }\n\n  /**\n   * Returns canvas height (in px)\n   * @return {Number}\n   */\n  getHeight(): number {\n    return this.height;\n  }\n\n  /**\n   * Sets width of this canvas instance\n   * @param {Number|String} value                         Value to set width to\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   * @deprecated will be removed in 7.0\n   */\n  setWidth(\n    value: TSize['width'],\n    options?: { backstoreOnly?: true; cssOnly?: false }\n  ): void;\n  setWidth(\n    value: CSSDimensions['width'],\n    options?: { cssOnly?: true; backstoreOnly?: false }\n  ): void;\n  setWidth(value: number, options?: never) {\n    return this.setDimensions({ width: value }, options);\n  }\n\n  /**s\n   * Sets height of this canvas instance\n   * @param {Number|String} value                         Value to set height to\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   * @deprecated will be removed in 7.0\n   */\n  setHeight(\n    value: TSize['height'],\n    options?: { backstoreOnly?: true; cssOnly?: false }\n  ): void;\n  setHeight(\n    value: CSSDimensions['height'],\n    options?: { cssOnly?: true; backstoreOnly?: false }\n  ): void;\n  setHeight(value: CSSDimensions['height'], options?: never) {\n    return this.setDimensions({ height: value }, options);\n  }\n\n  /**\n   * Internal use only\n   * @protected\n   */\n  protected _setDimensionsImpl(\n    dimensions: Partial<TSize | CSSDimensions>,\n    { cssOnly = false, backstoreOnly = false }: TCanvasSizeOptions = {}\n  ) {\n    if (!cssOnly) {\n      const size = {\n        width: this.width,\n        height: this.height,\n        ...(dimensions as Partial<TSize>),\n      };\n      this.elements.setDimensions(size, this.getRetinaScaling());\n      this.hasLostContext = true;\n      this.width = size.width;\n      this.height = size.height;\n    }\n    if (!backstoreOnly) {\n      this.elements.setCSSDimensions(dimensions);\n    }\n\n    this.calcOffset();\n  }\n\n  /**\n   * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n   * @param {Object}        dimensions                    Object with width/height properties\n   * @param {Number|String} [dimensions.width]            Width of canvas element\n   * @param {Number|String} [dimensions.height]           Height of canvas element\n   * @param {Object}        [options]                     Options object\n   * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n   * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n   */\n  setDimensions(\n    dimensions: Partial<CSSDimensions>,\n    options?: { cssOnly?: true; backstoreOnly?: false }\n  ): void;\n  setDimensions(\n    dimensions: Partial<TSize>,\n    options?: { backstoreOnly?: true; cssOnly?: false }\n  ): void;\n  setDimensions(dimensions: Partial<TSize>, options?: never): void;\n  setDimensions(\n    dimensions: Partial<TSize | CSSDimensions>,\n    options?: TCanvasSizeOptions\n  ) {\n    this._setDimensionsImpl(dimensions, options);\n    if (!options || !options.cssOnly) {\n      this.requestRenderAll();\n    }\n  }\n\n  /**\n   * Returns canvas zoom level\n   * @return {Number}\n   */\n  getZoom() {\n    return this.viewportTransform[0];\n  }\n\n  /**\n   * Sets viewport transformation of this canvas instance\n   * @param {Array} vpt a Canvas 2D API transform matrix\n   */\n  setViewportTransform(vpt: TMat2D) {\n    const backgroundObject = this.backgroundImage,\n      overlayObject = this.overlayImage,\n      len = this._objects.length;\n\n    this.viewportTransform = vpt;\n    for (let i = 0; i < len; i++) {\n      const object = this._objects[i];\n      object.group || object.setCoords();\n    }\n    if (backgroundObject) {\n      backgroundObject.setCoords();\n    }\n    if (overlayObject) {\n      overlayObject.setCoords();\n    }\n    this.calcViewportBoundaries();\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Sets zoom level of this canvas instance, the zoom centered around point\n   * meaning that following zoom to point with the same point will have the visual\n   * effect of the zoom originating from that point. The point won't move.\n   * It has nothing to do with canvas center or visual center of the viewport.\n   * @param {Point} point to zoom with respect to\n   * @param {Number} value to set zoom to, less than 1 zooms out\n   */\n  zoomToPoint(point: Point, value: number) {\n    // TODO: just change the scale, preserve other transformations\n    const before = point,\n      vpt: TMat2D = [...this.viewportTransform];\n    const newPoint = transformPoint(point, invertTransform(vpt));\n    vpt[0] = value;\n    vpt[3] = value;\n    const after = transformPoint(newPoint, vpt);\n    vpt[4] += before.x - after.x;\n    vpt[5] += before.y - after.y;\n    this.setViewportTransform(vpt);\n  }\n\n  /**\n   * Sets zoom level of this canvas instance\n   * @param {Number} value to set zoom to, less than 1 zooms out\n   */\n  setZoom(value: number) {\n    this.zoomToPoint(new Point(0, 0), value);\n  }\n\n  /**\n   * Pan viewport so as to place point at top left corner of canvas\n   * @param {Point} point to move to\n   */\n  absolutePan(point: Point) {\n    const vpt: TMat2D = [...this.viewportTransform];\n    vpt[4] = -point.x;\n    vpt[5] = -point.y;\n    return this.setViewportTransform(vpt);\n  }\n\n  /**\n   * Pans viewpoint relatively\n   * @param {Point} point (position vector) to move by\n   */\n  relativePan(point: Point) {\n    return this.absolutePan(\n      new Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      )\n    );\n  }\n\n  /**\n   * Returns &lt;canvas> element corresponding to this instance\n   * @return {HTMLCanvasElement}\n   */\n  getElement(): HTMLCanvasElement {\n    return this.elements.lower.el;\n  }\n\n  /**\n   * Clears specified context of canvas element\n   * @param {CanvasRenderingContext2D} ctx Context to clear\n   */\n  clearContext(ctx: CanvasRenderingContext2D) {\n    ctx.clearRect(0, 0, this.width, this.height);\n  }\n\n  /**\n   * Returns context of canvas where objects are drawn\n   * @return {CanvasRenderingContext2D}\n   */\n  getContext(): CanvasRenderingContext2D {\n    return this.elements.lower.ctx;\n  }\n\n  /**\n   * Clears all contexts (background, main, top) of an instance\n   */\n  clear() {\n    this.remove(...this.getObjects());\n    this.backgroundImage = undefined;\n    this.overlayImage = undefined;\n    this.backgroundColor = '';\n    this.overlayColor = '';\n    this.clearContext(this.getContext());\n    this.fire('canvas:cleared');\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Renders the canvas\n   */\n  renderAll() {\n    this.cancelRequestedRender();\n    if (this.destroyed) {\n      return;\n    }\n    this.renderCanvas(this.getContext(), this._objects);\n  }\n\n  /**\n   * Function created to be instance bound at initialization\n   * used in requestAnimationFrame rendering\n   * Let the fabricJS call it. If you call it manually you could have more\n   * animationFrame stacking on to of each other\n   * for an imperative rendering, use canvas.renderAll\n   * @private\n   */\n  renderAndReset() {\n    this.nextRenderHandle = 0;\n    this.renderAll();\n  }\n\n  /**\n   * Append a renderAll request to next animation frame.\n   * unless one is already in progress, in that case nothing is done\n   * a boolean flag will avoid appending more.\n   */\n  requestRenderAll() {\n    if (!this.nextRenderHandle && !this.disposed && !this.destroyed) {\n      this.nextRenderHandle = requestAnimFrame(() => this.renderAndReset());\n    }\n  }\n\n  /**\n   * Calculate the position of the 4 corner of canvas with current viewportTransform.\n   * helps to determinate when an object is in the current rendering viewport\n   */\n  calcViewportBoundaries(): TCornerPoint {\n    const width = this.width,\n      height = this.height,\n      iVpt = invertTransform(this.viewportTransform),\n      a = transformPoint({ x: 0, y: 0 }, iVpt),\n      b = transformPoint({ x: width, y: height }, iVpt),\n      // we don't support vpt flipping\n      // but the code is robust enough to mostly work with flipping\n      min = a.min(b),\n      max = a.max(b);\n    return (this.vptCoords = {\n      tl: min,\n      tr: new Point(max.x, min.y),\n      bl: new Point(min.x, max.y),\n      br: max,\n    });\n  }\n\n  cancelRequestedRender() {\n    if (this.nextRenderHandle) {\n      cancelAnimFrame(this.nextRenderHandle);\n      this.nextRenderHandle = 0;\n    }\n  }\n\n  drawControls(ctx: CanvasRenderingContext2D) {\n    // Static canvas has no controls\n  }\n\n  /**\n   * Renders background, objects, overlay and controls.\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Array} objects to render\n   */\n  renderCanvas(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\n    if (this.destroyed) {\n      return;\n    }\n\n    const v = this.viewportTransform,\n      path = this.clipPath;\n    this.calcViewportBoundaries();\n    this.clearContext(ctx);\n    ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    // @ts-expect-error node-canvas stuff\n    ctx.patternQuality = 'best';\n    this.fire('before:render', { ctx });\n    this._renderBackground(ctx);\n\n    ctx.save();\n    //apply viewport transform once for all rendering process\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    this._renderObjects(ctx, objects);\n    ctx.restore();\n    if (!this.controlsAboveOverlay) {\n      this.drawControls(ctx);\n    }\n    if (path) {\n      path._set('canvas', this);\n      // needed to setup a couple of variables\n      path.shouldCache();\n      path._transformDone = true;\n      path.renderCache({ forClipping: true });\n      this.drawClipPathOnCanvas(ctx, path as TCachedFabricObject);\n    }\n    this._renderOverlay(ctx);\n    if (this.controlsAboveOverlay) {\n      this.drawControls(ctx);\n    }\n    this.fire('after:render', { ctx });\n\n    if (this.__cleanupTask) {\n      this.__cleanupTask();\n      this.__cleanupTask = undefined;\n    }\n  }\n\n  /**\n   * Paint the cached clipPath on the lowerCanvasEl\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawClipPathOnCanvas(\n    ctx: CanvasRenderingContext2D,\n    clipPath: TCachedFabricObject\n  ) {\n    const v = this.viewportTransform;\n    ctx.save();\n    ctx.transform(...v);\n    // DEBUG: uncomment this line, comment the following\n    // ctx.globalAlpha = 0.4;\n    ctx.globalCompositeOperation = 'destination-in';\n    clipPath.transform(ctx);\n    ctx.scale(1 / clipPath.zoomX, 1 / clipPath.zoomY);\n    ctx.drawImage(\n      clipPath._cacheCanvas,\n      -clipPath.cacheTranslationX,\n      -clipPath.cacheTranslationY\n    );\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Array} objects to render\n   */\n  _renderObjects(ctx: CanvasRenderingContext2D, objects: FabricObject[]) {\n    for (let i = 0, len = objects.length; i < len; ++i) {\n      objects[i] && objects[i].render(ctx);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {string} property 'background' or 'overlay'\n   */\n  _renderBackgroundOrOverlay(\n    ctx: CanvasRenderingContext2D,\n    property: 'background' | 'overlay'\n  ) {\n    const fill = this[`${property}Color`],\n      object = this[`${property}Image`],\n      v = this.viewportTransform,\n      needsVpt = this[`${property}Vpt`];\n    if (!fill && !object) {\n      return;\n    }\n    const isAFiller = isFiller(fill);\n    if (fill) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.moveTo(0, 0);\n      ctx.lineTo(this.width, 0);\n      ctx.lineTo(this.width, this.height);\n      ctx.lineTo(0, this.height);\n      ctx.closePath();\n      ctx.fillStyle = isAFiller ? fill.toLive(ctx /* this */)! : fill;\n      if (needsVpt) {\n        ctx.transform(...v);\n      }\n      if (isAFiller) {\n        ctx.transform(1, 0, 0, 1, fill.offsetX || 0, fill.offsetY || 0);\n        const m = ((fill as Gradient<'linear'>).gradientTransform ||\n          (fill as Pattern).patternTransform) as TMat2D;\n        m && ctx.transform(...m);\n      }\n      ctx.fill();\n      ctx.restore();\n    }\n    if (object) {\n      ctx.save();\n      const { skipOffscreen } = this;\n      // if the object doesn't move with the viewport,\n      // the offscreen concept does not apply;\n      this.skipOffscreen = needsVpt;\n      if (needsVpt) {\n        ctx.transform(...v);\n      }\n      object.render(ctx);\n      this.skipOffscreen = skipOffscreen;\n      ctx.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderBackground(ctx: CanvasRenderingContext2D) {\n    this._renderBackgroundOrOverlay(ctx, 'background');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderOverlay(ctx: CanvasRenderingContext2D) {\n    this._renderBackgroundOrOverlay(ctx, 'overlay');\n  }\n\n  /**\n   * Returns coordinates of a center of canvas.\n   * Returned value is an object with top and left properties\n   * @return {Object} object with \"top\" and \"left\" number values\n   * @deprecated migrate to `getCenterPoint`\n   */\n  getCenter() {\n    return {\n      top: this.height / 2,\n      left: this.width / 2,\n    };\n  }\n\n  /**\n   * Returns coordinates of a center of canvas.\n   * @return {Point}\n   */\n  getCenterPoint() {\n    return new Point(this.width / 2, this.height / 2);\n  }\n\n  /**\n   * Centers object horizontally in the canvas\n   */\n  centerObjectH(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(this.getCenterPoint().x, object.getCenterPoint().y)\n    );\n  }\n\n  /**\n   * Centers object vertically in the canvas\n   * @param {FabricObject} object Object to center vertically\n   */\n  centerObjectV(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(object.getCenterPoint().x, this.getCenterPoint().y)\n    );\n  }\n\n  /**\n   * Centers object vertically and horizontally in the canvas\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  centerObject(object: FabricObject) {\n    return this._centerObject(object, this.getCenterPoint());\n  }\n\n  /**\n   * Centers object vertically and horizontally in the viewport\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObject(object: FabricObject) {\n    return this._centerObject(object, this.getVpCenter());\n  }\n\n  /**\n   * Centers object horizontally in the viewport, object.top is unchanged\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObjectH(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(this.getVpCenter().x, object.getCenterPoint().y)\n    );\n  }\n\n  /**\n   * Centers object Vertically in the viewport, object.top is unchanged\n   * @param {FabricObject} object Object to center vertically and horizontally\n   */\n  viewportCenterObjectV(object: FabricObject) {\n    return this._centerObject(\n      object,\n      new Point(object.getCenterPoint().x, this.getVpCenter().y)\n    );\n  }\n\n  /**\n   * Calculate the point in canvas that correspond to the center of actual viewport.\n   * @return {Point} vpCenter, viewport center\n   */\n  getVpCenter(): Point {\n    return transformPoint(\n      this.getCenterPoint(),\n      invertTransform(this.viewportTransform)\n    );\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object Object to center\n   * @param {Point} center Center point\n   */\n  _centerObject(object: FabricObject, center: Point) {\n    object.setXY(center, CENTER, CENTER);\n    object.setCoords();\n    this.renderOnAddRemove && this.requestRenderAll();\n  }\n\n  /**\n   * Returns dataless JSON representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} json string\n   */\n  toDatalessJSON(propertiesToInclude?: string[]) {\n    return this.toDatalessObject(propertiesToInclude);\n  }\n\n  /**\n   * Returns object representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject(propertiesToInclude?: string[]) {\n    return this._toObjectMethod('toObject', propertiesToInclude);\n  }\n\n  /**\n   * Returns Object representation of canvas\n   * this alias is provided because if you call JSON.stringify on an instance,\n   * the toJSON object will be invoked if it exists.\n   * Having a toJSON method means you can do JSON.stringify(myCanvas)\n   * @return {Object} JSON compatible object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY']);\n   * @example <caption>JSON without default values</caption>\n   * var json = canvas.toJSON();\n   */\n  toJSON() {\n    return this.toObject();\n  }\n\n  /**\n   * Returns dataless object representation of canvas\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toDatalessObject(propertiesToInclude?: string[]) {\n    return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n  }\n\n  /**\n   * @private\n   */\n  _toObjectMethod(\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[]\n  ) {\n    const clipPath = this.clipPath;\n    const clipPathData =\n      clipPath && !clipPath.excludeFromExport\n        ? this._toObject(clipPath, methodName, propertiesToInclude)\n        : null;\n    return {\n      version: VERSION,\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      objects: this._objects\n        .filter((object) => !object.excludeFromExport)\n        .map((instance) =>\n          this._toObject(instance, methodName, propertiesToInclude)\n        ),\n      ...this.__serializeBgOverlay(methodName, propertiesToInclude),\n      ...(clipPathData ? { clipPath: clipPathData } : null),\n    };\n  }\n\n  /**\n   * @private\n   */\n  protected _toObject(\n    instance: FabricObject,\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[]\n  ) {\n    let originalValue;\n\n    if (!this.includeDefaultValues) {\n      originalValue = instance.includeDefaultValues;\n      instance.includeDefaultValues = false;\n    }\n\n    const object = instance[methodName](propertiesToInclude);\n    if (!this.includeDefaultValues) {\n      instance.includeDefaultValues = !!originalValue;\n    }\n    return object;\n  }\n\n  /**\n   * @private\n   */\n  __serializeBgOverlay(\n    methodName: TValidToObjectMethod,\n    propertiesToInclude?: string[]\n  ) {\n    const data: any = {},\n      bgImage = this.backgroundImage,\n      overlayImage = this.overlayImage,\n      bgColor = this.backgroundColor,\n      overlayColor = this.overlayColor;\n\n    if (isFiller(bgColor)) {\n      if (!bgColor.excludeFromExport) {\n        data.background = bgColor.toObject(propertiesToInclude);\n      }\n    } else if (bgColor) {\n      data.background = bgColor;\n    }\n\n    if (isFiller(overlayColor)) {\n      if (!overlayColor.excludeFromExport) {\n        data.overlay = overlayColor.toObject(propertiesToInclude);\n      }\n    } else if (overlayColor) {\n      data.overlay = overlayColor;\n    }\n\n    if (bgImage && !bgImage.excludeFromExport) {\n      data.backgroundImage = this._toObject(\n        bgImage,\n        methodName,\n        propertiesToInclude\n      );\n    }\n    if (overlayImage && !overlayImage.excludeFromExport) {\n      data.overlayImage = this._toObject(\n        overlayImage,\n        methodName,\n        propertiesToInclude\n      );\n    }\n\n    return data;\n  }\n\n  /* _TO_SVG_START_ */\n\n  declare svgViewportTransformation: boolean;\n\n  /**\n   * Returns SVG representation of canvas\n   * @function\n   * @param {Object} [options] Options object for SVG output\n   * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n   * @param {Object} [options.viewBox] SVG viewbox object\n   * @param {Number} [options.viewBox.x] x-coordinate of viewbox\n   * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n   * @param {Number} [options.viewBox.width] Width of viewbox\n   * @param {Number} [options.viewBox.height] Height of viewbox\n   * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n   * @param {String} [options.width] desired width of svg with or without units\n   * @param {String} [options.height] desired height of svg with or without units\n   * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n   * @return {String} SVG string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n   * @example <caption>Normal SVG output</caption>\n   * var svg = canvas.toSVG();\n   * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n   * var svg = canvas.toSVG({suppressPreamble: true});\n   * @example <caption>SVG output with viewBox attribute</caption>\n   * var svg = canvas.toSVG({\n   *   viewBox: {\n   *     x: 100,\n   *     y: 100,\n   *     width: 200,\n   *     height: 300\n   *   }\n   * });\n   * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n   * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n   * @example <caption>Modify SVG output with reviver function</caption>\n   * var svg = canvas.toSVG(null, function(svg) {\n   *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n   * });\n   */\n  toSVG(options: TSVGExportOptions = {}, reviver: TSVGReviver) {\n    options.reviver = reviver;\n    const markup: string[] = [];\n\n    this._setSVGPreamble(markup, options);\n    this._setSVGHeader(markup, options);\n    if (this.clipPath) {\n      markup.push(`<g clip-path=\"url(#${this.clipPath.clipPathId})\" >\\n`);\n    }\n    this._setSVGBgOverlayColor(markup, 'background');\n    this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n    this._setSVGObjects(markup, reviver);\n    if (this.clipPath) {\n      markup.push('</g>\\n');\n    }\n    this._setSVGBgOverlayColor(markup, 'overlay');\n    this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n    markup.push('</svg>');\n\n    return markup.join('');\n  }\n\n  /**\n   * @private\n   */\n  _setSVGPreamble(markup: string[], options: TSVGExportOptions): void {\n    if (options.suppressPreamble) {\n      return;\n    }\n    markup.push(\n      '<?xml version=\"1.0\" encoding=\"',\n      options.encoding || 'UTF-8',\n      '\" standalone=\"no\" ?>\\n',\n      '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n      '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n    );\n  }\n\n  /**\n   * @private\n   */\n  _setSVGHeader(markup: string[], options: TSVGExportOptions): void {\n    const width = options.width || `${this.width}`,\n      height = options.height || `${this.height}`,\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS,\n      optViewBox = options.viewBox;\n    let viewBox: string;\n    if (optViewBox) {\n      viewBox = `viewBox=\"${optViewBox.x} ${optViewBox.y} ${optViewBox.width} ${optViewBox.height}\" `;\n    } else if (this.svgViewportTransformation) {\n      const vpt = this.viewportTransform;\n      viewBox = `viewBox=\"${toFixed(\n        -vpt[4] / vpt[0],\n        NUM_FRACTION_DIGITS\n      )} ${toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS)} ${toFixed(\n        this.width / vpt[0],\n        NUM_FRACTION_DIGITS\n      )} ${toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS)}\" `;\n    } else {\n      viewBox = `viewBox=\"0 0 ${this.width} ${this.height}\" `;\n    }\n\n    markup.push(\n      '<svg ',\n      'xmlns=\"http://www.w3.org/2000/svg\" ',\n      'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n      'version=\"1.1\" ',\n      'width=\"',\n      width,\n      '\" ',\n      'height=\"',\n      height,\n      '\" ',\n      viewBox,\n      'xml:space=\"preserve\">\\n',\n      '<desc>Created with Fabric.js ',\n      VERSION,\n      '</desc>\\n',\n      '<defs>\\n',\n      this.createSVGFontFacesMarkup(),\n      this.createSVGRefElementsMarkup(),\n      this.createSVGClipPathMarkup(options),\n      '</defs>\\n'\n    );\n  }\n\n  createSVGClipPathMarkup(options: TSVGExportOptions): string {\n    const clipPath = this.clipPath;\n    if (clipPath) {\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\n      return `<clipPath id=\"${clipPath.clipPathId}\" >\\n${clipPath.toClipPathSVG(\n        options.reviver\n      )}</clipPath>\\n`;\n    }\n    return '';\n  }\n\n  /**\n   * Creates markup containing SVG referenced elements like patterns, gradients etc.\n   * @return {String}\n   */\n  createSVGRefElementsMarkup(): string {\n    return (['background', 'overlay'] as const)\n      .map((prop) => {\n        const fill = this[`${prop}Color`];\n        if (isFiller(fill)) {\n          const shouldTransform = this[`${prop}Vpt`],\n            vpt = this.viewportTransform,\n            object = {\n              // otherwise circular dependency\n              isType: () => false,\n              width: this.width / (shouldTransform ? vpt[0] : 1),\n              height: this.height / (shouldTransform ? vpt[3] : 1),\n            };\n          return fill.toSVG(object as FabricObject, {\n            additionalTransform: shouldTransform ? matrixToSVG(vpt) : '',\n          });\n        }\n      })\n      .join('');\n  }\n\n  /**\n   * Creates markup containing SVG font faces,\n   * font URLs for font faces must be collected by developers\n   * and are not extracted from the DOM by fabricjs\n   * @param {Array} objects Array of fabric objects\n   * @return {String}\n   */\n  createSVGFontFacesMarkup(): string {\n    const objects: FabricObject[] = [],\n      fontList: Record<string, boolean> = {},\n      fontPaths = config.fontPaths;\n\n    this._objects.forEach(function add(object) {\n      objects.push(object);\n      if (isCollection(object)) {\n        object._objects.forEach(add);\n      }\n    });\n\n    objects.forEach((obj) => {\n      if (!isTextObject(obj)) {\n        return;\n      }\n      const { styles, fontFamily } = obj;\n      if (fontList[fontFamily] || !fontPaths[fontFamily]) {\n        return;\n      }\n      fontList[fontFamily] = true;\n      if (!styles) {\n        return;\n      }\n      Object.values(styles).forEach((styleRow) => {\n        Object.values(styleRow).forEach(({ fontFamily = '' }) => {\n          if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n            fontList[fontFamily] = true;\n          }\n        });\n      });\n    });\n\n    const fontListMarkup = Object.keys(fontList)\n      .map(\n        (fontFamily) =>\n          `\\t\\t@font-face {\\n\\t\\t\\tfont-family: '${fontFamily}';\\n\\t\\t\\tsrc: url('${fontPaths[fontFamily]}');\\n\\t\\t}\\n`\n      )\n      .join('');\n\n    if (fontListMarkup) {\n      return `\\t<style type=\"text/css\"><![CDATA[\\n${fontListMarkup}]]></style>\\n`;\n    }\n    return '';\n  }\n\n  /**\n   * @private\n   */\n  _setSVGObjects(markup: string[], reviver: TSVGReviver) {\n    this.forEachObject((fabricObject) => {\n      if (fabricObject.excludeFromExport) {\n        return;\n      }\n      this._setSVGObject(markup, fabricObject, reviver);\n    });\n  }\n\n  /**\n   * This is its own function because the Canvas ( non static ) requires extra code here\n   * @private\n   */\n  _setSVGObject(\n    markup: string[],\n    instance: FabricObject,\n    reviver: TSVGReviver\n  ) {\n    markup.push(instance.toSVG(reviver));\n  }\n\n  /**\n   * @private\n   */\n  _setSVGBgOverlayImage(\n    markup: string[],\n    property: 'overlayImage' | 'backgroundImage',\n    reviver: TSVGReviver\n  ) {\n    const bgOrOverlay = this[property];\n    if (bgOrOverlay && !bgOrOverlay.excludeFromExport && bgOrOverlay.toSVG) {\n      markup.push(bgOrOverlay.toSVG(reviver));\n    }\n  }\n\n  /**\n   * @TODO this seems to handle patterns but fail at gradients.\n   * @private\n   */\n  _setSVGBgOverlayColor(markup: string[], property: 'background' | 'overlay') {\n    const filler = this[`${property}Color`];\n    if (!filler) {\n      return;\n    }\n    if (isFiller(filler)) {\n      const repeat = (filler as Pattern).repeat || '',\n        finalWidth = this.width,\n        finalHeight = this.height,\n        shouldInvert = this[`${property}Vpt`],\n        additionalTransform = shouldInvert\n          ? matrixToSVG(invertTransform(this.viewportTransform))\n          : '';\n      markup.push(\n        `<rect transform=\"${additionalTransform} translate(${finalWidth / 2},${\n          finalHeight / 2\n        })\" x=\"${filler.offsetX - finalWidth / 2}\" y=\"${\n          filler.offsetY - finalHeight / 2\n        }\" width=\"${\n          (repeat === 'repeat-y' || repeat === 'no-repeat') && isPattern(filler)\n            ? (filler.source as HTMLImageElement).width\n            : finalWidth\n        }\" height=\"${\n          (repeat === 'repeat-x' || repeat === 'no-repeat') && isPattern(filler)\n            ? (filler.source as HTMLImageElement).height\n            : finalHeight\n        }\" fill=\"url(#SVGID_${filler.id})\"></rect>\\n`\n      );\n    } else {\n      markup.push(\n        '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n        'fill=\"',\n        filler,\n        '\"',\n        '></rect>\\n'\n      );\n    }\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   *\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\n   *\n   * @param {String|Object} json JSON string or object\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @param {Object} [options] options\n   * @param {AbortSignal} [options.signal] see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @return {Promise<Canvas | StaticCanvas>} instance\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json).then((canvas) => canvas.requestRenderAll());\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * }).then((canvas) => {\n   *   ... canvas is restored, add your code.\n   * });\n   *\n   */\n  loadFromJSON(\n    json: string | Record<string, any>,\n    reviver?: EnlivenObjectOptions['reviver'],\n    { signal }: Abortable = {}\n  ): Promise<this> {\n    if (!json) {\n      return Promise.reject(new FabricError('`json` is undefined'));\n    }\n\n    // parse json if it wasn't already\n    const serialized = typeof json === 'string' ? JSON.parse(json) : json;\n    const {\n      objects = [],\n      backgroundImage,\n      background,\n      overlayImage,\n      overlay,\n      clipPath,\n    } = serialized;\n    const renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    return Promise.all([\n      enlivenObjects<FabricObject>(objects, {\n        reviver,\n        signal,\n      }),\n      enlivenObjectEnlivables(\n        {\n          backgroundImage,\n          backgroundColor: background,\n          overlayImage,\n          overlayColor: overlay,\n          clipPath,\n        },\n        { signal }\n      ),\n    ]).then(([enlived, enlivedMap]) => {\n      this.clear();\n      this.add(...enlived);\n      this.set(serialized);\n      this.set(enlivedMap);\n      this.renderOnAddRemove = renderOnAddRemove;\n      return this;\n    });\n  }\n\n  /**\n   * Clones canvas instance\n   * @param {string[]} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone(properties: string[]) {\n    const data = this.toObject(properties);\n    const canvas = this.cloneWithoutData();\n    return canvas.loadFromJSON(data);\n  }\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions since loadFromJSON does not affect canvas size.\n   */\n  cloneWithoutData() {\n    const el = createCanvasElement();\n    el.width = this.width;\n    el.height = this.height;\n    return new (this.constructor as Constructor<this>)(el);\n  }\n\n  /**\n   * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n   * @param {Object} [options] Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   * @see {@link https://jsfiddle.net/xsjua1rd/ demo}\n   * @example <caption>Generate jpeg dataURL with lower quality</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'jpeg',\n   *   quality: 0.8\n   * });\n   * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   left: 100,\n   *   top: 100,\n   *   width: 200,\n   *   height: 200\n   * });\n   * @example <caption>Generate double scaled png dataURL</caption>\n   * var dataURL = canvas.toDataURL({\n   *   format: 'png',\n   *   multiplier: 2\n   * });\n   * @example <caption>Generate dataURL with objects that overlap a specified object</caption>\n   * var myObject;\n   * var dataURL = canvas.toDataURL({\n   *   filter: (object) => object.isContainedWithinObject(myObject) || object.intersectsWithObject(myObject)\n   * });\n   */\n  toDataURL(options = {} as TDataUrlOptions): string {\n    const {\n      format = 'png',\n      quality = 1,\n      multiplier = 1,\n      enableRetinaScaling = false,\n    } = options;\n    const finalMultiplier =\n      multiplier * (enableRetinaScaling ? this.getRetinaScaling() : 1);\n\n    return toDataURL(\n      this.toCanvasElement(finalMultiplier, options),\n      format,\n      quality\n    );\n  }\n\n  /**\n   * Create a new HTMLCanvas element painted with the current canvas content.\n   * No need to resize the actual one or repaint it.\n   * Will transfer object ownership to a new canvas, paint it, and set everything back.\n   * This is an intermediary step used to get to a dataUrl but also it is useful to\n   * create quick image copies of a canvas without passing for the dataUrl string\n   * @param {Number} [multiplier] a zoom factor.\n   * @param {Object} [options] Cropping informations\n   * @param {Number} [options.left] Cropping left offset.\n   * @param {Number} [options.top] Cropping top offset.\n   * @param {Number} [options.width] Cropping width.\n   * @param {Number} [options.height] Cropping height.\n   * @param {(object: fabric.Object) => boolean} [options.filter] Function to filter objects.\n   */\n  toCanvasElement(\n    multiplier = 1,\n    { width, height, left, top, filter } = {} as TToCanvasElementOptions\n  ): HTMLCanvasElement {\n    const scaledWidth = (width || this.width) * multiplier,\n      scaledHeight = (height || this.height) * multiplier,\n      zoom = this.getZoom(),\n      originalWidth = this.width,\n      originalHeight = this.height,\n      newZoom = zoom * multiplier,\n      vp = this.viewportTransform,\n      translateX = (vp[4] - (left || 0)) * multiplier,\n      translateY = (vp[5] - (top || 0)) * multiplier,\n      newVp = [newZoom, 0, 0, newZoom, translateX, translateY] as TMat2D,\n      originalRetina = this.enableRetinaScaling,\n      canvasEl = createCanvasElement(),\n      objectsToRender = filter\n        ? this._objects.filter((obj) => filter(obj))\n        : this._objects;\n    canvasEl.width = scaledWidth;\n    canvasEl.height = scaledHeight;\n    this.enableRetinaScaling = false;\n    this.viewportTransform = newVp;\n    this.width = scaledWidth;\n    this.height = scaledHeight;\n    this.calcViewportBoundaries();\n    this.renderCanvas(canvasEl.getContext('2d')!, objectsToRender);\n    this.viewportTransform = vp;\n    this.width = originalWidth;\n    this.height = originalHeight;\n    this.calcViewportBoundaries();\n    this.enableRetinaScaling = originalRetina;\n    return canvasEl;\n  }\n\n  /**\n   * Waits until rendering has settled to destroy the canvas\n   * @returns {Promise<boolean>} a promise resolving to `true` once the canvas has been destroyed or to `false` if the canvas has was already destroyed\n   * @throws if aborted by a consequent call\n   */\n  dispose() {\n    !this.disposed &&\n      this.elements.cleanupDOM({ width: this.width, height: this.height });\n    runningAnimations.cancelByCanvas(this);\n    this.disposed = true;\n    return new Promise<boolean>((resolve, reject) => {\n      const task = () => {\n        this.destroy();\n        resolve(true);\n      };\n      task.kill = reject;\n      if (this.__cleanupTask) {\n        this.__cleanupTask.kill('aborted');\n      }\n\n      if (this.destroyed) {\n        resolve(false);\n      } else if (this.nextRenderHandle) {\n        this.__cleanupTask = task;\n      } else {\n        task();\n      }\n    });\n  }\n\n  /**\n   * Clears the canvas element, disposes objects and frees resources.\n   *\n   * Invoked as part of the **async** operation of {@link dispose}.\n   *\n   * **CAUTION**:\n   *\n   * This method is **UNSAFE**.\n   * You may encounter a race condition using it if there's a requested render.\n   * Call this method only if you are sure rendering has settled.\n   * Consider using {@link dispose} as it is **SAFE**\n   *\n   * @private\n   */\n  destroy() {\n    this.destroyed = true;\n    this.cancelRequestedRender();\n    this.forEachObject((object) => object.dispose());\n    this._objects = [];\n    if (this.backgroundImage) {\n      this.backgroundImage.dispose();\n    }\n    this.backgroundImage = undefined;\n    if (this.overlayImage) {\n      this.overlayImage.dispose();\n    }\n    this.overlayImage = undefined;\n    this.elements.dispose();\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @return {String} string representation of an instance\n   */\n  toString() {\n    return `#<Canvas (${this.complexity()}): { objects: ${\n      this._objects.length\n    } }>`;\n  }\n}\n","import type { TPointerEvent } from '../EventTypeDefs';\nimport { Point } from '../Point';\nimport { getScrollLeftTop } from './dom_misc';\n\nconst touchEvents = ['touchstart', 'touchmove', 'touchend'];\n\nfunction getTouchInfo(event: TouchEvent | MouseEvent): MouseEvent | Touch {\n  const touchProp = (event as TouchEvent).changedTouches;\n  if (touchProp && touchProp[0]) {\n    return touchProp[0];\n  }\n  return event as MouseEvent;\n}\n\nexport const getPointer = (event: TPointerEvent): Point => {\n  const element = event.target as HTMLElement,\n    scroll = getScrollLeftTop(element),\n    _evt = getTouchInfo(event);\n  return new Point(_evt.clientX + scroll.left, _evt.clientY + scroll.top);\n};\n\nexport const isTouchEvent = (event: TPointerEvent) =>\n  touchEvents.includes(event.type) ||\n  (event as PointerEvent).pointerType === 'touch';\n\nexport const stopEvent = (e: Event) => {\n  e.preventDefault();\n  e.stopPropagation();\n};\n","import type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport type { TBBox } from '../../typedefs';\n\n/**\n * Calculates bounding box (left, top, width, height) from given `points`\n * @param {XY[]} points\n * @return {Object} Object with left, top, width, height properties\n */\nexport const makeBoundingBoxFromPoints = (points: XY[]): TBBox => {\n  if (points.length === 0) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0,\n    };\n  }\n\n  const { min, max } = points.reduce(\n    ({ min, max }, curr) => {\n      return {\n        min: min.min(curr),\n        max: max.max(curr),\n      };\n    },\n    { min: new Point(points[0]), max: new Point(points[0]) }\n  );\n\n  const size = max.subtract(min);\n\n  return {\n    left: min.x,\n    top: min.y,\n    width: size.x,\n    height: size.y,\n  };\n};\n","import { Point } from '../../Point';\nimport { CENTER } from '../../constants';\nimport type { FabricObject } from '../../shapes/Object/Object';\nimport type { TMat2D } from '../../typedefs';\nimport { makeBoundingBoxFromPoints } from './boundingBoxFromPoints';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from './matrix';\n\n/**\n * given an object and a transform, apply the inverse transform to the object,\n * this is equivalent to remove from that object that transformation, so that\n * added in a space with the removed transform, the object will be the same as before.\n * Removing from an object a transform that scale by 2 is like scaling it by 1/2.\n * Removing from an object a transform that rotate by 30deg is like rotating by 30deg\n * in the opposite direction.\n * This util is used to add objects inside transformed groups or nested groups.\n * @param {FabricObject} object the object you want to transform\n * @param {TMat2D} transform the destination transform\n */\nexport const removeTransformFromObject = (\n  object: FabricObject,\n  transform: TMat2D\n) => {\n  const inverted = invertTransform(transform),\n    finalTransform = multiplyTransformMatrices(\n      inverted,\n      object.calcOwnMatrix()\n    );\n  applyTransformToObject(object, finalTransform);\n};\n\n/**\n * given an object and a transform, apply the transform to the object.\n * this is equivalent to change the space where the object is drawn.\n * Adding to an object a transform that scale by 2 is like scaling it by 2.\n * This is used when removing an object from an active selection for example.\n * @param {FabricObject} object the object you want to transform\n * @param {Array} transform the destination transform\n */\nexport const addTransformToObject = (object: FabricObject, transform: TMat2D) =>\n  applyTransformToObject(\n    object,\n    multiplyTransformMatrices(transform, object.calcOwnMatrix())\n  );\n\n/**\n * discard an object transform state and apply the one from the matrix.\n * @param {FabricObject} object the object you want to transform\n * @param {Array} transform the destination transform\n */\nexport const applyTransformToObject = (\n  object: FabricObject,\n  transform: TMat2D\n) => {\n  const { translateX, translateY, scaleX, scaleY, ...otherOptions } =\n      qrDecompose(transform),\n    center = new Point(translateX, translateY);\n  object.flipX = false;\n  object.flipY = false;\n  Object.assign(object, otherOptions);\n  object.set({ scaleX, scaleY });\n  object.setPositionByOrigin(center, CENTER, CENTER);\n};\n/**\n * reset an object transform state to neutral. Top and left are not accounted for\n * @param  {FabricObject} target object to transform\n */\nexport const resetObjectTransform = (target: FabricObject) => {\n  target.scaleX = 1;\n  target.scaleY = 1;\n  target.skewX = 0;\n  target.skewY = 0;\n  target.flipX = false;\n  target.flipY = false;\n  target.rotate(0);\n};\n\n/**\n * Extract Object transform values\n * @param  {FabricObject} target object to read from\n * @return {Object} Components of transform\n */\nexport const saveObjectTransform = (target: FabricObject) => ({\n  scaleX: target.scaleX,\n  scaleY: target.scaleY,\n  skewX: target.skewX,\n  skewY: target.skewY,\n  angle: target.angle,\n  left: target.left,\n  flipX: target.flipX,\n  flipY: target.flipY,\n  top: target.top,\n});\n\n/**\n * given a width and height, return the size of the bounding box\n * that can contains the box with width/height with applied transform.\n * Use to calculate the boxes around objects for controls.\n * @param {Number} width\n * @param {Number} height\n * @param {TMat2D} t\n * @returns {Point} size\n */\nexport const sizeAfterTransform = (\n  width: number,\n  height: number,\n  t: TMat2D\n) => {\n  const dimX = width / 2,\n    dimY = height / 2,\n    points = [\n      new Point(-dimX, -dimY),\n      new Point(dimX, -dimY),\n      new Point(-dimX, dimY),\n      new Point(dimX, dimY),\n    ].map((p) => p.transform(t)),\n    bbox = makeBoundingBoxFromPoints(points);\n  return new Point(bbox.width, bbox.height);\n};\n","import { iMatrix } from '../../constants';\nimport type { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/Object';\nimport type { TMat2D } from '../../typedefs';\nimport { invertTransform, multiplyTransformMatrices } from './matrix';\nimport { applyTransformToObject } from './objectTransforms';\n\n/**\n * We are actually looking for the transformation from the destination plane to the source plane (change of basis matrix)\\\n * The object will exist on the destination plane and we want it to seem unchanged by it so we invert the destination matrix (`to`) and then apply the source matrix (`from`)\n * @param [from]\n * @param [to]\n * @returns\n */\nexport const calcPlaneChangeMatrix = (\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix\n) => multiplyTransformMatrices(invertTransform(to), from);\n\n/**\n * Sends a point from the source coordinate plane to the destination coordinate plane.\\\n * From the canvas/viewer's perspective the point remains unchanged.\n *\n * @example <caption>Send point from canvas plane to group plane</caption>\n * var obj = new Rect({ left: 20, top: 20, width: 60, height: 60, strokeWidth: 0 });\n * var group = new Group([obj], { strokeWidth: 0 });\n * var sentPoint1 = sendPointToPlane(new Point(50, 50), undefined, group.calcTransformMatrix());\n * var sentPoint2 = sendPointToPlane(new Point(50, 50), iMatrix, group.calcTransformMatrix());\n * console.log(sentPoint1, sentPoint2) //  both points print (0,0) which is the center of group\n *\n * @param {Point} point\n * @param {TMat2D} [from] plane matrix containing object. Passing `undefined` is equivalent to passing the identity matrix, which means `point` exists in the canvas coordinate plane.\n * @param {TMat2D} [to] destination plane matrix to contain object. Passing `undefined` means `point` should be sent to the canvas coordinate plane.\n * @returns {Point} transformed point\n */\nexport const sendPointToPlane = (\n  point: Point,\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix\n): Point => point.transform(calcPlaneChangeMatrix(from, to));\n\n/**\n * See {@link sendPointToPlane}\n */\nexport const sendVectorToPlane = (\n  point: Point,\n  from: TMat2D = iMatrix,\n  to: TMat2D = iMatrix\n): Point => point.transform(calcPlaneChangeMatrix(from, to), true);\n\n/**\n *\n * A util that abstracts applying transform to objects.\\\n * Sends `object` to the destination coordinate plane by applying the relevant transformations.\\\n * Changes the space/plane where `object` is drawn.\\\n * From the canvas/viewer's perspective `object` remains unchanged.\n *\n * @example <caption>Move clip path from one object to another while preserving it's appearance as viewed by canvas/viewer</caption>\n * let obj, obj2;\n * let clipPath = new Circle({ radius: 50 });\n * obj.clipPath = clipPath;\n * // render\n * sendObjectToPlane(clipPath, obj.calcTransformMatrix(), obj2.calcTransformMatrix());\n * obj.clipPath = undefined;\n * obj2.clipPath = clipPath;\n * // render, clipPath now clips obj2 but seems unchanged from the eyes of the viewer\n *\n * @example <caption>Clip an object's clip path with an existing object</caption>\n * let obj, existingObj;\n * let clipPath = new Circle({ radius: 50 });\n * obj.clipPath = clipPath;\n * let transformTo = multiplyTransformMatrices(obj.calcTransformMatrix(), clipPath.calcTransformMatrix());\n * sendObjectToPlane(existingObj, existingObj.group?.calcTransformMatrix(), transformTo);\n * clipPath.clipPath = existingObj;\n *\n * @param {FabricObject} object\n * @param {Matrix} [from] plane matrix containing object. Passing `undefined` is equivalent to passing the identity matrix, which means `object` is a direct child of canvas.\n * @param {Matrix} [to] destination plane matrix to contain object. Passing `undefined` means `object` should be sent to the canvas coordinate plane.\n * @returns {Matrix} the transform matrix that was applied to `object`\n */\nexport const sendObjectToPlane = (\n  object: FabricObject,\n  from?: TMat2D,\n  to?: TMat2D\n): TMat2D => {\n  const t = calcPlaneChangeMatrix(from, to);\n  applyTransformToObject(\n    object,\n    multiplyTransformMatrices(t, object.calcOwnMatrix())\n  );\n  return t;\n};\n","import type {\n  BasicTransformEvent,\n  TModificationEvents,\n} from '../EventTypeDefs';\n\nexport const fireEvent = (\n  eventName: TModificationEvents,\n  options: BasicTransformEvent\n) => {\n  const {\n    transform: { target },\n  } = options;\n  target.canvas?.fire(`object:${eventName}`, {\n    ...options,\n    target,\n  });\n  target.fire(eventName, options);\n};\n","import type { TOriginX, TOriginY } from '../../typedefs';\n\nconst originOffset = {\n  left: -0.5,\n  top: -0.5,\n  center: 0,\n  bottom: 0.5,\n  right: 0.5,\n};\n/**\n * Resolves origin value relative to center\n * @private\n * @param {TOriginX | TOriginY} originValue originX / originY\n * @returns number\n */\n\nexport const resolveOrigin = (\n  originValue: TOriginX | TOriginY | number\n): number =>\n  typeof originValue === 'string'\n    ? originOffset[originValue]\n    : originValue - 0.5;\n","import type {\n  TPointerEvent,\n  Transform,\n  TransformAction,\n  BasicTransformEvent,\n} from '../EventTypeDefs';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { Point } from '../Point';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TOriginX, TOriginY } from '../typedefs';\nimport {\n  degreesToRadians,\n  radiansToDegrees,\n} from '../util/misc/radiansDegreesConversion';\nimport type { Control } from './Control';\nimport { CENTER } from '../constants';\n\nexport const NOT_ALLOWED_CURSOR = 'not-allowed';\n\n/**\n * @param {Boolean} alreadySelected true if target is already selected\n * @param {String} corner a string representing the corner ml, mr, tl ...\n * @param {Event} e Event object\n * @param {FabricObject} [target] inserted back to help overriding. Unused\n */\nexport const getActionFromCorner = (\n  alreadySelected: boolean,\n  corner: string | undefined,\n  e: TPointerEvent,\n  target: FabricObject\n) => {\n  if (!corner || !alreadySelected) {\n    return 'drag';\n  }\n  const control = target.controls[corner];\n  return control.getActionName(e, control, target);\n};\n\n/**\n * Checks if transform is centered\n * @param {Object} transform transform data\n * @return {Boolean} true if transform is centered\n */\nexport function isTransformCentered(transform: Transform) {\n  return transform.originX === CENTER && transform.originY === CENTER;\n}\n\nexport function invertOrigin(origin: TOriginX | TOriginY) {\n  return -resolveOrigin(origin) + 0.5;\n}\n\nexport const isLocked = (\n  target: FabricObject,\n  lockingKey:\n    | 'lockMovementX'\n    | 'lockMovementY'\n    | 'lockRotation'\n    | 'lockScalingX'\n    | 'lockScalingY'\n    | 'lockSkewingX'\n    | 'lockSkewingY'\n    | 'lockScalingFlip'\n) => target[lockingKey];\n\nexport const commonEventInfo: TransformAction<\n  Transform,\n  BasicTransformEvent\n> = (eventData, transform, x, y) => {\n  return {\n    e: eventData,\n    transform,\n    pointer: new Point(x, y),\n  };\n};\n\n/**\n * Combine control position and object angle to find the control direction compared\n * to the object center.\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n * @param {Control} control the control class\n * @return {Number} 0 - 7 a quadrant number\n */\nexport function findCornerQuadrant(\n  fabricObject: FabricObject,\n  control: Control\n): number {\n  //  angle is relative to canvas plane\n  const angle = fabricObject.getTotalAngle(),\n    cornerAngle =\n      angle + radiansToDegrees(Math.atan2(control.y, control.x)) + 360;\n  return Math.round((cornerAngle % 360) / 45);\n}\n\n/**\n * @returns the normalized point (rotated relative to center) in local coordinates\n */\nfunction normalizePoint(\n  target: FabricObject,\n  point: Point,\n  originX: TOriginX,\n  originY: TOriginY\n): Point {\n  const center = target.getRelativeCenterPoint(),\n    p =\n      typeof originX !== 'undefined' && typeof originY !== 'undefined'\n        ? target.translateToGivenOrigin(\n            center,\n            CENTER,\n            CENTER,\n            originX,\n            originY\n          )\n        : new Point(target.left, target.top),\n    p2 = target.angle\n      ? point.rotate(-degreesToRadians(target.angle), center)\n      : point;\n  return p2.subtract(p);\n}\n\n/**\n * Transforms a point to the offset from the given origin\n * @param {Object} transform\n * @param {String} originX\n * @param {String} originY\n * @param {number} x\n * @param {number} y\n * @return {Fabric.Point} the normalized point\n */\nexport function getLocalPoint(\n  { target, corner }: Transform,\n  originX: TOriginX,\n  originY: TOriginY,\n  x: number,\n  y: number\n) {\n  const control = target.controls[corner],\n    zoom = target.canvas?.getZoom() || 1,\n    padding = target.padding / zoom,\n    localPoint = normalizePoint(target, new Point(x, y), originX, originY);\n  if (localPoint.x >= padding) {\n    localPoint.x -= padding;\n  }\n  if (localPoint.x <= -padding) {\n    localPoint.x += padding;\n  }\n  if (localPoint.y >= padding) {\n    localPoint.y -= padding;\n  }\n  if (localPoint.y <= padding) {\n    localPoint.y += padding;\n  }\n  localPoint.x -= control.offsetX;\n  localPoint.y -= control.offsetY;\n  return localPoint;\n}\n","import type { TransformActionHandler } from '../EventTypeDefs';\nimport { LEFT, TOP } from '../constants';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo, isLocked } from './util';\n\n/**\n * Action handler\n * @private\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if the translation occurred\n */\nexport const dragHandler: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y\n) => {\n  const { target, offsetX, offsetY } = transform,\n    newLeft = x - offsetX,\n    newTop = y - offsetY,\n    moveX = !isLocked(target, 'lockMovementX') && target.left !== newLeft,\n    moveY = !isLocked(target, 'lockMovementY') && target.top !== newTop;\n  moveX && target.set(LEFT, newLeft);\n  moveY && target.set(TOP, newTop);\n  if (moveX || moveY) {\n    fireEvent('moving', commonEventInfo(eventData, transform, x, y));\n  }\n  return moveX || moveY;\n};\n","import type { TSVGReviver } from '../../typedefs';\nimport { uid } from '../../util/internals/uid';\nimport { colorPropToSVG, matrixToSVG } from '../../util/misc/svgParsing';\nimport { NONE } from '../../constants';\nimport type { FabricObject } from './FabricObject';\nimport { isFiller } from '../../util/typeAssertions';\n\nexport class FabricObjectSVGExportMixin {\n  /**\n   * When an object is being exported as SVG as a clippath, a reference inside the SVG is needed.\n   * This reference is a UID in the fabric namespace and is temporary stored here.\n   * @type {String}\n   */\n  declare clipPathId?: string;\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Boolean} skipShadow a boolean to skip shadow filter output\n   * @return {String}\n   */\n  getSvgStyles(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    skipShadow?: boolean\n  ) {\n    const fillRule = this.fillRule ? this.fillRule : 'nonzero',\n      strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n      strokeDashArray = this.strokeDashArray\n        ? this.strokeDashArray.join(' ')\n        : NONE,\n      strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n      strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n      strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n      strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n      opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n      visibility = this.visible ? '' : ' visibility: hidden;',\n      filter = skipShadow ? '' : this.getSvgFilter(),\n      fill = colorPropToSVG('fill', this.fill),\n      stroke = colorPropToSVG('stroke', this.stroke);\n\n    return [\n      stroke,\n      'stroke-width: ',\n      strokeWidth,\n      '; ',\n      'stroke-dasharray: ',\n      strokeDashArray,\n      '; ',\n      'stroke-linecap: ',\n      strokeLineCap,\n      '; ',\n      'stroke-dashoffset: ',\n      strokeDashOffset,\n      '; ',\n      'stroke-linejoin: ',\n      strokeLineJoin,\n      '; ',\n      'stroke-miterlimit: ',\n      strokeMiterLimit,\n      '; ',\n      fill,\n      'fill-rule: ',\n      fillRule,\n      '; ',\n      'opacity: ',\n      opacity,\n      ';',\n      filter,\n      visibility,\n    ].join('');\n  }\n\n  /**\n   * Returns filter for svg shadow\n   * @return {String}\n   */\n  getSvgFilter(this: FabricObjectSVGExportMixin & FabricObject) {\n    return this.shadow ? `filter: url(#SVGID_${this.shadow.id});` : '';\n  }\n\n  /**\n   * Returns id attribute for svg output\n   * @return {String}\n   */\n  getSvgCommons(\n    this: FabricObjectSVGExportMixin & FabricObject & { id?: string }\n  ) {\n    return [\n      this.id ? `id=\"${this.id}\" ` : '',\n      this.clipPath\n        ? `clip-path=\"url(#${\n            (this.clipPath as FabricObjectSVGExportMixin & FabricObject)\n              .clipPathId\n          })\" `\n        : '',\n    ].join('');\n  }\n\n  /**\n   * Returns transform-string for svg-export\n   * @param {Boolean} use the full transform or the single object one.\n   * @return {String}\n   */\n  getSvgTransform(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    full?: boolean,\n    additionalTransform = ''\n  ) {\n    const transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n      svgTransform = `transform=\"${matrixToSVG(transform)}`;\n    return `${svgTransform}${additionalTransform}\" `;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * This function is implemented in each subclass\n   * This is just because typescript otherwise cryies all the time\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(reviver?: TSVGReviver): string[] {\n    return [''];\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toSVG(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    reviver?: TSVGReviver\n  ) {\n    return this._createBaseSVGMarkup(this._toSVG(reviver), {\n      reviver,\n    });\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toClipPathSVG(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    reviver?: TSVGReviver\n  ) {\n    return (\n      '\\t' +\n      this._createBaseClipPathSVGMarkup(this._toSVG(reviver), {\n        reviver,\n      })\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createBaseClipPathSVGMarkup(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    objectMarkup: string[],\n    {\n      reviver,\n      additionalTransform = '',\n    }: { reviver?: TSVGReviver; additionalTransform?: string } = {}\n  ) {\n    const commonPieces = [\n        this.getSvgTransform(true, additionalTransform),\n        this.getSvgCommons(),\n      ].join(''),\n      // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n    objectMarkup[index] = commonPieces;\n    return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n  }\n\n  /**\n   * @private\n   */\n  _createBaseSVGMarkup(\n    this: FabricObjectSVGExportMixin & FabricObject,\n    objectMarkup: string[],\n    {\n      noStyle,\n      reviver,\n      withShadow,\n      additionalTransform,\n    }: {\n      noStyle?: boolean;\n      reviver?: TSVGReviver;\n      withShadow?: boolean;\n      additionalTransform?: string;\n    } = {}\n  ): string {\n    const styleInfo = noStyle ? '' : `style=\"${this.getSvgStyles()}\" `,\n      shadowInfo = withShadow ? `style=\"${this.getSvgFilter()}\" ` : '',\n      clipPath = this.clipPath as FabricObjectSVGExportMixin & FabricObject,\n      vectorEffect = this.strokeUniform\n        ? 'vector-effect=\"non-scaling-stroke\" '\n        : '',\n      absoluteClipPath = clipPath && clipPath.absolutePositioned,\n      stroke = this.stroke,\n      fill = this.fill,\n      shadow = this.shadow,\n      markup = [],\n      // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n    let clipPathMarkup;\n    if (clipPath) {\n      clipPath.clipPathId = `CLIPPATH_${uid()}`;\n      clipPathMarkup = `<clipPath id=\"${\n        clipPath.clipPathId\n      }\" >\\n${clipPath.toClipPathSVG(reviver)}</clipPath>\\n`;\n    }\n    if (absoluteClipPath) {\n      markup.push('<g ', shadowInfo, this.getSvgCommons(), ' >\\n');\n    }\n    markup.push(\n      '<g ',\n      this.getSvgTransform(false),\n      !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '',\n      ' >\\n'\n    );\n    const commonPieces = [\n      styleInfo,\n      vectorEffect,\n      noStyle ? '' : this.addPaintOrder(),\n      ' ',\n      additionalTransform ? `transform=\"${additionalTransform}\" ` : '',\n    ].join('');\n    objectMarkup[index] = commonPieces;\n    if (isFiller(fill)) {\n      markup.push(fill.toSVG(this));\n    }\n    if (isFiller(stroke)) {\n      markup.push(stroke.toSVG(this));\n    }\n    if (shadow) {\n      markup.push(shadow.toSVG(this));\n    }\n    if (clipPath) {\n      markup.push(clipPathMarkup);\n    }\n    markup.push(objectMarkup.join(''));\n    markup.push('</g>\\n');\n    absoluteClipPath && markup.push('</g>\\n');\n    return reviver ? reviver(markup.join('')) : markup.join('');\n  }\n\n  addPaintOrder(this: FabricObjectSVGExportMixin & FabricObject) {\n    return this.paintFirst !== 'fill'\n      ? ` paint-order=\"${this.paintFirst}\" `\n      : '';\n  }\n}\n","/**\n * Easing functions\n * @see {@link http://gizma.com/easing/ Easing Equations by Robert Penner}\n */\n\nimport { twoMathPi, halfPI } from '../../constants';\nimport type { TEasingFunction } from './types';\n\nconst normalize = (a: number, c: number, p: number, s: number) => {\n  if (a < Math.abs(c)) {\n    a = c;\n    s = p / 4;\n  } else {\n    //handle the 0/0 case:\n    if (c === 0 && a === 0) {\n      s = (p / twoMathPi) * Math.asin(1);\n    } else {\n      s = (p / twoMathPi) * Math.asin(c / a);\n    }\n  }\n  return { a, c, p, s };\n};\n\nconst elastic = (\n  a: number,\n  s: number,\n  p: number,\n  t: number,\n  d: number\n): number =>\n  a * Math.pow(2, 10 * (t -= 1)) * Math.sin(((t * d - s) * twoMathPi) / p);\n\n/**\n * Default sinusoidal easing\n */\nexport const defaultEasing: TEasingFunction = (t, b, c, d) =>\n  -c * Math.cos((t / d) * halfPI) + c + b;\n\n/**\n * Cubic easing in\n */\nexport const easeInCubic: TEasingFunction = (t, b, c, d) =>\n  c * (t / d) ** 3 + b;\n\n/**\n * Cubic easing out\n */\nexport const easeOutCubic: TEasingFunction = (t, b, c, d) =>\n  c * ((t / d - 1) ** 3 + 1) + b;\n\n/**\n * Cubic easing in and out\n */\nexport const easeInOutCubic: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 3 + b;\n  }\n  return (c / 2) * ((t - 2) ** 3 + 2) + b;\n};\n\n/**\n * Quartic easing in\n */\nexport const easeInQuart: TEasingFunction = (t, b, c, d) =>\n  c * (t /= d) * t ** 3 + b;\n\n/**\n * Quartic easing out\n */\nexport const easeOutQuart: TEasingFunction = (t, b, c, d) =>\n  -c * ((t = t / d - 1) * t ** 3 - 1) + b;\n\n/**\n * Quartic easing in and out\n */\nexport const easeInOutQuart: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 4 + b;\n  }\n  return (-c / 2) * ((t -= 2) * t ** 3 - 2) + b;\n};\n\n/**\n * Quintic easing in\n */\nexport const easeInQuint: TEasingFunction = (t, b, c, d) =>\n  c * (t / d) ** 5 + b;\n\n/**\n * Quintic easing out\n */\nexport const easeOutQuint: TEasingFunction = (t, b, c, d) =>\n  c * ((t / d - 1) ** 5 + 1) + b;\n\n/**\n * Quintic easing in and out\n */\nexport const easeInOutQuint: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 5 + b;\n  }\n  return (c / 2) * ((t - 2) ** 5 + 2) + b;\n};\n\n/**\n * Sinusoidal easing in\n */\nexport const easeInSine: TEasingFunction = (t, b, c, d) =>\n  -c * Math.cos((t / d) * halfPI) + c + b;\n\n/**\n * Sinusoidal easing out\n */\nexport const easeOutSine: TEasingFunction = (t, b, c, d) =>\n  c * Math.sin((t / d) * halfPI) + b;\n\n/**\n * Sinusoidal easing in and out\n */\nexport const easeInOutSine: TEasingFunction = (t, b, c, d) =>\n  (-c / 2) * (Math.cos((Math.PI * t) / d) - 1) + b;\n\n/**\n * Exponential easing in\n */\nexport const easeInExpo: TEasingFunction = (t, b, c, d) =>\n  t === 0 ? b : c * 2 ** (10 * (t / d - 1)) + b;\n\n/**\n * Exponential easing out\n */\nexport const easeOutExpo: TEasingFunction = (t, b, c, d) =>\n  t === d ? b + c : c * -(2 ** ((-10 * t) / d) + 1) + b;\n\n/**\n * Exponential easing in and out\n */\nexport const easeInOutExpo: TEasingFunction = (t, b, c, d) => {\n  if (t === 0) {\n    return b;\n  }\n  if (t === d) {\n    return b + c;\n  }\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * 2 ** (10 * (t - 1)) + b;\n  }\n  return (c / 2) * -(2 ** (-10 * --t) + 2) + b;\n};\n\n/**\n * Circular easing in\n */\nexport const easeInCirc: TEasingFunction = (t, b, c, d) =>\n  -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n\n/**\n * Circular easing out\n */\nexport const easeOutCirc: TEasingFunction = (t, b, c, d) =>\n  c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n\n/**\n * Circular easing in and out\n */\nexport const easeInOutCirc: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (-c / 2) * (Math.sqrt(1 - t ** 2) - 1) + b;\n  }\n  return (c / 2) * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n};\n\n/**\n * Elastic easing in\n */\nexport const easeInElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d;\n  if (t === 1) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * 0.3;\n  }\n  const { a: normA, s: normS, p: normP } = normalize(a, c, p, s);\n  return -elastic(normA, normS, normP, t, d) + b;\n};\n\n/**\n * Elastic easing out\n */\nexport const easeOutElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d;\n  if (t === 1) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * 0.3;\n  }\n  const { a: normA, s: normS, p: normP, c: normC } = normalize(a, c, p, s);\n  return (\n    normA * 2 ** (-10 * t) * Math.sin(((t * d - normS) * twoMathPi) / normP) +\n    normC +\n    b\n  );\n};\n\n/**\n * Elastic easing in and out\n */\nexport const easeInOutElastic: TEasingFunction = (t, b, c, d) => {\n  const s = 1.70158,\n    a = c;\n  let p = 0;\n  if (t === 0) {\n    return b;\n  }\n  t /= d / 2;\n  if (t === 2) {\n    return b + c;\n  }\n  if (!p) {\n    p = d * (0.3 * 1.5);\n  }\n  const { a: normA, s: normS, p: normP, c: normC } = normalize(a, c, p, s);\n  if (t < 1) {\n    return -0.5 * elastic(normA, normS, normP, t, d) + b;\n  }\n  return (\n    normA *\n      Math.pow(2, -10 * (t -= 1)) *\n      Math.sin(((t * d - normS) * twoMathPi) / normP) *\n      0.5 +\n    normC +\n    b\n  );\n};\n\n/**\n * Backwards easing in\n */\nexport const easeInBack: TEasingFunction = (t, b, c, d, s = 1.70158) =>\n  c * (t /= d) * t * ((s + 1) * t - s) + b;\n\n/**\n * Backwards easing out\n */\nexport const easeOutBack: TEasingFunction = (t, b, c, d, s = 1.70158) =>\n  c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n\n/**\n * Backwards easing in and out\n */\nexport const easeInOutBack: TEasingFunction = (t, b, c, d, s = 1.70158) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n  }\n  return (c / 2) * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n};\n\n/**\n * Bouncing easing out\n */\nexport const easeOutBounce: TEasingFunction = (t, b, c, d) => {\n  if ((t /= d) < 1 / 2.75) {\n    return c * (7.5625 * t * t) + b;\n  } else if (t < 2 / 2.75) {\n    return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n  } else if (t < 2.5 / 2.75) {\n    return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n  } else {\n    return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n  }\n};\n\n/**\n * Bouncing easing in\n */\nexport const easeInBounce: TEasingFunction = (t, b, c, d) =>\n  c - easeOutBounce(d - t, 0, c, d) + b;\n\n/**\n * Bouncing easing in and out\n */\nexport const easeInOutBounce: TEasingFunction = (t, b, c, d) =>\n  t < d / 2\n    ? easeInBounce(t * 2, 0, c, d) * 0.5 + b\n    : easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n\n/**\n * Quadratic easing in\n */\nexport const easeInQuad: TEasingFunction = (t, b, c, d) => c * (t /= d) * t + b;\n\n/**\n * Quadratic easing out\n */\nexport const easeOutQuad: TEasingFunction = (t, b, c, d) =>\n  -c * (t /= d) * (t - 2) + b;\n\n/**\n * Quadratic easing in and out\n */\nexport const easeInOutQuad: TEasingFunction = (t, b, c, d) => {\n  t /= d / 2;\n  if (t < 1) {\n    return (c / 2) * t ** 2 + b;\n  }\n  return (-c / 2) * (--t * (t - 2) - 1) + b;\n};\n","import { noop } from '../../constants';\nimport { requestAnimFrame } from './AnimationFrameProvider';\nimport { runningAnimations } from './AnimationRegistry';\nimport { defaultEasing } from './easing';\nimport type {\n  AnimationState,\n  TAbortCallback,\n  TBaseAnimationOptions,\n  TEasingFunction,\n  TOnAnimationChangeCallback,\n} from './types';\n\nconst defaultAbort = () => false;\n\nexport abstract class AnimationBase<\n  T extends number | number[] = number | number[]\n> {\n  declare readonly startValue: T;\n  declare readonly endValue: T;\n  declare readonly duration: number;\n  declare readonly delay: number;\n\n  protected declare readonly byValue: T;\n  protected declare readonly easing: TEasingFunction<T>;\n\n  private declare readonly _onStart: VoidFunction;\n  private declare readonly _onChange: TOnAnimationChangeCallback<T, void>;\n  private declare readonly _onComplete: TOnAnimationChangeCallback<T, void>;\n  private declare readonly _abort: TAbortCallback<T>;\n\n  /**\n   * Used to register the animation to a target object\n   * so that it can be cancelled within the object context\n   */\n  declare readonly target?: unknown;\n\n  private _state: AnimationState = 'pending';\n  /**\n   * Time %, or the ratio of `timeElapsed / duration`\n   * @see tick\n   */\n  durationProgress = 0;\n  /**\n   * Value %, or the ratio of `(currentValue - startValue) / (endValue - startValue)`\n   */\n  valueProgress = 0;\n  /**\n   * Current value\n   */\n  declare value: T;\n  /**\n   * Animation start time ms\n   */\n  private declare startTime: number;\n\n  constructor({\n    startValue,\n    byValue,\n    duration = 500,\n    delay = 0,\n    easing = defaultEasing,\n    onStart = noop,\n    onChange = noop,\n    onComplete = noop,\n    abort = defaultAbort,\n    target,\n  }: TBaseAnimationOptions<T>) {\n    this.tick = this.tick.bind(this);\n\n    this.duration = duration;\n    this.delay = delay;\n    this.easing = easing;\n    this._onStart = onStart;\n    this._onChange = onChange;\n    this._onComplete = onComplete;\n    this._abort = abort;\n    this.target = target;\n\n    this.startValue = startValue;\n    this.byValue = byValue;\n    this.value = this.startValue;\n    this.endValue = Object.freeze(this.calculate(this.duration).value);\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  isDone() {\n    return this._state === 'aborted' || this._state === 'completed';\n  }\n\n  /**\n   * Calculate the current value based on the easing parameters\n   * @param timeElapsed in ms\n   * @protected\n   */\n  protected abstract calculate(timeElapsed: number): {\n    value: T;\n    valueProgress: number;\n  };\n\n  start() {\n    const firstTick: FrameRequestCallback = (timestamp) => {\n      if (this._state !== 'pending') return;\n      this.startTime = timestamp || +new Date();\n      this._state = 'running';\n      this._onStart();\n      this.tick(this.startTime);\n    };\n\n    this.register();\n\n    // setTimeout(cb, 0) will run cb on the next frame, causing a delay\n    // we don't want that\n    if (this.delay > 0) {\n      setTimeout(() => requestAnimFrame(firstTick), this.delay);\n    } else {\n      requestAnimFrame(firstTick);\n    }\n  }\n\n  private tick(t: number) {\n    const durationMs = (t || +new Date()) - this.startTime;\n    const boundDurationMs = Math.min(durationMs, this.duration);\n    this.durationProgress = boundDurationMs / this.duration;\n    const { value, valueProgress } = this.calculate(boundDurationMs);\n    this.value = Object.freeze(value);\n    this.valueProgress = valueProgress;\n\n    if (this._state === 'aborted') {\n      return;\n    } else if (\n      this._abort(this.value, this.valueProgress, this.durationProgress)\n    ) {\n      this._state = 'aborted';\n      this.unregister();\n    } else if (durationMs >= this.duration) {\n      this.durationProgress = this.valueProgress = 1;\n      this._onChange(this.endValue, this.valueProgress, this.durationProgress);\n      this._state = 'completed';\n      this._onComplete(\n        this.endValue,\n        this.valueProgress,\n        this.durationProgress\n      );\n      this.unregister();\n    } else {\n      this._onChange(this.value, this.valueProgress, this.durationProgress);\n      requestAnimFrame(this.tick);\n    }\n  }\n\n  private register() {\n    runningAnimations.push(this as unknown as AnimationBase);\n  }\n\n  private unregister() {\n    runningAnimations.remove(this as unknown as AnimationBase);\n  }\n\n  abort() {\n    this._state = 'aborted';\n    this.unregister();\n  }\n}\n","import { AnimationBase } from './AnimationBase';\nimport type { ValueAnimationOptions } from './types';\n\nexport class ValueAnimation extends AnimationBase<number> {\n  constructor({\n    startValue = 0,\n    endValue = 100,\n    ...otherOptions\n  }: ValueAnimationOptions) {\n    super({\n      ...otherOptions,\n      startValue,\n      byValue: endValue - startValue,\n    });\n  }\n\n  protected calculate(timeElapsed: number) {\n    const value = this.easing(\n      timeElapsed,\n      this.startValue,\n      this.byValue,\n      this.duration\n    );\n    return {\n      value,\n      valueProgress: Math.abs((value - this.startValue) / this.byValue),\n    };\n  }\n}\n","import { AnimationBase } from './AnimationBase';\nimport type { ArrayAnimationOptions } from './types';\n\nexport class ArrayAnimation extends AnimationBase<number[]> {\n  constructor({\n    startValue = [0],\n    endValue = [100],\n    ...options\n  }: ArrayAnimationOptions) {\n    super({\n      ...options,\n      startValue,\n      byValue: endValue.map((value, i) => value - startValue[i]),\n    });\n  }\n  protected calculate(timeElapsed: number) {\n    const values = this.startValue.map((value, i) =>\n      this.easing(timeElapsed, value, this.byValue[i], this.duration, i)\n    );\n    return {\n      value: values,\n      valueProgress: Math.abs(\n        (values[0] - this.startValue[0]) / this.byValue[0]\n      ),\n    };\n  }\n}\n","export const capValue = (min: number, value: number, max: number) =>\n  Math.max(min, Math.min(value, max));\n","import { Color } from '../../color/Color';\nimport type { TRGBAColorSource } from '../../color/typedefs';\nimport { halfPI } from '../../constants';\nimport { capValue } from '../misc/capValue';\nimport { AnimationBase } from './AnimationBase';\nimport type {\n  ColorAnimationOptions,\n  TEasingFunction,\n  TOnAnimationChangeCallback,\n} from './types';\n\nconst defaultColorEasing: TEasingFunction = (\n  timeElapsed,\n  startValue,\n  byValue,\n  duration\n) => {\n  const durationProgress = 1 - Math.cos((timeElapsed / duration) * halfPI);\n  return startValue + byValue * durationProgress;\n};\n\nconst wrapColorCallback = <R>(\n  callback?: TOnAnimationChangeCallback<string, R>\n) =>\n  callback &&\n  ((rgba: TRGBAColorSource, valueProgress: number, durationProgress: number) =>\n    callback(new Color(rgba).toRgba(), valueProgress, durationProgress));\n\nexport class ColorAnimation extends AnimationBase<TRGBAColorSource> {\n  constructor({\n    startValue,\n    endValue,\n    easing = defaultColorEasing,\n    onChange,\n    onComplete,\n    abort,\n    ...options\n  }: ColorAnimationOptions) {\n    const startColor = new Color(startValue).getSource();\n    const endColor = new Color(endValue).getSource();\n    super({\n      ...options,\n      startValue: startColor,\n      byValue: endColor.map(\n        (value, i) => value - startColor[i]\n      ) as TRGBAColorSource,\n      easing,\n      onChange: wrapColorCallback(onChange),\n      onComplete: wrapColorCallback(onComplete),\n      abort: wrapColorCallback(abort),\n    });\n  }\n  protected calculate(timeElapsed: number) {\n    const [r, g, b, a] = this.startValue.map((value, i) =>\n      this.easing(timeElapsed, value, this.byValue[i], this.duration, i)\n    ) as TRGBAColorSource;\n    const value = [\n      ...[r, g, b].map(Math.round),\n      capValue(0, a, 1),\n    ] as TRGBAColorSource;\n    return {\n      value,\n      valueProgress:\n        // to correctly calculate the change ratio we must find a changed value\n        value\n          .map((p, i) =>\n            this.byValue[i] !== 0\n              ? Math.abs((p - this.startValue[i]) / this.byValue[i])\n              : 0\n          )\n          .find((p) => p !== 0) || 0,\n    };\n  }\n}\n","import { ValueAnimation } from './ValueAnimation';\nimport { ArrayAnimation } from './ArrayAnimation';\nimport { ColorAnimation } from './ColorAnimation';\nimport type {\n  ValueAnimationOptions,\n  ArrayAnimationOptions,\n  ColorAnimationOptions,\n} from './types';\nimport type { TColorArg } from '../../color/typedefs';\n\nexport type TAnimation<T extends number | number[] | TColorArg> =\n  T extends TColorArg\n    ? ColorAnimation\n    : T extends number[]\n    ? ArrayAnimation\n    : ValueAnimation;\n\nconst isArrayAnimation = (\n  options: ArrayAnimationOptions | ValueAnimationOptions\n): options is ArrayAnimationOptions => {\n  return Array.isArray(options.startValue) || Array.isArray(options.endValue);\n};\n\n/**\n * Changes value(s) from startValue to endValue within a certain period of time,\n * invoking callbacks as the value(s) change.\n *\n * @example\n * animate({\n *   startValue: 1,\n *   endValue: 0,\n *   onChange: (v) => {\n *     obj.set('opacity', v);\n *     // since we are running in a requested frame we should call `renderAll` and not `requestRenderAll`\n *     canvas.renderAll();\n *   }\n * });\n *\n * @example Using lists:\n * animate({\n *   startValue: [1, 2, 3],\n *   endValue: [2, 4, 6],\n *   onChange: ([x, y, zoom]) => {\n *     canvas.zoomToPoint(new Point(x, y), zoom);\n *     canvas.renderAll();\n *   }\n * });\n *\n */\nexport function animate(options: ArrayAnimationOptions): ArrayAnimation;\nexport function animate(options: ValueAnimationOptions): ValueAnimation;\nexport function animate<\n  T extends ValueAnimationOptions | ArrayAnimationOptions\n>(\n  options: T\n): T extends ArrayAnimationOptions ? ArrayAnimation : ValueAnimation;\nexport function animate<\n  T extends ValueAnimationOptions | ArrayAnimationOptions,\n  R extends T extends ArrayAnimationOptions ? ArrayAnimation : ValueAnimation\n>(options: T): R {\n  const animation = (\n    isArrayAnimation(options)\n      ? new ArrayAnimation(options)\n      : new ValueAnimation(options)\n  ) as R;\n  animation.start();\n  return animation;\n}\n\nexport function animateColor(options: ColorAnimationOptions) {\n  const animation = new ColorAnimation(options);\n  animation.start();\n  return animation;\n}\n","import type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport type { TRadian } from '../../typedefs';\n\nconst unitVectorX = new Point(1, 0);\nconst zero = new Point();\n\n/**\n * Rotates `vector` with `radians`\n * @param {Point} vector The vector to rotate (x and y)\n * @param {Number} radians The radians of the angle for the rotation\n * @return {Point} The new rotated point\n */\nexport const rotateVector = (vector: Point, radians: TRadian) =>\n  vector.rotate(radians);\n\n/**\n * Creates a vector from points represented as a point\n *\n * @param {Point} from\n * @param {Point} to\n * @returns {Point} vector\n */\nexport const createVector = (from: XY, to: XY): Point =>\n  new Point(to).subtract(from);\n\n/**\n * return the magnitude of a vector\n * @return {number}\n */\nexport const magnitude = (point: Point) => point.distanceFrom(zero);\n\n/**\n * Calculates the angle between 2 vectors\n * @param {Point} a\n * @param {Point} b\n * @returns the angle in radians from `a` to `b`\n */\nexport const calcAngleBetweenVectors = (a: Point, b: Point): TRadian =>\n  Math.atan2(crossProduct(a, b), dotProduct(a, b)) as TRadian;\n\n/**\n * Calculates the angle between the x axis and the vector\n * @param {Point} v\n * @returns the angle in radians of `v`\n */\nexport const calcVectorRotation = (v: Point) =>\n  calcAngleBetweenVectors(unitVectorX, v);\n\n/**\n * @param {Point} v\n * @returns {Point} vector representing the unit vector pointing to the direction of `v`\n */\nexport const getUnitVector = (v: Point): Point =>\n  v.eq(zero) ? v : v.scalarDivide(magnitude(v));\n\n/**\n * @param {Point} v\n * @param {Boolean} [counterClockwise] the direction of the orthogonal vector, defaults to `true`\n * @returns {Point} the unit orthogonal vector\n */\nexport const getOrthonormalVector = (\n  v: Point,\n  counterClockwise = true\n): Point =>\n  getUnitVector(new Point(-v.y, v.x).scalarMultiply(counterClockwise ? 1 : -1));\n\n/**\n * Cross product of two vectors in 2D\n * @param {Point} a\n * @param {Point} b\n * @returns {number} the magnitude of Z vector\n */\nexport const crossProduct = (a: Point, b: Point): number =>\n  a.x * b.y - a.y * b.x;\n\n/**\n * Dot product of two vectors in 2D\n * @param {Point} a\n * @param {Point} b\n * @returns {number}\n */\nexport const dotProduct = (a: Point, b: Point): number => a.x * b.x + a.y * b.y;\n\n/**\n * Checks if the vector is between two others. It is considered\n * to be inside when the vector to be tested is between the\n * initial vector and the final vector (included) in a counterclockwise direction.\n * @param {Point} t vector to be tested\n * @param {Point} a initial vector\n * @param {Point} b final vector\n * @returns {boolean} true if the vector is among the others\n */\nexport const isBetweenVectors = (t: Point, a: Point, b: Point): boolean => {\n  if (t.eq(a) || t.eq(b)) return true;\n  const AxB = crossProduct(a, b),\n    AxT = crossProduct(a, t),\n    BxT = crossProduct(b, t);\n  return AxB >= 0 ? AxT >= 0 && BxT <= 0 : !(AxT <= 0 && BxT >= 0);\n};\n","import { Point } from './Point';\nimport { createVector } from './util/misc/vectors';\n\n/* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\nexport type IntersectionType = 'Intersection' | 'Coincident' | 'Parallel';\n\nexport class Intersection {\n  declare points: Point[];\n\n  declare status?: IntersectionType;\n\n  constructor(status?: IntersectionType) {\n    this.status = status;\n    this.points = [];\n  }\n\n  /**\n   * Used to verify if a point is alredy in the collection\n   * @param {Point} point\n   * @returns {boolean}\n   */\n  private includes(point: Point): boolean {\n    return this.points.some((p) => p.eq(point));\n  }\n\n  /**\n   * Appends points of intersection\n   * @param {...Point[]} points\n   * @return {Intersection} thisArg\n   * @chainable\n   */\n  private append(...points: Point[]): Intersection {\n    this.points = this.points.concat(\n      points.filter((point) => {\n        return !this.includes(point);\n      })\n    );\n    return this;\n  }\n\n  /**\n   * check if point T is on the segment or line defined between A and B\n   *\n   * @param {Point} T the point we are checking for\n   * @param {Point} A one extremity of the segment\n   * @param {Point} B the other extremity of the segment\n   * @param [infinite] if true checks if `T` is on the line defined by `A` and `B`\n   * @returns true if `T` is contained\n   */\n  static isPointContained(T: Point, A: Point, B: Point, infinite = false) {\n    if (A.eq(B)) {\n      // Edge case: the segment is a point, we check for coincidence,\n      // infinite param has no meaning because there are infinite lines to consider\n      return T.eq(A);\n    } else if (A.x === B.x) {\n      // Edge case: horizontal line.\n      // we first check if T.x has the same value, and then if T.y is contained between A.y and B.y\n      return (\n        T.x === A.x &&\n        (infinite || (T.y >= Math.min(A.y, B.y) && T.y <= Math.max(A.y, B.y)))\n      );\n    } else if (A.y === B.y) {\n      // Edge case: vertical line.\n      // we first check if T.y has the same value, and then if T.x is contained between A.x and B.x\n      return (\n        T.y === A.y &&\n        (infinite || (T.x >= Math.min(A.x, B.x) && T.x <= Math.max(A.x, B.x)))\n      );\n    } else {\n      // Generic case: sloped line.\n      // we check that AT has the same slope as AB\n      // for the segment case we need both the vectors to have the same direction and for AT to be lte AB in size\n      // for the infinite case we check the absolute value of the slope, since direction is meaningless\n      const AB = createVector(A, B);\n      const AT = createVector(A, T);\n      const s = AT.divide(AB);\n      return infinite\n        ? Math.abs(s.x) === Math.abs(s.y)\n        : s.x === s.y && s.x >= 0 && s.x <= 1;\n    }\n  }\n\n  /**\n   * Use the ray casting algorithm to determine if {@link point} is in the polygon defined by {@link points}\n   * @see https://en.wikipedia.org/wiki/Point_in_polygon\n   * @param point\n   * @param points polygon points\n   * @returns\n   */\n  static isPointInPolygon(point: Point, points: Point[]) {\n    const other = new Point(point).setX(\n      Math.min(point.x - 1, ...points.map((p) => p.x))\n    );\n    let hits = 0;\n    for (let index = 0; index < points.length; index++) {\n      const inter = this.intersectSegmentSegment(\n        // polygon side\n        points[index],\n        points[(index + 1) % points.length],\n        // ray\n        point,\n        other\n      );\n      if (inter.includes(point)) {\n        // point is on the polygon side\n        return true;\n      }\n      hits += Number(inter.status === 'Intersection');\n    }\n    return hits % 2 === 1;\n  }\n\n  /**\n   * Checks if a line intersects another\n   * @see {@link https://en.wikipedia.org/wiki/Line%E2%80%93line_intersection line intersection}\n   * @see {@link https://en.wikipedia.org/wiki/Cramer%27s_rule Cramer's rule}\n   * @static\n   * @param {Point} a1\n   * @param {Point} a2\n   * @param {Point} b1\n   * @param {Point} b2\n   * @param {boolean} [aInfinite=true] check segment intersection by passing `false`\n   * @param {boolean} [bInfinite=true] check segment intersection by passing `false`\n   * @return {Intersection}\n   */\n  static intersectLineLine(\n    a1: Point,\n    a2: Point,\n    b1: Point,\n    b2: Point,\n    aInfinite = true,\n    bInfinite = true\n  ): Intersection {\n    const a2xa1x = a2.x - a1.x,\n      a2ya1y = a2.y - a1.y,\n      b2xb1x = b2.x - b1.x,\n      b2yb1y = b2.y - b1.y,\n      a1xb1x = a1.x - b1.x,\n      a1yb1y = a1.y - b1.y,\n      uaT = b2xb1x * a1yb1y - b2yb1y * a1xb1x,\n      ubT = a2xa1x * a1yb1y - a2ya1y * a1xb1x,\n      uB = b2yb1y * a2xa1x - b2xb1x * a2ya1y;\n    if (uB !== 0) {\n      const ua = uaT / uB,\n        ub = ubT / uB;\n      if (\n        (aInfinite || (0 <= ua && ua <= 1)) &&\n        (bInfinite || (0 <= ub && ub <= 1))\n      ) {\n        return new Intersection('Intersection').append(\n          new Point(a1.x + ua * a2xa1x, a1.y + ua * a2ya1y)\n        );\n      } else {\n        return new Intersection();\n      }\n    } else {\n      if (uaT === 0 || ubT === 0) {\n        const segmentsCoincide =\n          aInfinite ||\n          bInfinite ||\n          Intersection.isPointContained(a1, b1, b2) ||\n          Intersection.isPointContained(a2, b1, b2) ||\n          Intersection.isPointContained(b1, a1, a2) ||\n          Intersection.isPointContained(b2, a1, a2);\n        return new Intersection(segmentsCoincide ? 'Coincident' : undefined);\n      } else {\n        return new Intersection('Parallel');\n      }\n    }\n  }\n\n  /**\n   * Checks if a segment intersects a line\n   * @see {@link intersectLineLine} for line intersection\n   * @static\n   * @param {Point} s1 boundary point of segment\n   * @param {Point} s2 other boundary point of segment\n   * @param {Point} l1 point on line\n   * @param {Point} l2 other point on line\n   * @return {Intersection}\n   */\n  static intersectSegmentLine(\n    s1: Point,\n    s2: Point,\n    l1: Point,\n    l2: Point\n  ): Intersection {\n    return Intersection.intersectLineLine(s1, s2, l1, l2, false, true);\n  }\n\n  /**\n   * Checks if a segment intersects another\n   * @see {@link intersectLineLine} for line intersection\n   * @static\n   * @param {Point} a1 boundary point of segment\n   * @param {Point} a2 other boundary point of segment\n   * @param {Point} b1 boundary point of segment\n   * @param {Point} b2 other boundary point of segment\n   * @return {Intersection}\n   */\n  static intersectSegmentSegment(\n    a1: Point,\n    a2: Point,\n    b1: Point,\n    b2: Point\n  ): Intersection {\n    return Intersection.intersectLineLine(a1, a2, b1, b2, false, false);\n  }\n\n  /**\n   * Checks if line intersects polygon\n   *\n   * @todo account for stroke\n   *\n   * @static\n   * @see {@link intersectSegmentPolygon} for segment intersection\n   * @param {Point} a1 point on line\n   * @param {Point} a2 other point on line\n   * @param {Point[]} points polygon points\n   * @param {boolean} [infinite=true] check segment intersection by passing `false`\n   * @return {Intersection}\n   */\n  static intersectLinePolygon(\n    a1: Point,\n    a2: Point,\n    points: Point[],\n    infinite = true\n  ): Intersection {\n    const result = new Intersection();\n    const length = points.length;\n\n    for (let i = 0, b1, b2, inter; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2, infinite, false);\n      if (inter.status === 'Coincident') {\n        return inter;\n      }\n      result.append(...inter.points);\n    }\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if segment intersects polygon\n   * @static\n   * @see {@link intersectLinePolygon} for line intersection\n   * @param {Point} a1 boundary point of segment\n   * @param {Point} a2 other boundary point of segment\n   * @param {Point[]} points polygon points\n   * @return {Intersection}\n   */\n  static intersectSegmentPolygon(\n    a1: Point,\n    a2: Point,\n    points: Point[]\n  ): Intersection {\n    return Intersection.intersectLinePolygon(a1, a2, points, false);\n  }\n\n  /**\n   * Checks if polygon intersects another polygon\n   *\n   * @todo account for stroke\n   *\n   * @static\n   * @param {Point[]} points1\n   * @param {Point[]} points2\n   * @return {Intersection}\n   */\n  static intersectPolygonPolygon(\n    points1: Point[],\n    points2: Point[]\n  ): Intersection {\n    const result = new Intersection(),\n      length = points1.length;\n    const coincidences: Intersection[] = [];\n\n    for (let i = 0; i < length; i++) {\n      const a1 = points1[i],\n        a2 = points1[(i + 1) % length],\n        inter = Intersection.intersectSegmentPolygon(a1, a2, points2);\n      if (inter.status === 'Coincident') {\n        coincidences.push(inter);\n        result.append(a1, a2);\n      } else {\n        result.append(...inter.points);\n      }\n    }\n\n    if (coincidences.length > 0 && coincidences.length === points1.length) {\n      return new Intersection('Coincident');\n    } else if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @see {@link intersectPolygonPolygon} for polygon intersection\n   * @param {Point[]} points polygon points\n   * @param {Point} r1 top left point of rect\n   * @param {Point} r2 bottom right point of rect\n   * @return {Intersection}\n   */\n  static intersectPolygonRectangle(\n    points: Point[],\n    r1: Point,\n    r2: Point\n  ): Intersection {\n    const min = r1.min(r2),\n      max = r1.max(r2),\n      topRight = new Point(max.x, min.y),\n      bottomLeft = new Point(min.x, max.y);\n\n    return Intersection.intersectPolygonPolygon(points, [\n      min,\n      topRight,\n      max,\n      bottomLeft,\n    ]);\n  }\n}\n","import { Point } from '../../Point';\nimport type { Group } from '../Group';\nimport type { TDegree, TOriginX, TOriginY } from '../../typedefs';\nimport { calcDimensionsMatrix, transformPoint } from '../../util/misc/matrix';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport { degreesToRadians } from '../../util/misc/radiansDegreesConversion';\nimport { CommonMethods } from '../../CommonMethods';\nimport { resolveOrigin } from '../../util/misc/resolveOrigin';\nimport type { BaseProps } from './types/BaseProps';\nimport type { FillStrokeProps } from './types/FillStrokeProps';\nimport { CENTER, LEFT, TOP } from '../../constants';\n\nexport class ObjectOrigin<EventSpec>\n  extends CommonMethods<EventSpec>\n  implements BaseProps, Pick<FillStrokeProps, 'strokeWidth' | 'strokeUniform'>\n{\n  declare top: number;\n  declare left: number;\n  declare width: number;\n  declare height: number;\n  declare flipX: boolean;\n  declare flipY: boolean;\n  declare scaleX: number;\n  declare scaleY: number;\n  declare skewX: number;\n  declare skewY: number;\n  declare originX: TOriginX;\n  declare originY: TOriginY;\n  declare angle: TDegree;\n  declare strokeWidth: number;\n  declare strokeUniform: boolean;\n\n  /**\n   * Object containing this object.\n   * can influence its size and position\n   */\n  declare group?: Group;\n\n  /**\n   * Calculate object bounding box dimensions from its properties scale, skew.\n   * This bounding box is aligned with object angle and not with canvas axis or screen.\n   * @param {Object} [options]\n   * @param {Number} [options.scaleX]\n   * @param {Number} [options.scaleY]\n   * @param {Number} [options.skewX]\n   * @param {Number} [options.skewY]\n   * @private\n   * @returns {Point} dimensions\n   */\n  _getTransformedDimensions(options: any = {}): Point {\n    const dimOptions = {\n      scaleX: this.scaleX,\n      scaleY: this.scaleY,\n      skewX: this.skewX,\n      skewY: this.skewY,\n      width: this.width,\n      height: this.height,\n      strokeWidth: this.strokeWidth,\n      ...options,\n    };\n    // stroke is applied before/after transformations are applied according to `strokeUniform`\n    const strokeWidth = dimOptions.strokeWidth;\n    let preScalingStrokeValue = strokeWidth,\n      postScalingStrokeValue = 0;\n\n    if (this.strokeUniform) {\n      preScalingStrokeValue = 0;\n      postScalingStrokeValue = strokeWidth;\n    }\n    const dimX = dimOptions.width + preScalingStrokeValue,\n      dimY = dimOptions.height + preScalingStrokeValue,\n      noSkew = dimOptions.skewX === 0 && dimOptions.skewY === 0;\n    let finalDimensions;\n    if (noSkew) {\n      finalDimensions = new Point(\n        dimX * dimOptions.scaleX,\n        dimY * dimOptions.scaleY\n      );\n    } else {\n      finalDimensions = sizeAfterTransform(\n        dimX,\n        dimY,\n        calcDimensionsMatrix(dimOptions)\n      );\n    }\n\n    return finalDimensions.scalarAdd(postScalingStrokeValue);\n  }\n\n  /**\n   * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n   * @param {Point} point The point which corresponds to the originX and originY params\n   * @param {TOriginX} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n   * @param {TOriginX} toOriginX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToGivenOrigin(\n    point: Point,\n    fromOriginX: TOriginX,\n    fromOriginY: TOriginY,\n    toOriginX: TOriginX,\n    toOriginY: TOriginY\n  ): Point {\n    let x = point.x,\n      y = point.y;\n    const offsetX = resolveOrigin(toOriginX) - resolveOrigin(fromOriginX),\n      offsetY = resolveOrigin(toOriginY) - resolveOrigin(fromOriginY);\n\n    if (offsetX || offsetY) {\n      const dim = this._getTransformedDimensions();\n      x += offsetX * dim.x;\n      y += offsetY * dim.y;\n    }\n\n    return new Point(x, y);\n  }\n\n  /**\n   * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n   * @param {Point} point The point which corresponds to the originX and originY params\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToCenterPoint(\n    point: Point,\n    originX: TOriginX,\n    originY: TOriginY\n  ): Point {\n    const p = this.translateToGivenOrigin(\n      point,\n      originX,\n      originY,\n      CENTER,\n      CENTER\n    );\n    if (this.angle) {\n      return p.rotate(degreesToRadians(this.angle), point);\n    }\n    return p;\n  }\n\n  /**\n   * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n   * @param {Point} center The point which corresponds to center of the object\n   * @param {OriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {OriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  translateToOriginPoint(\n    center: Point,\n    originX: TOriginX,\n    originY: TOriginY\n  ): Point {\n    const p = this.translateToGivenOrigin(\n      center,\n      CENTER,\n      CENTER,\n      originX,\n      originY\n    );\n    if (this.angle) {\n      return p.rotate(degreesToRadians(this.angle), center);\n    }\n    return p;\n  }\n\n  /**\n   * Returns the center coordinates of the object relative to canvas\n   * @return {Point}\n   */\n  getCenterPoint(): Point {\n    const relCenter = this.getRelativeCenterPoint();\n    return this.group\n      ? transformPoint(relCenter, this.group.calcTransformMatrix())\n      : relCenter;\n  }\n\n  /**\n   * Returns the center coordinates of the object relative to it's parent\n   * @return {Point}\n   */\n  getRelativeCenterPoint(): Point {\n    return this.translateToCenterPoint(\n      new Point(this.left, this.top),\n      this.originX,\n      this.originY\n    );\n  }\n\n  /**\n   * Returns the coordinates of the object as if it has a different origin\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {Point}\n   */\n  getPointByOrigin(originX: TOriginX, originY: TOriginY): Point {\n    return this.translateToOriginPoint(\n      this.getRelativeCenterPoint(),\n      originX,\n      originY\n    );\n  }\n\n  /**\n   * Sets the position of the object taking into consideration the object's origin\n   * @param {Point} pos The new position of the object\n   * @param {TOriginX} originX Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} originY Vertical origin: 'top', 'center' or 'bottom'\n   * @return {void}\n   */\n  setPositionByOrigin(pos: Point, originX: TOriginX, originY: TOriginY) {\n    const center = this.translateToCenterPoint(pos, originX, originY),\n      position = this.translateToOriginPoint(\n        center,\n        this.originX,\n        this.originY\n      );\n    this.set({ left: position.x, top: position.y });\n  }\n\n  /**\n   * @private\n   */\n  _getLeftTopCoords() {\n    return this.translateToOriginPoint(\n      this.getRelativeCenterPoint(),\n      LEFT,\n      TOP\n    );\n  }\n}\n","import type {\n  TBBox,\n  TCornerPoint,\n  TDegree,\n  TMat2D,\n  TOriginX,\n  TOriginY,\n} from '../../typedefs';\nimport { iMatrix } from '../../constants';\nimport { Intersection } from '../../Intersection';\nimport { Point } from '../../Point';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport {\n  createRotateMatrix,\n  createTranslateMatrix,\n  composeMatrix,\n  invertTransform,\n  multiplyTransformMatrices,\n  transformPoint,\n  calcPlaneRotation,\n} from '../../util/misc/matrix';\nimport { radiansToDegrees } from '../../util/misc/radiansDegreesConversion';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { StaticCanvas } from '../../canvas/StaticCanvas';\nimport { ObjectOrigin } from './ObjectOrigin';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport type { ControlProps } from './types/ControlProps';\n\ntype TMatrixCache = {\n  key: string;\n  value: TMat2D;\n};\n\ntype TACoords = TCornerPoint;\n\nexport class ObjectGeometry<EventSpec extends ObjectEvents = ObjectEvents>\n  extends ObjectOrigin<EventSpec>\n  implements Pick<ControlProps, 'padding'>\n{\n  declare padding: number;\n\n  /**\n   * Describe object's corner position in scene coordinates.\n   * The coordinates are derived from the following:\n   * left, top, width, height, scaleX, scaleY, skewX, skewY, angle, strokeWidth.\n   * The coordinates do not depend on viewport changes.\n   * The coordinates get updated with {@link setCoords}.\n   * You can calculate them without updating with {@link calcACoords()}\n   */\n  declare aCoords: TACoords;\n\n  /**\n   * storage cache for object transform matrix\n   */\n  declare ownMatrixCache?: TMatrixCache;\n\n  /**\n   * storage cache for object full transform matrix\n   */\n  declare matrixCache?: TMatrixCache;\n\n  /**\n   * A Reference of the Canvas where the object is actually added\n   * @type StaticCanvas | Canvas;\n   * @default undefined\n   * @private\n   */\n  declare canvas?: StaticCanvas | Canvas;\n\n  /**\n   * @returns {number} x position according to object's {@link originX} property in canvas coordinate plane\n   */\n  getX(): number {\n    return this.getXY().x;\n  }\n\n  /**\n   * @param {number} value x position according to object's {@link originX} property in canvas coordinate plane\n   */\n  setX(value: number) {\n    this.setXY(this.getXY().setX(value));\n  }\n\n  /**\n   * @returns {number} y position according to object's {@link originY} property in canvas coordinate plane\n   */\n  getY(): number {\n    return this.getXY().y;\n  }\n\n  /**\n   * @param {number} value y position according to object's {@link originY} property in canvas coordinate plane\n   */\n  setY(value: number) {\n    this.setXY(this.getXY().setY(value));\n  }\n\n  /**\n   * @returns {number} x position according to object's {@link originX} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link getX}\n   */\n  getRelativeX(): number {\n    return this.left;\n  }\n\n  /**\n   * @param {number} value x position according to object's {@link originX} property in parent's coordinate plane\\\n   * if parent is canvas then this method is identical to {@link setX}\n   */\n  setRelativeX(value: number) {\n    this.left = value;\n  }\n\n  /**\n   * @returns {number} y position according to object's {@link originY} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link getY}\n   */\n  getRelativeY(): number {\n    return this.top;\n  }\n\n  /**\n   * @param {number} value y position according to object's {@link originY} property in parent's coordinate plane\\\n   * if parent is canvas then this property is identical to {@link setY}\n   */\n  setRelativeY(value: number) {\n    this.top = value;\n  }\n\n  /**\n   * @returns {Point} x position according to object's {@link originX} {@link originY} properties in canvas coordinate plane\n   */\n  getXY(): Point {\n    const relativePosition = this.getRelativeXY();\n    return this.group\n      ? transformPoint(relativePosition, this.group.calcTransformMatrix())\n      : relativePosition;\n  }\n\n  /**\n   * Set an object position to a particular point, the point is intended in absolute ( canvas ) coordinate.\n   * You can specify {@link originX} and {@link originY} values,\n   * that otherwise are the object's current values.\n   * @example <caption>Set object's bottom left corner to point (5,5) on canvas</caption>\n   * object.setXY(new Point(5, 5), 'left', 'bottom').\n   * @param {Point} point position in canvas coordinate plane\n   * @param {TOriginX} [originX] Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} [originY] Vertical origin: 'top', 'center' or 'bottom'\n   */\n  setXY(point: Point, originX?: TOriginX, originY?: TOriginY) {\n    if (this.group) {\n      point = transformPoint(\n        point,\n        invertTransform(this.group.calcTransformMatrix())\n      );\n    }\n    this.setRelativeXY(point, originX, originY);\n  }\n\n  /**\n   * @returns {Point} x,y position according to object's {@link originX} {@link originY} properties in parent's coordinate plane\n   */\n  getRelativeXY(): Point {\n    return new Point(this.left, this.top);\n  }\n\n  /**\n   * As {@link setXY}, but in current parent's coordinate plane (the current group if any or the canvas)\n   * @param {Point} point position according to object's {@link originX} {@link originY} properties in parent's coordinate plane\n   * @param {TOriginX} [originX] Horizontal origin: 'left', 'center' or 'right'\n   * @param {TOriginY} [originY] Vertical origin: 'top', 'center' or 'bottom'\n   */\n  setRelativeXY(\n    point: Point,\n    originX: TOriginX = this.originX,\n    originY: TOriginY = this.originY\n  ) {\n    this.setPositionByOrigin(point, originX, originY);\n  }\n\n  /**\n   * @deprecated intermidiate method to be removed, do not use\n   */\n  protected isStrokeAccountedForInDimensions() {\n    return false;\n  }\n\n  /**\n   * @return {Point[]} [tl, tr, br, bl] in the scene plane\n   */\n  getCoords(): Point[] {\n    const { tl, tr, br, bl } =\n      this.aCoords || (this.aCoords = this.calcACoords());\n    const coords = [tl, tr, br, bl];\n    if (this.group) {\n      const t = this.group.calcTransformMatrix();\n      return coords.map((p) => transformPoint(p, t));\n    }\n    return coords;\n  }\n\n  /**\n   * Checks if object intersects with the scene rect formed by {@link tl} and {@link br}\n   */\n  intersectsWithRect(tl: Point, br: Point): boolean {\n    const intersection = Intersection.intersectPolygonRectangle(\n      this.getCoords(),\n      tl,\n      br\n    );\n    return intersection.status === 'Intersection';\n  }\n\n  /**\n   * Checks if object intersects with another object\n   * @param {Object} other Object to test\n   * @return {Boolean} true if object intersects with another object\n   */\n  intersectsWithObject(other: ObjectGeometry): boolean {\n    const intersection = Intersection.intersectPolygonPolygon(\n      this.getCoords(),\n      other.getCoords()\n    );\n\n    return (\n      intersection.status === 'Intersection' ||\n      intersection.status === 'Coincident' ||\n      other.isContainedWithinObject(this) ||\n      this.isContainedWithinObject(other)\n    );\n  }\n\n  /**\n   * Checks if object is fully contained within area of another object\n   * @param {Object} other Object to test\n   * @return {Boolean} true if object is fully contained within area of another object\n   */\n  isContainedWithinObject(other: ObjectGeometry): boolean {\n    const points = this.getCoords();\n    return points.every((point) => other.containsPoint(point));\n  }\n\n  /**\n   * Checks if object is fully contained within the scene rect formed by {@link tl} and {@link br}\n   */\n  isContainedWithinRect(tl: Point, br: Point): boolean {\n    const { left, top, width, height } = this.getBoundingRect();\n    return (\n      left >= tl.x &&\n      left + width <= br.x &&\n      top >= tl.y &&\n      top + height <= br.y\n    );\n  }\n\n  isOverlapping<T extends ObjectGeometry>(other: T): boolean {\n    return (\n      this.intersectsWithObject(other) ||\n      this.isContainedWithinObject(other) ||\n      other.isContainedWithinObject(this)\n    );\n  }\n\n  /**\n   * Checks if point is inside the object\n   * @param {Point} point Point to check against\n   * @return {Boolean} true if point is inside the object\n   */\n  containsPoint(point: Point): boolean {\n    return Intersection.isPointInPolygon(point, this.getCoords());\n  }\n\n  /**\n   * Checks if object is contained within the canvas with current viewportTransform\n   * the check is done stopping at first point that appears on screen\n   * @return {Boolean} true if object is fully or partially contained within canvas\n   */\n  isOnScreen(): boolean {\n    if (!this.canvas) {\n      return false;\n    }\n    const { tl, br } = this.canvas.vptCoords;\n    const points = this.getCoords();\n    // if some point is on screen, the object is on screen.\n    if (\n      points.some(\n        (point) =>\n          point.x <= br.x &&\n          point.x >= tl.x &&\n          point.y <= br.y &&\n          point.y >= tl.y\n      )\n    ) {\n      return true;\n    }\n    // no points on screen, check intersection with absolute coordinates\n    if (this.intersectsWithRect(tl, br)) {\n      return true;\n    }\n    // check if the object is so big that it contains the entire viewport\n    return this.containsPoint(tl.midPointFrom(br));\n  }\n\n  /**\n   * Checks if object is partially contained within the canvas with current viewportTransform\n   * @return {Boolean} true if object is partially contained within canvas\n   */\n  isPartiallyOnScreen(): boolean {\n    if (!this.canvas) {\n      return false;\n    }\n    const { tl, br } = this.canvas.vptCoords;\n    if (this.intersectsWithRect(tl, br)) {\n      return true;\n    }\n    const allPointsAreOutside = this.getCoords().every(\n      (point) =>\n        (point.x >= br.x || point.x <= tl.x) &&\n        (point.y >= br.y || point.y <= tl.y)\n    );\n    // check if the object is so big that it contains the entire viewport\n    return allPointsAreOutside && this.containsPoint(tl.midPointFrom(br));\n  }\n\n  /**\n   * Returns coordinates of object's bounding rectangle (left, top, width, height)\n   * the box is intended as aligned to axis of canvas.\n   * @return {Object} Object with left, top, width, height properties\n   */\n  getBoundingRect(): TBBox {\n    return makeBoundingBoxFromPoints(this.getCoords());\n  }\n\n  /**\n   * Returns width of an object's bounding box counting transformations\n   * @todo shouldn't this account for group transform and return the actual size in canvas coordinate plane?\n   * @return {Number} width value\n   */\n  getScaledWidth(): number {\n    return this._getTransformedDimensions().x;\n  }\n\n  /**\n   * Returns height of an object bounding box counting transformations\n   * @todo shouldn't this account for group transform and return the actual size in canvas coordinate plane?\n   * @return {Number} height value\n   */\n  getScaledHeight(): number {\n    return this._getTransformedDimensions().y;\n  }\n\n  /**\n   * Scales an object (equally by x and y)\n   * @param {Number} value Scale factor\n   * @return {void}\n   */\n  scale(value: number): void {\n    this._set('scaleX', value);\n    this._set('scaleY', value);\n    this.setCoords();\n  }\n\n  /**\n   * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n   * @param {Number} value New width value\n   * @return {void}\n   */\n  scaleToWidth(value: number) {\n    // adjust to bounding rect factor so that rotated shapes would fit as well\n    const boundingRectFactor =\n      this.getBoundingRect().width / this.getScaledWidth();\n    return this.scale(value / this.width / boundingRectFactor);\n  }\n\n  /**\n   * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n   * @param {Number} value New height value\n   * @return {void}\n   */\n  scaleToHeight(value: number) {\n    // adjust to bounding rect factor so that rotated shapes would fit as well\n    const boundingRectFactor =\n      this.getBoundingRect().height / this.getScaledHeight();\n    return this.scale(value / this.height / boundingRectFactor);\n  }\n\n  getCanvasRetinaScaling() {\n    return this.canvas?.getRetinaScaling() || 1;\n  }\n\n  /**\n   * Returns the object angle relative to canvas counting also the group property\n   * @returns {TDegree}\n   */\n  getTotalAngle(): TDegree {\n    return this.group\n      ? radiansToDegrees(calcPlaneRotation(this.calcTransformMatrix()))\n      : this.angle;\n  }\n\n  /**\n   * Retrieves viewportTransform from Object's canvas if available\n   * @return {TMat2D}\n   */\n  getViewportTransform(): TMat2D {\n    return this.canvas?.viewportTransform || (iMatrix.concat() as TMat2D);\n  }\n\n  /**\n   * Calculates the coordinates of the 4 corner of the bbox, in absolute coordinates.\n   * those never change with zoom or viewport changes.\n   * @return {TCornerPoint}\n   */\n  calcACoords(): TCornerPoint {\n    const rotateMatrix = createRotateMatrix({ angle: this.angle }),\n      { x, y } = this.getRelativeCenterPoint(),\n      tMatrix = createTranslateMatrix(x, y),\n      finalMatrix = multiplyTransformMatrices(tMatrix, rotateMatrix),\n      dim = this._getTransformedDimensions(),\n      w = dim.x / 2,\n      h = dim.y / 2;\n    return {\n      // corners\n      tl: transformPoint({ x: -w, y: -h }, finalMatrix),\n      tr: transformPoint({ x: w, y: -h }, finalMatrix),\n      bl: transformPoint({ x: -w, y: h }, finalMatrix),\n      br: transformPoint({ x: w, y: h }, finalMatrix),\n    };\n  }\n\n  /**\n   * Sets corner and controls position coordinates based on current angle, width and height, left and top.\n   * aCoords are used to quickly find an object on the canvas.\n   * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\n   */\n  setCoords(): void {\n    this.aCoords = this.calcACoords();\n  }\n\n  transformMatrixKey(skipGroup = false): string {\n    const sep = '_';\n    let prefix = '';\n    if (!skipGroup && this.group) {\n      prefix = this.group.transformMatrixKey(skipGroup) + sep;\n    }\n    return (\n      prefix +\n      this.top +\n      sep +\n      this.left +\n      sep +\n      this.scaleX +\n      sep +\n      this.scaleY +\n      sep +\n      this.skewX +\n      sep +\n      this.skewY +\n      sep +\n      this.angle +\n      sep +\n      this.originX +\n      sep +\n      this.originY +\n      sep +\n      this.width +\n      sep +\n      this.height +\n      sep +\n      this.strokeWidth +\n      this.flipX +\n      this.flipY\n    );\n  }\n\n  /**\n   * calculate transform matrix that represents the current transformations from the\n   * object's properties.\n   * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n   * There are some situation in which this is useful to avoid the fake rotation.\n   * @return {TMat2D} transform matrix for the object\n   */\n  calcTransformMatrix(skipGroup = false): TMat2D {\n    let matrix = this.calcOwnMatrix();\n    if (skipGroup || !this.group) {\n      return matrix;\n    }\n    const key = this.transformMatrixKey(skipGroup),\n      cache = this.matrixCache;\n    if (cache && cache.key === key) {\n      return cache.value;\n    }\n    if (this.group) {\n      matrix = multiplyTransformMatrices(\n        this.group.calcTransformMatrix(false),\n        matrix\n      );\n    }\n    this.matrixCache = {\n      key,\n      value: matrix,\n    };\n    return matrix;\n  }\n\n  /**\n   * calculate transform matrix that represents the current transformations from the\n   * object's properties, this matrix does not include the group transformation\n   * @return {TMat2D} transform matrix for the object\n   */\n  calcOwnMatrix(): TMat2D {\n    const key = this.transformMatrixKey(true),\n      cache = this.ownMatrixCache;\n    if (cache && cache.key === key) {\n      return cache.value;\n    }\n    const center = this.getRelativeCenterPoint(),\n      options = {\n        angle: this.angle,\n        translateX: center.x,\n        translateY: center.y,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        skewX: this.skewX,\n        skewY: this.skewY,\n        flipX: this.flipX,\n        flipY: this.flipY,\n      },\n      value = composeMatrix(options);\n    this.ownMatrixCache = {\n      key,\n      value,\n    };\n    return value;\n  }\n\n  /**\n   * Calculate object dimensions from its properties\n   * @private\n   * @returns {Point} dimensions\n   */\n  _getNonTransformedDimensions(): Point {\n    return new Point(this.width, this.height).scalarAdd(this.strokeWidth);\n  }\n\n  /**\n   * Calculate object dimensions for controls box, including padding and canvas zoom.\n   * and active selection\n   * @private\n   * @param {object} [options] transform options\n   * @returns {Point} dimensions\n   */\n  _calculateCurrentDimensions(options?: any): Point {\n    return this._getTransformedDimensions(options)\n      .transform(this.getViewportTransform(), true)\n      .scalarAdd(2 * this.padding);\n  }\n}\n","import type { ObjectEvents } from '../../EventTypeDefs';\nimport type { Group } from '../Group';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { StaticCanvas } from '../../canvas/StaticCanvas';\nimport { ObjectGeometry } from './ObjectGeometry';\n\ntype TAncestor = StackedObject | Canvas | StaticCanvas;\ntype TCollection = Group | Canvas | StaticCanvas;\n\n/**\n * Strict: only ancestors that are objects (without canvas)\n */\nexport type Ancestors<Strict> = Strict extends true\n  ? [StackedObject | Group] | [StackedObject | Group, ...Group[]] | Group[]\n  :\n      | [StackedObject | Group | Canvas | StaticCanvas]\n      | [StackedObject | Group, Canvas | StaticCanvas]\n      | [StackedObject, ...Group[]]\n      | Group[]\n      | [StackedObject | Group, ...Group[], Canvas | StaticCanvas];\n\nexport type AncestryComparison<Strict> = {\n  /**\n   * common ancestors of `this` and`other`(may include`this` | `other`)\n   */\n  common: Ancestors<Strict>;\n  /**\n   * ancestors that are of `this` only\n   */\n  fork: Ancestors<Strict>;\n  /**\n   * ancestors that are of `other` only\n   */\n  otherFork: Ancestors<Strict>;\n};\n\nexport class StackedObject<\n  EventSpec extends ObjectEvents = ObjectEvents\n> extends ObjectGeometry<EventSpec> {\n  /**\n   * A reference to the parent of the object\n   * Used to keep the original parent ref when the object has been added to an ActiveSelection, hence loosing the `group` ref\n   */\n  declare parent?: Group;\n\n  /**\n   * Checks if object is descendant of target\n   * Should be used instead of {@link Group.contains} or {@link StaticCanvas.contains} for performance reasons\n   * @param {TAncestor} target\n   * @returns {boolean}\n   */\n  isDescendantOf(target: TAncestor): boolean {\n    const { parent, group } = this;\n    return (\n      parent === target ||\n      group === target ||\n      this.canvas === target ||\n      // walk up\n      (!!parent && parent.isDescendantOf(target)) ||\n      (!!group && group !== parent && group.isDescendantOf(target))\n    );\n  }\n\n  /**\n   *\n   * @param {boolean} [strict] returns only ancestors that are objects (without canvas)\n   * @returns {Ancestors} ancestors (excluding `ActiveSelection`) from bottom to top\n   */\n  getAncestors<T extends boolean>(strict?: T): Ancestors<T> {\n    const ancestors: TAncestor[] = [];\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let parent: TAncestor | undefined = this;\n    do {\n      parent =\n        parent instanceof StackedObject\n          ? parent.parent ?? (!strict ? parent.canvas : undefined)\n          : undefined;\n      parent && ancestors.push(parent);\n    } while (parent);\n    return ancestors as Ancestors<T>;\n  }\n\n  /**\n   * Compare ancestors\n   *\n   * @param {StackedObject} other\n   * @param {boolean} [strict] finds only ancestors that are objects (without canvas)\n   * @returns {AncestryComparison} an object that represent the ancestry situation.\n   */\n  findCommonAncestors<T extends this, S extends boolean>(\n    other: T,\n    strict?: S\n  ): AncestryComparison<S> {\n    if (this === other) {\n      return {\n        fork: [],\n        otherFork: [],\n        common: [this, ...this.getAncestors(strict)],\n      } as AncestryComparison<S>;\n    }\n    const ancestors = this.getAncestors(strict);\n    const otherAncestors = other.getAncestors(strict);\n    //  if `this` has no ancestors and `this` is top ancestor of `other` we must handle the following case\n    if (\n      ancestors.length === 0 &&\n      otherAncestors.length > 0 &&\n      this === otherAncestors[otherAncestors.length - 1]\n    ) {\n      return {\n        fork: [],\n        otherFork: [\n          other,\n          ...otherAncestors.slice(0, otherAncestors.length - 1),\n        ],\n        common: [this],\n      } as AncestryComparison<S>;\n    }\n    //  compare ancestors\n    for (let i = 0, ancestor; i < ancestors.length; i++) {\n      ancestor = ancestors[i];\n      if (ancestor === other) {\n        return {\n          fork: [this, ...ancestors.slice(0, i)],\n          otherFork: [],\n          common: ancestors.slice(i),\n        } as AncestryComparison<S>;\n      }\n      for (let j = 0; j < otherAncestors.length; j++) {\n        if (this === otherAncestors[j]) {\n          return {\n            fork: [],\n            otherFork: [other, ...otherAncestors.slice(0, j)],\n            common: [this, ...ancestors],\n          } as AncestryComparison<S>;\n        }\n        if (ancestor === otherAncestors[j]) {\n          return {\n            fork: [this, ...ancestors.slice(0, i)],\n            otherFork: [other, ...otherAncestors.slice(0, j)],\n            common: ancestors.slice(i),\n          } as AncestryComparison<S>;\n        }\n      }\n    }\n    // nothing shared\n    return {\n      fork: [this, ...ancestors],\n      otherFork: [other, ...otherAncestors],\n      common: [],\n    } as AncestryComparison<S>;\n  }\n\n  /**\n   *\n   * @param {StackedObject} other\n   * @param {boolean} [strict] checks only ancestors that are objects (without canvas)\n   * @returns {boolean}\n   */\n  hasCommonAncestors<T extends this>(other: T, strict?: boolean): boolean {\n    const commonAncestors = this.findCommonAncestors(other, strict);\n    return commonAncestors && !!commonAncestors.common.length;\n  }\n\n  /**\n   *\n   * @param {FabricObject} other object to compare against\n   * @returns {boolean | undefined} if objects do not share a common ancestor or they are strictly equal it is impossible to determine which is in front of the other; in such cases the function returns `undefined`\n   */\n  isInFrontOf<T extends this>(other: T): boolean | undefined {\n    if (this === other) {\n      return undefined;\n    }\n    const ancestorData = this.findCommonAncestors(other);\n    if (!ancestorData) {\n      return undefined;\n    }\n    if (ancestorData.fork.includes(other as any)) {\n      return true;\n    }\n    if (ancestorData.otherFork.includes(this as any)) {\n      return false;\n    }\n    const firstCommonAncestor = ancestorData.common[0];\n    if (!firstCommonAncestor) {\n      return undefined;\n    }\n    const headOfFork = ancestorData.fork.pop(),\n      headOfOtherFork = ancestorData.otherFork.pop(),\n      thisIndex = (firstCommonAncestor as TCollection)._objects.indexOf(\n        headOfFork as any\n      ),\n      otherIndex = (firstCommonAncestor as TCollection)._objects.indexOf(\n        headOfOtherFork as any\n      );\n    return thisIndex > -1 && thisIndex > otherIndex;\n  }\n}\n","import type { TColorArg } from '../../color/typedefs';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport type { TAnimation } from '../../util/animation/animate';\nimport { animate, animateColor } from '../../util/animation/animate';\nimport type {\n  AnimationOptions,\n  ArrayAnimationOptions,\n  ColorAnimationOptions,\n  ValueAnimationOptions,\n} from '../../util/animation/types';\nimport { StackedObject } from './StackedObject';\n\nexport abstract class AnimatableObject<\n  EventSpec extends ObjectEvents = ObjectEvents\n> extends StackedObject<EventSpec> {\n  /**\n   * List of properties to consider for animating colors.\n   * @type String[]\n   */\n  static colorProperties: string[] = ['fill', 'stroke', 'backgroundColor'];\n\n  /**\n   * Animates object's properties\n   * @param {Record<string, number | number[] | TColorArg>} animatable map of keys and end values\n   * @param {Partial<AnimationOptions<T>>} options\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @return {Record<string, TAnimation<T>>} map of animation contexts\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   */\n  animate<T extends number | number[] | TColorArg>(\n    animatable: Record<string, T>,\n    options?: Partial<AnimationOptions<T>>\n  ): Record<string, TAnimation<T>> {\n    return Object.entries(animatable).reduce((acc, [key, endValue]) => {\n      acc[key] = this._animate(key, endValue, options);\n      return acc;\n    }, {} as Record<string, TAnimation<T>>);\n  }\n\n  /**\n   * @private\n   * @param {String} key Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   */\n  _animate<T extends number | number[] | TColorArg>(\n    key: string,\n    endValue: T,\n    options: Partial<AnimationOptions<T>> = {}\n  ): TAnimation<T> {\n    const path = key.split('.');\n    const propIsColor = (\n      this.constructor as typeof AnimatableObject\n    ).colorProperties.includes(path[path.length - 1]);\n    const { easing, duration, abort, startValue, onChange, onComplete } =\n      options;\n    const animationOptions = {\n      target: this,\n      // path.reduce... is the current value in case start value isn't provided\n      startValue:\n        startValue ?? path.reduce((deep: any, key) => deep[key], this),\n      endValue,\n      easing,\n      duration,\n      abort: abort?.bind(this),\n      onChange: (\n        value: number | number[] | string,\n        valueProgress: number,\n        durationProgress: number\n      ) => {\n        path.reduce((deep: Record<string, any>, key, index) => {\n          if (index === path.length - 1) {\n            deep[key] = value;\n          }\n          return deep[key];\n        }, this);\n        onChange &&\n          // @ts-expect-error generic callback arg0 is wrong\n          onChange(value, valueProgress, durationProgress);\n      },\n      onComplete: (\n        value: number | number[] | string,\n        valueProgress: number,\n        durationProgress: number\n      ) => {\n        this.setCoords();\n        onComplete &&\n          // @ts-expect-error generic callback arg0 is wrong\n          onComplete(value, valueProgress, durationProgress);\n      },\n    } as AnimationOptions<T>;\n\n    return (\n      propIsColor\n        ? animateColor(animationOptions as ColorAnimationOptions)\n        : animate(\n            animationOptions as ValueAnimationOptions | ArrayAnimationOptions\n          )\n    ) as TAnimation<T>;\n  }\n}\n","export function getSvgRegex(arr: string[]) {\n  return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n}\n","import { getSvgRegex } from './getSvgRegex';\nimport { LEFT, TOP } from '../constants';\n\nexport const reNum = String.raw`(?:[-+]?(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][-+]?\\d+)?)`;\n\nexport const svgNS = 'http://www.w3.org/2000/svg';\n\nexport const commaWsp = String.raw`(?:\\s+,?\\s*|,\\s*|$)`;\n\nexport const reFontDeclaration = new RegExp(\n  '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n    reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' +\n    reNum +\n    '))?\\\\s+(.*)'\n);\n\nexport const svgValidTagNames = [\n    'path',\n    'circle',\n    'polygon',\n    'polyline',\n    'ellipse',\n    'rect',\n    'line',\n    'image',\n    'text',\n  ],\n  svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n  svgInvalidAncestors = [\n    'pattern',\n    'defs',\n    'symbol',\n    'metadata',\n    'clipPath',\n    'mask',\n    'desc',\n  ],\n  svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n  attributesMap = {\n    cx: LEFT,\n    x: LEFT,\n    r: 'radius',\n    cy: TOP,\n    y: TOP,\n    display: 'visible',\n    visibility: 'visible',\n    transform: 'transformMatrix',\n    'fill-opacity': 'fillOpacity',\n    'fill-rule': 'fillRule',\n    'font-family': 'fontFamily',\n    'font-size': 'fontSize',\n    'font-style': 'fontStyle',\n    'font-weight': 'fontWeight',\n    'letter-spacing': 'charSpacing',\n    'paint-order': 'paintFirst',\n    'stroke-dasharray': 'strokeDashArray',\n    'stroke-dashoffset': 'strokeDashOffset',\n    'stroke-linecap': 'strokeLineCap',\n    'stroke-linejoin': 'strokeLineJoin',\n    'stroke-miterlimit': 'strokeMiterLimit',\n    'stroke-opacity': 'strokeOpacity',\n    'stroke-width': 'strokeWidth',\n    'text-decoration': 'textDecoration',\n    'text-anchor': 'textAnchor',\n    opacity: 'opacity',\n    'clip-path': 'clipPath',\n    'clip-rule': 'clipRule',\n    'vector-effect': 'strokeUniform',\n    'image-rendering': 'imageSmoothing',\n  },\n  fSize = 'font-size',\n  cPath = 'clip-path';\n\nexport const svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n\nexport const svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n\nexport const svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n// http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n// matches, e.g.: +14.56e-12, etc.\nexport const reViewBoxAttrValue = new RegExp(\n  '^' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*,?' +\n    '\\\\s*(' +\n    reNum +\n    '+)\\\\s*' +\n    '$'\n);\n","import { classRegistry } from './ClassRegistry';\nimport { Color } from './color/Color';\nimport { config } from './config';\nimport { reNum } from './parser/constants';\nimport { Point } from './Point';\nimport type { FabricObject } from './shapes/Object/FabricObject';\nimport type { TClassProperties } from './typedefs';\nimport { uid } from './util/internals/uid';\nimport { pickBy } from './util/misc/pick';\nimport { degreesToRadians } from './util/misc/radiansDegreesConversion';\nimport { toFixed } from './util/misc/toFixed';\nimport { rotateVector } from './util/misc/vectors';\n\n/**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * - (?:\\s|^): This part captures either a whitespace character (\\s) or the beginning of a line (^). It's non-capturing (due to (?:...)), meaning it doesn't create a capturing group.\n   * - (-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?: This captures the first component of the shadow, which is the horizontal offset. Breaking it down:\n   *   - (-?\\d+): Captures an optional minus sign followed by one or more digits (integer part of the number).\n   *   - (?:\\.\\d*)?: Optionally captures a decimal point followed by zero or more digits (decimal part of the number).\n   *   - (?:px)?: Optionally captures the \"px\" unit.\n   *   - (?:\\s?|$): Captures either an optional whitespace or the end of the line. This whole part is wrapped in a non-capturing group and marked as optional with ?.\n   * - (-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?: Similar to the previous step, this captures the vertical offset.\n\n(\\d+(?:\\.\\d*)?(?:px)?)?: This captures the blur radius. It's similar to the horizontal offset but without the optional minus sign.\n\n(?:\\s+(-?\\d+(?:\\.\\d*)?(?:px)?(?:\\s?|$))?){0,1}: This captures an optional part for the color. It allows for whitespace followed by a component with an optional minus sign, digits, decimal point, and \"px\" unit.\n\n(?:$|\\s): This captures either the end of the line or a whitespace character. It ensures that the match ends either at the end of the string or with a whitespace character.\n   */\n// eslint-disable-next-line max-len\n\nconst shadowOffsetRegex = '(-?\\\\d+(?:\\\\.\\\\d*)?(?:px)?(?:\\\\s?|$))?';\n\nconst reOffsetsAndBlur = () =>\n  new RegExp(\n    '(?:\\\\s|^)' +\n      shadowOffsetRegex +\n      shadowOffsetRegex +\n      '(' +\n      reNum +\n      '?(?:px)?)?(?:\\\\s?|$)(?:$|\\\\s)'\n  );\n\nexport const shadowDefaultValues: Partial<TClassProperties<Shadow>> = {\n  color: 'rgb(0,0,0)',\n  blur: 0,\n  offsetX: 0,\n  offsetY: 0,\n  affectStroke: false,\n  includeDefaultValues: true,\n  nonScaling: false,\n};\n\nexport type SerializedShadowOptions = {\n  color: string;\n  blur: number;\n  offsetX: number;\n  offsetY: number;\n  affectStroke: boolean;\n  nonScaling: boolean;\n  type: string;\n};\n\nexport class Shadow {\n  /**\n   * Shadow color\n   * @type String\n   * @default\n   */\n  declare color: string;\n\n  /**\n   * Shadow blur\n   * @type Number\n   */\n  declare blur: number;\n\n  /**\n   * Shadow horizontal offset\n   * @type Number\n   * @default\n   */\n  declare offsetX: number;\n\n  /**\n   * Shadow vertical offset\n   * @type Number\n   * @default\n   */\n  declare offsetY: number;\n\n  /**\n   * Whether the shadow should affect stroke operations\n   * @type Boolean\n   * @default\n   */\n  declare affectStroke: boolean;\n\n  /**\n   * Indicates whether toObject should include default values\n   * @type Boolean\n   * @default\n   */\n  declare includeDefaultValues: boolean;\n\n  /**\n   * When `false`, the shadow will scale with the object.\n   * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n   * default to false\n   * @type Boolean\n   * @default\n   */\n  declare nonScaling: boolean;\n\n  declare id: number;\n\n  static ownDefaults = shadowDefaultValues;\n\n  static type = 'shadow';\n\n  /**\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n   */\n  constructor(options: Partial<TClassProperties<Shadow>>);\n  constructor(svgAttribute: string);\n  constructor(arg0: string | Partial<TClassProperties<Shadow>>) {\n    const options: Partial<TClassProperties<Shadow>> =\n      typeof arg0 === 'string' ? Shadow.parseShadow(arg0) : arg0;\n    Object.assign(this, (this.constructor as typeof Shadow).ownDefaults);\n    for (const prop in options) {\n      // @ts-expect-error for loops are so messy in TS\n      this[prop] = options[prop];\n    }\n\n    this.id = uid();\n  }\n\n  /**\n   * @param {String} value Shadow value to parse\n   * @return {Object} Shadow object with color, offsetX, offsetY and blur\n   */\n  static parseShadow(value: string) {\n    const shadowStr = value.trim(),\n      regex = reOffsetsAndBlur(),\n      [, offsetX = 0, offsetY = 0, blur = 0] = (\n        regex.exec(shadowStr) || []\n      ).map((value) => parseFloat(value) || 0),\n      color = (shadowStr.replace(regex, '') || 'rgb(0,0,0)').trim();\n\n    return {\n      color,\n      offsetX,\n      offsetY,\n      blur,\n    };\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n   * @return {String} Returns CSS3 text-shadow declaration\n   */\n  toString() {\n    return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n  }\n\n  /**\n   * Returns SVG representation of a shadow\n   * @param {FabricObject} object\n   * @return {String} SVG representation of a shadow\n   */\n  toSVG(object: FabricObject) {\n    const offset = rotateVector(\n        new Point(this.offsetX, this.offsetY),\n        degreesToRadians(-object.angle)\n      ),\n      BLUR_BOX = 20,\n      color = new Color(this.color);\n    let fBoxX = 40,\n      fBoxY = 40;\n\n    if (object.width && object.height) {\n      //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n      // we add some extra space to filter box to contain the blur ( 20 )\n      fBoxX =\n        toFixed(\n          (Math.abs(offset.x) + this.blur) / object.width,\n          config.NUM_FRACTION_DIGITS\n        ) *\n          100 +\n        BLUR_BOX;\n      fBoxY =\n        toFixed(\n          (Math.abs(offset.y) + this.blur) / object.height,\n          config.NUM_FRACTION_DIGITS\n        ) *\n          100 +\n        BLUR_BOX;\n    }\n    if (object.flipX) {\n      offset.x *= -1;\n    }\n    if (object.flipY) {\n      offset.y *= -1;\n    }\n\n    return `<filter id=\"SVGID_${this.id}\" y=\"-${fBoxY}%\" height=\"${\n      100 + 2 * fBoxY\n    }%\" x=\"-${fBoxX}%\" width=\"${\n      100 + 2 * fBoxX\n    }%\" >\\n\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"${toFixed(\n      this.blur ? this.blur / 2 : 0,\n      config.NUM_FRACTION_DIGITS\n    )}\"></feGaussianBlur>\\n\\t<feOffset dx=\"${toFixed(\n      offset.x,\n      config.NUM_FRACTION_DIGITS\n    )}\" dy=\"${toFixed(\n      offset.y,\n      config.NUM_FRACTION_DIGITS\n    )}\" result=\"oBlur\" ></feOffset>\\n\\t<feFlood flood-color=\"${color.toRgb()}\" flood-opacity=\"${color.getAlpha()}\"/>\\n\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n\\t<feMerge>\\n\\t\\t<feMergeNode></feMergeNode>\\n\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n\\t</feMerge>\\n</filter>\\n`;\n  }\n\n  /**\n   * Returns object representation of a shadow\n   * @return {Object} Object representation of a shadow instance\n   */\n  toObject() {\n    const data: SerializedShadowOptions = {\n      color: this.color,\n      blur: this.blur,\n      offsetX: this.offsetX,\n      offsetY: this.offsetY,\n      affectStroke: this.affectStroke,\n      nonScaling: this.nonScaling,\n      type: (this.constructor as typeof Shadow).type,\n    };\n    const defaults = Shadow.ownDefaults as SerializedShadowOptions;\n    return !this.includeDefaultValues\n      ? pickBy(data, (value, key) => value !== defaults[key])\n      : data;\n  }\n\n  static async fromObject(options: Partial<TClassProperties<Shadow>>) {\n    return new this(options);\n  }\n}\n\nclassRegistry.setClass(Shadow, 'shadow');\n","export const cloneDeep = <T extends object>(object: T): T =>\n  JSON.parse(JSON.stringify(object));\n","import { TOP, LEFT } from '../../constants';\nimport type { TClassProperties } from '../../typedefs';\nimport type { InteractiveFabricObject } from './InteractiveObject';\nimport type { FabricObject } from './Object';\n\nexport const stateProperties = [\n  TOP,\n  LEFT,\n  'scaleX',\n  'scaleY',\n  'flipX',\n  'flipY',\n  'originX',\n  'originY',\n  'angle',\n  'opacity',\n  'globalCompositeOperation',\n  'shadow',\n  'visible',\n  'skewX',\n  'skewY',\n];\n\nexport const cacheProperties = [\n  'fill',\n  'stroke',\n  'strokeWidth',\n  'strokeDashArray',\n  'width',\n  'height',\n  'paintFirst',\n  'strokeUniform',\n  'strokeLineCap',\n  'strokeDashOffset',\n  'strokeLineJoin',\n  'strokeMiterLimit',\n  'backgroundColor',\n  'clipPath',\n];\n\nexport const fabricObjectDefaultValues: Partial<\n  TClassProperties<FabricObject>\n> = {\n  // see composeMatrix() to see order of transforms. First defaults listed based on this\n  top: 0,\n  left: 0,\n  width: 0,\n  height: 0,\n  angle: 0,\n  flipX: false,\n  flipY: false,\n  scaleX: 1,\n  scaleY: 1,\n  minScaleLimit: 0,\n  skewX: 0,\n  skewY: 0,\n  originX: LEFT,\n  originY: TOP,\n  strokeWidth: 1,\n  strokeUniform: false,\n  padding: 0,\n  opacity: 1,\n  paintFirst: 'fill',\n  fill: 'rgb(0,0,0)',\n  fillRule: 'nonzero',\n  stroke: null,\n  strokeDashArray: null,\n  strokeDashOffset: 0,\n  strokeLineCap: 'butt',\n  strokeLineJoin: 'miter',\n  strokeMiterLimit: 4,\n  globalCompositeOperation: 'source-over',\n  backgroundColor: '',\n  shadow: null,\n  visible: true,\n  includeDefaultValues: true,\n  excludeFromExport: false,\n  objectCaching: true,\n  clipPath: undefined,\n  inverted: false,\n  absolutePositioned: false,\n  centeredRotation: true,\n  centeredScaling: false,\n  dirty: true,\n} as const;\n\nexport const interactiveObjectDefaultValues: Partial<\n  TClassProperties<InteractiveFabricObject>\n> = {\n  noScaleCache: true,\n  lockMovementX: false,\n  lockMovementY: false,\n  lockRotation: false,\n  lockScalingX: false,\n  lockScalingY: false,\n  lockSkewingX: false,\n  lockSkewingY: false,\n  lockScalingFlip: false,\n  cornerSize: 13,\n  touchCornerSize: 24,\n  transparentCorners: true,\n  cornerColor: 'rgb(178,204,255)',\n  cornerStrokeColor: '',\n  cornerStyle: 'rect',\n  cornerDashArray: null,\n  hasControls: true,\n  borderColor: 'rgb(178,204,255)',\n  borderDashArray: null,\n  borderOpacityWhenMoving: 0.4,\n  borderScaleFactor: 1,\n  hasBorders: true,\n  selectionBackgroundColor: '',\n  selectable: true,\n  evented: true,\n  perPixelTargetFind: false,\n  activeOn: 'down',\n  hoverCursor: null,\n  moveCursor: null,\n};\n","import { cache } from '../../cache';\nimport { config } from '../../config';\nimport {\n  ALIASING_LIMIT,\n  CENTER,\n  iMatrix,\n  LEFT,\n  TOP,\n  VERSION,\n} from '../../constants';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport { AnimatableObject } from './AnimatableObject';\nimport { Point } from '../../Point';\nimport { Shadow } from '../../Shadow';\nimport type {\n  TDegree,\n  TFiller,\n  TSize,\n  TCacheCanvasDimensions,\n  Abortable,\n  TOptions,\n  ImageFormat,\n} from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport { runningAnimations } from '../../util/animation/AnimationRegistry';\nimport { cloneDeep } from '../../util/internals/cloneDeep';\nimport { capValue } from '../../util/misc/capValue';\nimport { createCanvasElement, toDataURL } from '../../util/misc/dom';\nimport { invertTransform, qrDecompose } from '../../util/misc/matrix';\nimport { enlivenObjectEnlivables } from '../../util/misc/objectEnlive';\nimport {\n  resetObjectTransform,\n  saveObjectTransform,\n} from '../../util/misc/objectTransforms';\nimport { sendObjectToPlane } from '../../util/misc/planeChange';\nimport { pick, pickBy } from '../../util/misc/pick';\nimport { toFixed } from '../../util/misc/toFixed';\nimport type { Group } from '../Group';\nimport { StaticCanvas } from '../../canvas/StaticCanvas';\nimport {\n  isFiller,\n  isSerializableFiller,\n  isTextObject,\n} from '../../util/typeAssertions';\nimport type { FabricImage } from '../Image';\nimport {\n  cacheProperties,\n  fabricObjectDefaultValues,\n  stateProperties,\n} from './defaultValues';\nimport type { Gradient } from '../../gradient/Gradient';\nimport type { Pattern } from '../../Pattern';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { SerializedObjectProps } from './types/SerializedObjectProps';\nimport type { ObjectProps } from './types/ObjectProps';\nimport { getDevicePixelRatio, getEnv } from '../../env';\nimport { log } from '../../util/internals/console';\n\nexport type TCachedFabricObject<T extends FabricObject = FabricObject> = T &\n  Required<\n    Pick<\n      T,\n      | 'zoomX'\n      | 'zoomY'\n      | '_cacheCanvas'\n      | '_cacheContext'\n      | 'cacheTranslationX'\n      | 'cacheTranslationY'\n    >\n  > & {\n    _cacheContext: CanvasRenderingContext2D;\n  };\n\nexport type ObjectToCanvasElementOptions = {\n  format?: ImageFormat;\n  /** Multiplier to scale by */\n  multiplier?: number;\n  /** Cropping left offset. Introduced in v1.2.14 */\n  left?: number;\n  /** Cropping top offset. Introduced in v1.2.14 */\n  top?: number;\n  /** Cropping width. Introduced in v1.2.14 */\n  width?: number;\n  /** Cropping height. Introduced in v1.2.14 */\n  height?: number;\n  /** Enable retina scaling for clone image. Introduce in 1.6.4 */\n  enableRetinaScaling?: boolean;\n  /** Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4 */\n  withoutTransform?: boolean;\n  /** Remove current object shadow. Introduced in 2.4.2 */\n  withoutShadow?: boolean;\n  /** Account for canvas viewport transform */\n  viewportTransform?: boolean;\n  /** Function to create the output canvas to export onto */\n  canvasProvider?: <T extends StaticCanvas>(el?: HTMLCanvasElement) => T;\n};\n\ntype toDataURLOptions = ObjectToCanvasElementOptions & {\n  quality?: number;\n};\n\n/**\n * Root object class from which all 2d shape classes inherit from\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n *\n * @fires added\n * @fires removed\n *\n * @fires selected\n * @fires deselected\n *\n * @fires rotating\n * @fires scaling\n * @fires moving\n * @fires skewing\n * @fires modified\n *\n * @fires mousedown\n * @fires mouseup\n * @fires mouseover\n * @fires mouseout\n * @fires mousewheel\n * @fires mousedblclick\n *\n * @fires dragover\n * @fires dragenter\n * @fires dragleave\n * @fires drop\n */\nexport class FabricObject<\n    Props extends TOptions<ObjectProps> = Partial<ObjectProps>,\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents\n  >\n  extends AnimatableObject<EventSpec>\n  implements ObjectProps\n{\n  declare minScaleLimit: number;\n\n  declare opacity: number;\n\n  declare paintFirst: 'fill' | 'stroke';\n  declare fill: string | TFiller | null;\n  declare fillRule: CanvasFillRule;\n  declare stroke: string | TFiller | null;\n  declare strokeDashArray: number[] | null;\n  declare strokeDashOffset: number;\n  declare strokeLineCap: CanvasLineCap;\n  declare strokeLineJoin: CanvasLineJoin;\n  declare strokeMiterLimit: number;\n\n  declare globalCompositeOperation: GlobalCompositeOperation;\n  declare backgroundColor: string;\n\n  declare shadow: Shadow | null;\n\n  declare visible: boolean;\n\n  declare includeDefaultValues: boolean;\n  declare excludeFromExport: boolean;\n\n  declare objectCaching: boolean;\n\n  declare clipPath?: FabricObject;\n  declare inverted: boolean;\n  declare absolutePositioned: boolean;\n  declare centeredRotation: boolean;\n  declare centeredScaling: boolean;\n\n  /**\n   * This list of properties is used to check if the state of an object is changed.\n   * This state change now is only used for children of groups to understand if a group\n   * needs its cache regenerated during a .set call\n   * @type Array\n   */\n  static stateProperties: string[] = stateProperties;\n\n  /**\n   * List of properties to consider when checking if cache needs refresh\n   * Those properties are checked by\n   * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n   * and refreshed at the next render\n   * @type Array\n   */\n  static cacheProperties: string[] = cacheProperties;\n\n  /**\n   * When set to `true`, object's cache will be rerendered next render call.\n   * since 1.7.0\n   * @type Boolean\n   * @default true\n   */\n  declare dirty: boolean;\n\n  /**\n   * Quick access for the _cacheCanvas rendering context\n   * This is part of the objectCaching feature\n   * since 1.7.0\n   * @type boolean\n   * @default undefined\n   * @private\n   */\n  _cacheContext: CanvasRenderingContext2D | null = null;\n\n  /**\n   * A reference to the HTMLCanvasElement that is used to contain the cache of the object\n   * this canvas element is resized and cleared as needed\n   * Is marked private, you can read it, don't use it since it is handled by fabric\n   * since 1.7.0\n   * @type HTMLCanvasElement\n   * @default undefined\n   * @private\n   */\n  declare _cacheCanvas?: HTMLCanvasElement;\n\n  /**\n   * Size of the cache canvas, width\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare cacheWidth?: number;\n\n  /**\n   * Size of the cache canvas, height\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare cacheHeight?: number;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, X axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare zoomX?: number;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, Y axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare zoomY?: number;\n\n  /**\n   * zoom level used on the cacheCanvas to draw the cache, Y axe\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare cacheTranslationX?: number;\n\n  /**\n   * translation of the cacheCanvas away from the center, for subpixel accuracy and crispness\n   * since 1.7.0\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare cacheTranslationY?: number;\n\n  /**\n   * A reference to the parent of the object, usually a Group\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare group?: Group;\n\n  /**\n   * Indicate if the object is sitting on a cache dedicated to it\n   * or is part of a larger cache for many object ( a group for example)\n   * @type number\n   * @default undefined\n   * @private\n   */\n  declare ownCaching?: boolean;\n\n  /**\n   * Private. indicates if the object inside a group is on a transformed context or not\n   * or is part of a larger cache for many object ( a group for example)\n   * @type boolean\n   * @default undefined\n   * @private\n   */\n  declare _transformDone?: boolean;\n\n  static ownDefaults = fabricObjectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...FabricObject.ownDefaults };\n  }\n\n  /**\n   * The class type. Used to identify which class this is.\n   * This is used for serialization purposes and internally it can be used\n   * to identify classes. As a developer you could use `instance of Class`\n   * but to avoid importing all the code and blocking tree shaking we try\n   * to avoid doing that.\n   */\n  static type = 'FabricObject';\n\n  /**\n   * Legacy identifier of the class. Prefer using utils like isType or instanceOf\n   * Will be removed in fabric 7 or 8.\n   * The setter exists because is very hard to catch all the ways in which a type value\n   * could be set in the instance\n   * @TODO add sustainable warning message\n   * @type string\n   * @deprecated\n   */\n  get type() {\n    const name = (this.constructor as typeof FabricObject).type;\n    if (name === 'FabricObject') {\n      return 'object';\n    }\n    return name.toLowerCase();\n  }\n\n  set type(value) {\n    log('warn', 'Setting type has no effect', value);\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor(options: Props = {} as Props) {\n    super();\n    Object.assign(\n      this,\n      (this.constructor as typeof FabricObject).getDefaults()\n    );\n    this.setOptions(options);\n  }\n\n  /**\n   * Create a the canvas used to keep the cached copy of the object\n   * @private\n   */\n  _createCacheCanvas() {\n    this._cacheCanvas = createCanvasElement();\n    this._cacheContext = this._cacheCanvas.getContext('2d');\n    this._updateCacheCanvas();\n    // if canvas gets created, is empty, so dirty.\n    this.dirty = true;\n  }\n\n  /**\n   * Limit the cache dimensions so that X * Y do not cross config.perfLimitSizeTotal\n   * and each side do not cross fabric.cacheSideLimit\n   * those numbers are configurable so that you can get as much detail as you want\n   * making bargain with performances.\n   * @param {Object} dims\n   * @param {Object} dims.width width of canvas\n   * @param {Object} dims.height height of canvas\n   * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _limitCacheSize(\n    dims: TSize & { zoomX: number; zoomY: number; capped: boolean } & any\n  ) {\n    const width = dims.width,\n      height = dims.height,\n      max = config.maxCacheSideLimit,\n      min = config.minCacheSideLimit;\n    if (\n      width <= max &&\n      height <= max &&\n      width * height <= config.perfLimitSizeTotal\n    ) {\n      if (width < min) {\n        dims.width = min;\n      }\n      if (height < min) {\n        dims.height = min;\n      }\n      return dims;\n    }\n    const ar = width / height,\n      [limX, limY] = cache.limitDimsByArea(ar),\n      x = capValue(min, limX, max),\n      y = capValue(min, limY, max);\n    if (width > x) {\n      dims.zoomX /= width / x;\n      dims.width = x;\n      dims.capped = true;\n    }\n    if (height > y) {\n      dims.zoomY /= height / y;\n      dims.height = y;\n      dims.capped = true;\n    }\n    return dims;\n  }\n\n  /**\n   * Return the dimension and the zoom level needed to create a cache canvas\n   * big enough to host the object to be cached.\n   * @private\n   * @return {Object}.x width of object to be cached\n   * @return {Object}.y height of object to be cached\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _getCacheCanvasDimensions(): TCacheCanvasDimensions {\n    const objectScale = this.getTotalObjectScaling(),\n      // calculate dimensions without skewing\n      dim = this._getTransformedDimensions({ skewX: 0, skewY: 0 }),\n      neededX = (dim.x * objectScale.x) / this.scaleX,\n      neededY = (dim.y * objectScale.y) / this.scaleY;\n    return {\n      // for sure this ALIASING_LIMIT is slightly creating problem\n      // in situation in which the cache canvas gets an upper limit\n      // also objectScale contains already scaleX and scaleY\n      width: neededX + ALIASING_LIMIT,\n      height: neededY + ALIASING_LIMIT,\n      zoomX: objectScale.x,\n      zoomY: objectScale.y,\n      x: neededX,\n      y: neededY,\n    };\n  }\n\n  /**\n   * Update width and height of the canvas for cache\n   * returns true or false if canvas needed resize.\n   * @private\n   * @return {Boolean} true if the canvas has been resized\n   */\n  _updateCacheCanvas() {\n    const canvas = this._cacheCanvas,\n      context = this._cacheContext,\n      dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n      minCacheSize = config.minCacheSideLimit,\n      width = dims.width,\n      height = dims.height,\n      zoomX = dims.zoomX,\n      zoomY = dims.zoomY,\n      dimensionsChanged =\n        width !== this.cacheWidth || height !== this.cacheHeight,\n      zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY;\n\n    if (!canvas || !context) {\n      return false;\n    }\n\n    let drawingWidth,\n      drawingHeight,\n      shouldRedraw = dimensionsChanged || zoomChanged,\n      additionalWidth = 0,\n      additionalHeight = 0,\n      shouldResizeCanvas = false;\n\n    if (dimensionsChanged) {\n      const canvasWidth = (this._cacheCanvas as HTMLCanvasElement).width,\n        canvasHeight = (this._cacheCanvas as HTMLCanvasElement).height,\n        sizeGrowing = width > canvasWidth || height > canvasHeight,\n        sizeShrinking =\n          (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n          canvasWidth > minCacheSize &&\n          canvasHeight > minCacheSize;\n      shouldResizeCanvas = sizeGrowing || sizeShrinking;\n      if (\n        sizeGrowing &&\n        !dims.capped &&\n        (width > minCacheSize || height > minCacheSize)\n      ) {\n        additionalWidth = width * 0.1;\n        additionalHeight = height * 0.1;\n      }\n    }\n    if (isTextObject(this) && this.path) {\n      shouldRedraw = true;\n      shouldResizeCanvas = true;\n      // IMHO in those lines we are using zoomX and zoomY not the this version.\n      additionalWidth += this.getHeightOfLine(0) * this.zoomX!;\n      additionalHeight += this.getHeightOfLine(0) * this.zoomY!;\n    }\n    if (shouldRedraw) {\n      if (shouldResizeCanvas) {\n        canvas.width = Math.ceil(width + additionalWidth);\n        canvas.height = Math.ceil(height + additionalHeight);\n      } else {\n        context.setTransform(1, 0, 0, 1, 0, 0);\n        context.clearRect(0, 0, canvas.width, canvas.height);\n      }\n      drawingWidth = dims.x / 2;\n      drawingHeight = dims.y / 2;\n      this.cacheTranslationX =\n        Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n      this.cacheTranslationY =\n        Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n      this.cacheWidth = width;\n      this.cacheHeight = height;\n      context.translate(this.cacheTranslationX, this.cacheTranslationY);\n      context.scale(zoomX, zoomY);\n      this.zoomX = zoomX;\n      this.zoomY = zoomY;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Sets object's properties from options, for class constructor only.\n   * Needs to be overridden for different defaults.\n   * @protected\n   * @param {Object} [options] Options object\n   */\n  protected setOptions(options: Record<string, any> = {}) {\n    this._setOptions(options);\n  }\n\n  /**\n   * Transforms context when rendering an object\n   * @param {CanvasRenderingContext2D} ctx Context\n   */\n  transform(ctx: CanvasRenderingContext2D) {\n    const needFullTransform =\n      (this.group && !this.group._transformDone) ||\n      (this.group && this.canvas && ctx === (this.canvas as Canvas).contextTop);\n    const m = this.calcTransformMatrix(!needFullTransform);\n    ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n  }\n\n  /**\n   * Returns an object representation of an instance\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject(propertiesToInclude: any[] = []): any {\n    const NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS,\n      clipPathData =\n        this.clipPath && !this.clipPath.excludeFromExport\n          ? {\n              ...this.clipPath.toObject(propertiesToInclude),\n              inverted: this.clipPath.inverted,\n              absolutePositioned: this.clipPath.absolutePositioned,\n            }\n          : null,\n      object = {\n        ...pick(this, propertiesToInclude as (keyof this)[]),\n        type: (this.constructor as typeof FabricObject).type,\n        version: VERSION,\n        originX: this.originX,\n        originY: this.originY,\n        left: toFixed(this.left, NUM_FRACTION_DIGITS),\n        top: toFixed(this.top, NUM_FRACTION_DIGITS),\n        width: toFixed(this.width, NUM_FRACTION_DIGITS),\n        height: toFixed(this.height, NUM_FRACTION_DIGITS),\n        fill: isSerializableFiller(this.fill)\n          ? this.fill.toObject()\n          : this.fill,\n        stroke: isSerializableFiller(this.stroke)\n          ? this.stroke.toObject()\n          : this.stroke,\n        strokeWidth: toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n        strokeDashArray: this.strokeDashArray\n          ? this.strokeDashArray.concat()\n          : this.strokeDashArray,\n        strokeLineCap: this.strokeLineCap,\n        strokeDashOffset: this.strokeDashOffset,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeUniform: this.strokeUniform,\n        strokeMiterLimit: toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n        scaleX: toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n        scaleY: toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n        angle: toFixed(this.angle, NUM_FRACTION_DIGITS),\n        flipX: this.flipX,\n        flipY: this.flipY,\n        opacity: toFixed(this.opacity, NUM_FRACTION_DIGITS),\n        shadow:\n          this.shadow && this.shadow.toObject\n            ? this.shadow.toObject()\n            : this.shadow,\n        visible: this.visible,\n        backgroundColor: this.backgroundColor,\n        fillRule: this.fillRule,\n        paintFirst: this.paintFirst,\n        globalCompositeOperation: this.globalCompositeOperation,\n        skewX: toFixed(this.skewX, NUM_FRACTION_DIGITS),\n        skewY: toFixed(this.skewY, NUM_FRACTION_DIGITS),\n        ...(clipPathData ? { clipPath: clipPathData } : null),\n      };\n\n    return !this.includeDefaultValues\n      ? this._removeDefaultValues(object)\n      : object;\n  }\n\n  /**\n   * Returns (dataless) object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toDatalessObject(propertiesToInclude?: any[]): any {\n    // will be overwritten by subclasses\n    return this.toObject(propertiesToInclude);\n  }\n\n  /**\n   * @private\n   * @param {Object} object\n   */\n  _removeDefaultValues<T extends object>(object: T): Partial<T> {\n    // getDefaults() ( get from static ownDefaults ) should win over prototype since anyway they get assigned to instance\n    // ownDefault vs prototype is swappable only if you change all the fabric objects consistently.\n    const defaults = (this.constructor as typeof FabricObject).getDefaults();\n    const hasStaticDefaultValues = Object.keys(defaults).length > 0;\n    const baseValues = hasStaticDefaultValues\n      ? defaults\n      : Object.getPrototypeOf(this);\n\n    return pickBy(object, (value, key) => {\n      if (key === LEFT || key === TOP || key === 'type') {\n        return true;\n      }\n      const baseValue = baseValues[key];\n      return (\n        value !== baseValue &&\n        // basically a check for [] === []\n        !(\n          Array.isArray(value) &&\n          Array.isArray(baseValue) &&\n          value.length === 0 &&\n          baseValue.length === 0\n        )\n      );\n    });\n  }\n\n  /**\n   * Returns a string representation of an instance\n   * @return {String}\n   */\n  toString() {\n    return `#<${(this.constructor as typeof FabricObject).type}>`;\n  }\n\n  /**\n   * Return the object scale factor counting also the group scaling\n   * @return {Point}\n   */\n  getObjectScaling() {\n    // if the object is a top level one, on the canvas, we go for simple aritmetic\n    // otherwise the complex method with angles will return approximations and decimals\n    // and will likely kill the cache when not needed\n    // https://github.com/fabricjs/fabric.js/issues/7157\n    if (!this.group) {\n      return new Point(Math.abs(this.scaleX), Math.abs(this.scaleY));\n    }\n    // if we are inside a group total zoom calculation is complex, we defer to generic matrices\n    const options = qrDecompose(this.calcTransformMatrix());\n    return new Point(Math.abs(options.scaleX), Math.abs(options.scaleY));\n  }\n\n  /**\n   * Return the object scale factor counting also the group scaling, zoom and retina\n   * @return {Object} object with scaleX and scaleY properties\n   */\n  getTotalObjectScaling() {\n    const scale = this.getObjectScaling();\n    if (this.canvas) {\n      const zoom = this.canvas.getZoom();\n      const retina = this.getCanvasRetinaScaling();\n      return scale.scalarMultiply(zoom * retina);\n    }\n    return scale;\n  }\n\n  /**\n   * Return the object opacity counting also the group property\n   * @return {Number}\n   */\n  getObjectOpacity() {\n    let opacity = this.opacity;\n    if (this.group) {\n      opacity *= this.group.getObjectOpacity();\n    }\n    return opacity;\n  }\n\n  /**\n   * Makes sure the scale is valid and modifies it if necessary\n   * @todo: this is a control action issue, not a geometry one\n   * @private\n   * @param {Number} value, unconstrained\n   * @return {Number} constrained value;\n   */\n  _constrainScale(value: number): number {\n    if (Math.abs(value) < this.minScaleLimit) {\n      if (value < 0) {\n        return -this.minScaleLimit;\n      } else {\n        return this.minScaleLimit;\n      }\n    } else if (value === 0) {\n      return 0.0001;\n    }\n    return value;\n  }\n\n  /**\n   * Handles setting values on the instance and handling internal side effects\n   * @protected\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    const isChanged = this[key as keyof this] !== value;\n\n    if (key === 'scaleX' || key === 'scaleY') {\n      value = this._constrainScale(value);\n    }\n    if (key === 'scaleX' && value < 0) {\n      this.flipX = !this.flipX;\n      value *= -1;\n    } else if (key === 'scaleY' && value < 0) {\n      this.flipY = !this.flipY;\n      value *= -1;\n      // i don't like this automatic initialization here\n    } else if (key === 'shadow' && value && !(value instanceof Shadow)) {\n      value = new Shadow(value);\n    } else if (key === 'dirty' && this.group && value) {\n      // a dirty child makes the parent dirty\n      // but a non dirty child will not make the parent non dirty.\n      // the parent could be dirty for some other reason\n      this.group.set('dirty', value);\n    }\n\n    this[key as keyof this] = value;\n\n    if (isChanged) {\n      const groupNeedsUpdate = this.group && this.group.isOnACache();\n      if (\n        (this.constructor as typeof FabricObject).cacheProperties.includes(key)\n      ) {\n        this.dirty = true;\n        groupNeedsUpdate && this.group!.set('dirty', true);\n      } else if (\n        groupNeedsUpdate &&\n        (this.constructor as typeof FabricObject).stateProperties.includes(key)\n      ) {\n        this.group!.set('dirty', true);\n      }\n    }\n    return this;\n  }\n\n  /*\n   * @private\n   * return if the object would be visible in rendering\n   * @memberOf FabricObject.prototype\n   * @return {Boolean}\n   */\n  isNotVisible() {\n    return (\n      this.opacity === 0 ||\n      (!this.width && !this.height && this.strokeWidth === 0) ||\n      !this.visible\n    );\n  }\n\n  /**\n   * Renders an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    // do not render if width/height are zeros or object is not visible\n    if (this.isNotVisible()) {\n      return;\n    }\n    if (\n      this.canvas &&\n      this.canvas.skipOffscreen &&\n      !this.group &&\n      !this.isOnScreen()\n    ) {\n      return;\n    }\n    ctx.save();\n    this._setupCompositeOperation(ctx);\n    this.drawSelectionBackground(ctx);\n    this.transform(ctx);\n    this._setOpacity(ctx);\n    this._setShadow(ctx);\n    if (this.shouldCache()) {\n      this.renderCache();\n      (this as TCachedFabricObject).drawCacheOnCanvas(ctx);\n    } else {\n      this._removeCacheCanvas();\n      this.drawObject(ctx);\n      this.dirty = false;\n    }\n    ctx.restore();\n  }\n\n  drawSelectionBackground(ctx: CanvasRenderingContext2D) {\n    /* no op */\n  }\n\n  renderCache(options?: any) {\n    options = options || {};\n    if (!this._cacheCanvas || !this._cacheContext) {\n      this._createCacheCanvas();\n    }\n    if (this.isCacheDirty() && this._cacheContext) {\n      this.drawObject(this._cacheContext, options.forClipping);\n      this.dirty = false;\n    }\n  }\n\n  /**\n   * Remove cacheCanvas and its dimensions from the objects\n   */\n  _removeCacheCanvas() {\n    this._cacheCanvas = undefined;\n    this._cacheContext = null;\n    this.cacheWidth = 0;\n    this.cacheHeight = 0;\n  }\n\n  /**\n   * return true if the object will draw a stroke\n   * Does not consider text styles. This is just a shortcut used at rendering time\n   * We want it to be an approximation and be fast.\n   * wrote to avoid extra caching, it has to return true when stroke happens,\n   * can guess when it will not happen at 100% chance, does not matter if it misses\n   * some use case where the stroke is invisible.\n   * @since 3.0.0\n   * @returns Boolean\n   */\n  hasStroke() {\n    return (\n      this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0\n    );\n  }\n\n  /**\n   * return true if the object will draw a fill\n   * Does not consider text styles. This is just a shortcut used at rendering time\n   * We want it to be an approximation and be fast.\n   * wrote to avoid extra caching, it has to return true when fill happens,\n   * can guess when it will not happen at 100% chance, does not matter if it misses\n   * some use case where the fill is invisible.\n   * @since 3.0.0\n   * @returns Boolean\n   */\n  hasFill() {\n    return this.fill && this.fill !== 'transparent';\n  }\n\n  /**\n   * When set to `true`, force the object to have its own cache, even if it is inside a group\n   * it may be needed when your object behave in a particular way on the cache and always needs\n   * its own isolated canvas to render correctly.\n   * Created to be overridden\n   * since 1.7.12\n   * @returns Boolean\n   */\n  needsItsOwnCache() {\n    if (\n      this.paintFirst === 'stroke' &&\n      this.hasFill() &&\n      this.hasStroke() &&\n      !!this.shadow\n    ) {\n      return true;\n    }\n    if (this.clipPath) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * objectCaching is a global flag, wins over everything\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    this.ownCaching =\n      this.needsItsOwnCache() ||\n      (this.objectCaching && (!this.group || !this.group.isOnACache()));\n    return this.ownCaching;\n  }\n\n  /**\n   * Check if this object will cast a shadow with an offset.\n   * used by Group.shouldCache to know if child has a shadow recursively\n   * @return {Boolean}\n   * @deprecated\n   */\n  willDrawShadow() {\n    return (\n      !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0)\n    );\n  }\n\n  /**\n   * Execute the drawing operation for an object clipPath\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {FabricObject} clipPath\n   */\n  drawClipPathOnCache(\n    ctx: CanvasRenderingContext2D,\n    clipPath: TCachedFabricObject\n  ) {\n    ctx.save();\n    // DEBUG: uncomment this line, comment the following\n    // ctx.globalAlpha = 0.4\n    if (clipPath.inverted) {\n      ctx.globalCompositeOperation = 'destination-out';\n    } else {\n      ctx.globalCompositeOperation = 'destination-in';\n    }\n    //ctx.scale(1 / 2, 1 / 2);\n    if (clipPath.absolutePositioned) {\n      const m = invertTransform(this.calcTransformMatrix());\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n    clipPath.transform(ctx);\n    ctx.scale(1 / clipPath.zoomX, 1 / clipPath.zoomY);\n    ctx.drawImage(\n      clipPath._cacheCanvas,\n      -clipPath.cacheTranslationX,\n      -clipPath.cacheTranslationY\n    );\n    ctx.restore();\n  }\n\n  /**\n   * Execute the drawing operation for an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {boolean} forClipping apply clipping styles\n   */\n  drawObject(ctx: CanvasRenderingContext2D, forClipping?: boolean) {\n    const originalFill = this.fill,\n      originalStroke = this.stroke;\n    if (forClipping) {\n      this.fill = 'black';\n      this.stroke = '';\n      this._setClippingProperties(ctx);\n    } else {\n      this._renderBackground(ctx);\n    }\n    this._render(ctx);\n    this._drawClipPath(ctx, this.clipPath);\n    this.fill = originalFill;\n    this.stroke = originalStroke;\n  }\n\n  /**\n   * Prepare clipPath state and cache and draw it on instance's cache\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {FabricObject} clipPath\n   */\n  _drawClipPath(ctx: CanvasRenderingContext2D, clipPath?: FabricObject) {\n    if (!clipPath) {\n      return;\n    }\n    // needed to setup a couple of variables\n    // path canvas gets overridden with this one.\n    // TODO find a better solution?\n    clipPath._set('canvas', this.canvas);\n    clipPath.shouldCache();\n    clipPath._transformDone = true;\n    clipPath.renderCache({ forClipping: true });\n    this.drawClipPathOnCache(ctx, clipPath as TCachedFabricObject);\n  }\n\n  /**\n   * Paint the cached copy of the object on the target context.\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawCacheOnCanvas(this: TCachedFabricObject, ctx: CanvasRenderingContext2D) {\n    ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n    ctx.drawImage(\n      this._cacheCanvas,\n      -this.cacheTranslationX,\n      -this.cacheTranslationY\n    );\n  }\n\n  /**\n   * Check if cache is dirty\n   * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n   * on parent canvas.\n   */\n  isCacheDirty(skipCanvas = false) {\n    if (this.isNotVisible()) {\n      return false;\n    }\n    if (\n      this._cacheCanvas &&\n      this._cacheContext &&\n      !skipCanvas &&\n      this._updateCacheCanvas()\n    ) {\n      // in this case the context is already cleared.\n      return true;\n    } else {\n      if (this.dirty || (this.clipPath && this.clipPath.absolutePositioned)) {\n        if (this._cacheCanvas && this._cacheContext && !skipCanvas) {\n          const width = this.cacheWidth! / this.zoomX!;\n          const height = this.cacheHeight! / this.zoomY!;\n          this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n        }\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Draws a background for the object big as its untransformed dimensions\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderBackground(ctx: CanvasRenderingContext2D) {\n    if (!this.backgroundColor) {\n      return;\n    }\n    const dim = this._getNonTransformedDimensions();\n    ctx.fillStyle = this.backgroundColor;\n\n    ctx.fillRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y);\n    // if there is background color no other shadows\n    // should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _setOpacity(ctx: CanvasRenderingContext2D) {\n    if (this.group && !this.group._transformDone) {\n      ctx.globalAlpha = this.getObjectOpacity();\n    } else {\n      ctx.globalAlpha *= this.opacity;\n    }\n  }\n\n  _setStrokeStyles(\n    ctx: CanvasRenderingContext2D,\n    decl: Pick<\n      this,\n      | 'stroke'\n      | 'strokeWidth'\n      | 'strokeLineCap'\n      | 'strokeDashOffset'\n      | 'strokeLineJoin'\n      | 'strokeMiterLimit'\n    >\n  ) {\n    const stroke = decl.stroke;\n    if (stroke) {\n      ctx.lineWidth = decl.strokeWidth;\n      ctx.lineCap = decl.strokeLineCap;\n      ctx.lineDashOffset = decl.strokeDashOffset;\n      ctx.lineJoin = decl.strokeLineJoin;\n      ctx.miterLimit = decl.strokeMiterLimit;\n      if (isFiller(stroke)) {\n        if (\n          (stroke as Gradient<'linear'>).gradientUnits === 'percentage' ||\n          (stroke as Gradient<'linear'>).gradientTransform ||\n          (stroke as Pattern).patternTransform\n        ) {\n          // need to transform gradient in a pattern.\n          // this is a slow process. If you are hitting this codepath, and the object\n          // is not using caching, you should consider switching it on.\n          // we need a canvas as big as the current object caching canvas.\n          this._applyPatternForTransformedGradient(ctx, stroke);\n        } else {\n          // is a simple gradient or pattern\n          ctx.strokeStyle = stroke.toLive(ctx)!;\n          this._applyPatternGradientTransform(ctx, stroke);\n        }\n      } else {\n        // is a color\n        ctx.strokeStyle = decl.stroke as string;\n      }\n    }\n  }\n\n  _setFillStyles(ctx: CanvasRenderingContext2D, { fill }: Pick<this, 'fill'>) {\n    if (fill) {\n      if (isFiller(fill)) {\n        ctx.fillStyle = fill.toLive(ctx)!;\n        this._applyPatternGradientTransform(ctx, fill);\n      } else {\n        ctx.fillStyle = fill;\n      }\n    }\n  }\n\n  _setClippingProperties(ctx: CanvasRenderingContext2D) {\n    ctx.globalAlpha = 1;\n    ctx.strokeStyle = 'transparent';\n    ctx.fillStyle = '#000000';\n  }\n\n  /**\n   * @private\n   * Sets line dash\n   * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n   * @param {Array} dashArray array representing dashes\n   */\n  _setLineDash(ctx: CanvasRenderingContext2D, dashArray?: number[] | null) {\n    if (!dashArray || dashArray.length === 0) {\n      return;\n    }\n    // Spec requires the concatenation of two copies of the dash array when the number of elements is odd\n    if (1 & dashArray.length) {\n      dashArray.push(...dashArray);\n    }\n    ctx.setLineDash(dashArray);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _setShadow(ctx: CanvasRenderingContext2D) {\n    if (!this.shadow) {\n      return;\n    }\n\n    const shadow = this.shadow,\n      canvas = this.canvas,\n      retinaScaling = this.getCanvasRetinaScaling(),\n      [sx, , , sy] = canvas?.viewportTransform || iMatrix,\n      multX = sx * retinaScaling,\n      multY = sy * retinaScaling,\n      scaling = shadow.nonScaling ? new Point(1, 1) : this.getObjectScaling();\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur =\n      (shadow.blur *\n        config.browserShadowBlurConstant *\n        (multX + multY) *\n        (scaling.x + scaling.y)) /\n      4;\n    ctx.shadowOffsetX = shadow.offsetX * multX * scaling.x;\n    ctx.shadowOffsetY = shadow.offsetY * multY * scaling.y;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _removeShadow(ctx: CanvasRenderingContext2D) {\n    if (!this.shadow) {\n      return;\n    }\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {TFiller} filler {@link Pattern} or {@link Gradient}\n   */\n  _applyPatternGradientTransform(\n    ctx: CanvasRenderingContext2D,\n    filler: TFiller\n  ) {\n    if (!isFiller(filler)) {\n      return { offsetX: 0, offsetY: 0 };\n    }\n    const t =\n      (filler as Gradient<'linear'>).gradientTransform ||\n      (filler as Pattern).patternTransform;\n    const offsetX = -this.width / 2 + filler.offsetX || 0,\n      offsetY = -this.height / 2 + filler.offsetY || 0;\n\n    if ((filler as Gradient<'linear'>).gradientUnits === 'percentage') {\n      ctx.transform(this.width, 0, 0, this.height, offsetX, offsetY);\n    } else {\n      ctx.transform(1, 0, 0, 1, offsetX, offsetY);\n    }\n    if (t) {\n      ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n    }\n    return { offsetX: offsetX, offsetY: offsetY };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderPaintInOrder(ctx: CanvasRenderingContext2D) {\n    if (this.paintFirst === 'stroke') {\n      this._renderStroke(ctx);\n      this._renderFill(ctx);\n    } else {\n      this._renderFill(ctx);\n      this._renderStroke(ctx);\n    }\n  }\n\n  /**\n   * @private\n   * function that actually render something on the context.\n   * empty here to allow Obects to work on tests to benchmark fabric functionalites\n   * not related to rendering\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    // placeholder to be overridden\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderFill(ctx: CanvasRenderingContext2D) {\n    if (!this.fill) {\n      return;\n    }\n\n    ctx.save();\n    this._setFillStyles(ctx, this);\n    if (this.fillRule === 'evenodd') {\n      ctx.fill('evenodd');\n    } else {\n      ctx.fill();\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderStroke(ctx: CanvasRenderingContext2D) {\n    if (!this.stroke || this.strokeWidth === 0) {\n      return;\n    }\n\n    if (this.shadow && !this.shadow.affectStroke) {\n      this._removeShadow(ctx);\n    }\n\n    ctx.save();\n    if (this.strokeUniform) {\n      const scaling = this.getObjectScaling();\n      ctx.scale(1 / scaling.x, 1 / scaling.y);\n    }\n    this._setLineDash(ctx, this.strokeDashArray);\n    this._setStrokeStyles(ctx, this);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  /**\n   * This function try to patch the missing gradientTransform on canvas gradients.\n   * transforming a context to transform the gradient, is going to transform the stroke too.\n   * we want to transform the gradient but not the stroke operation, so we create\n   * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n   * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\n   * is limited.\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Gradient} filler\n   */\n  _applyPatternForTransformedGradient(\n    ctx: CanvasRenderingContext2D,\n    filler: TFiller\n  ) {\n    const dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n      pCanvas = createCanvasElement(),\n      retinaScaling = this.getCanvasRetinaScaling(),\n      width = dims.x / this.scaleX / retinaScaling,\n      height = dims.y / this.scaleY / retinaScaling;\n    // in case width and height are less than 1px, we have to round up.\n    // since the pattern is no-repeat, this is fine\n    pCanvas.width = Math.ceil(width);\n    pCanvas.height = Math.ceil(height);\n    const pCtx = pCanvas.getContext('2d');\n    if (!pCtx) {\n      return;\n    }\n    pCtx.beginPath();\n    pCtx.moveTo(0, 0);\n    pCtx.lineTo(width, 0);\n    pCtx.lineTo(width, height);\n    pCtx.lineTo(0, height);\n    pCtx.closePath();\n    pCtx.translate(width / 2, height / 2);\n    pCtx.scale(\n      dims.zoomX / this.scaleX / retinaScaling,\n      dims.zoomY / this.scaleY / retinaScaling\n    );\n    this._applyPatternGradientTransform(pCtx, filler);\n    pCtx.fillStyle = filler.toLive(ctx)!;\n    pCtx.fill();\n    ctx.translate(\n      -this.width / 2 - this.strokeWidth / 2,\n      -this.height / 2 - this.strokeWidth / 2\n    );\n    ctx.scale(\n      (retinaScaling * this.scaleX) / dims.zoomX,\n      (retinaScaling * this.scaleY) / dims.zoomY\n    );\n    ctx.strokeStyle = pCtx.createPattern(pCanvas, 'no-repeat') ?? '';\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement() {\n    return new Point(this.left + this.width / 2, this.top + this.height / 2);\n  }\n\n  /**\n   * Clones an instance.\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @returns {Promise<FabricObject>}\n   */\n  clone(propertiesToInclude?: string[]): Promise<this> {\n    const objectForm = this.toObject(propertiesToInclude);\n    return (this.constructor as typeof FabricObject).fromObject(\n      objectForm\n    ) as unknown as Promise<this>;\n  }\n\n  /**\n   * Creates an instance of Image out of an object\n   * makes use of toCanvasElement.\n   * Once this method was based on toDataUrl and loadImage, so it also had a quality\n   * and format option. toCanvasElement is faster and produce no loss of quality.\n   * If you need to get a real Jpeg or Png from an object, using toDataURL is the right way to do it.\n   * toCanvasElement and then toBlob from the obtained canvas is also a good option.\n   * @todo fix the export type, it could not be Image but the type that getClass return for 'image'.\n   * @param {ObjectToCanvasElementOptions} [options] for clone as image, passed to toDataURL\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @return {FabricImage} Object cloned as image.\n   */\n  cloneAsImage(options: ObjectToCanvasElementOptions): FabricImage {\n    const canvasEl = this.toCanvasElement(options);\n    // TODO: how to import Image w/o an import cycle?\n    const ImageClass = classRegistry.getClass<typeof FabricImage>('image');\n    return new ImageClass(canvasEl);\n  }\n\n  /**\n   * Converts an object into a HTMLCanvas element\n   * @param {ObjectToCanvasElementOptions} options Options object\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @param {Boolean} [options.viewportTransform] Account for canvas viewport transform\n   * @param {(el?: HTMLCanvasElement) => StaticCanvas} [options.canvasProvider] Create the output canvas\n   * @return {HTMLCanvasElement} Returns DOM element <canvas> with the FabricObject\n   */\n  toCanvasElement(options: ObjectToCanvasElementOptions = {}) {\n    const origParams = saveObjectTransform(this),\n      originalGroup = this.group,\n      originalShadow = this.shadow,\n      abs = Math.abs,\n      retinaScaling = options.enableRetinaScaling ? getDevicePixelRatio() : 1,\n      multiplier = (options.multiplier || 1) * retinaScaling,\n      canvasProvider: (el: HTMLCanvasElement) => StaticCanvas =\n        options.canvasProvider ||\n        ((el: HTMLCanvasElement) =>\n          new StaticCanvas(el, {\n            enableRetinaScaling: false,\n            renderOnAddRemove: false,\n            skipOffscreen: false,\n          }));\n    delete this.group;\n    if (options.withoutTransform) {\n      resetObjectTransform(this);\n    }\n    if (options.withoutShadow) {\n      this.shadow = null;\n    }\n    if (options.viewportTransform) {\n      sendObjectToPlane(this, this.getViewportTransform());\n    }\n\n    this.setCoords();\n    const el = createCanvasElement(),\n      boundingRect = this.getBoundingRect(),\n      shadow = this.shadow,\n      shadowOffset = new Point();\n\n    if (shadow) {\n      const shadowBlur = shadow.blur;\n      const scaling = shadow.nonScaling\n        ? new Point(1, 1)\n        : this.getObjectScaling();\n      // consider non scaling shadow.\n      shadowOffset.x =\n        2 * Math.round(abs(shadow.offsetX) + shadowBlur) * abs(scaling.x);\n      shadowOffset.y =\n        2 * Math.round(abs(shadow.offsetY) + shadowBlur) * abs(scaling.y);\n    }\n    const width = boundingRect.width + shadowOffset.x,\n      height = boundingRect.height + shadowOffset.y;\n    // if the current width/height is not an integer\n    // we need to make it so.\n    el.width = Math.ceil(width);\n    el.height = Math.ceil(height);\n    const canvas = canvasProvider(el);\n    if (options.format === 'jpeg') {\n      canvas.backgroundColor = '#fff';\n    }\n    this.setPositionByOrigin(\n      new Point(canvas.width / 2, canvas.height / 2),\n      CENTER,\n      CENTER\n    );\n    const originalCanvas = this.canvas;\n    // static canvas and canvas have both an array of InteractiveObjects\n    // @ts-expect-error this needs to be fixed somehow, or ignored globally\n    canvas._objects = [this];\n    this.set('canvas', canvas);\n    this.setCoords();\n    const canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n    this.set('canvas', originalCanvas);\n    this.shadow = originalShadow;\n    if (originalGroup) {\n      this.group = originalGroup;\n    }\n    this.set(origParams);\n    this.setCoords();\n    // canvas.dispose will call image.dispose that will nullify the elements\n    // since this canvas is a simple element for the process, we remove references\n    // to objects in this way in order to avoid object trashing.\n    canvas._objects = [];\n    // since render has settled it is safe to destroy canvas\n    canvas.destroy();\n    return canvasEl;\n  }\n\n  /**\n   * Converts an object into a data-url-like string\n   * @param {Object} options Options object\n   * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n   * @param {Number} [options.multiplier=1] Multiplier to scale by\n   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n   * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n   * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n   * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n   */\n  toDataURL(options: toDataURLOptions = {}) {\n    return toDataURL(\n      this.toCanvasElement(options),\n      options.format || 'png',\n      options.quality || 1\n    );\n  }\n\n  /**\n   * Returns true if any of the specified types is identical to the type of an instance\n   * @param {String} type Type to check against\n   * @return {Boolean}\n   */\n  isType(...types: string[]) {\n    return (\n      types.includes((this.constructor as typeof FabricObject).type) ||\n      types.includes(this.type)\n    );\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity of this instance (is 1 unless subclassed)\n   */\n  complexity() {\n    return 1;\n  }\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON() {\n    // delegate, not alias\n    return this.toObject();\n  }\n\n  /**\n   * Sets \"angle\" of an instance with centered rotation\n   * @param {TDegree} angle Angle value (in degrees)\n   */\n  rotate(angle: TDegree) {\n    const { centeredRotation, originX, originY } = this;\n\n    if (centeredRotation) {\n      const { x, y } = this.getRelativeCenterPoint();\n      this.originX = CENTER;\n      this.originY = CENTER;\n      this.left = x;\n      this.top = y;\n    }\n\n    this.set('angle', angle);\n\n    if (centeredRotation) {\n      const { x, y } = this.translateToOriginPoint(\n        this.getRelativeCenterPoint(),\n        originX,\n        originY\n      );\n      this.left = x;\n      this.top = y;\n      this.originX = originX;\n      this.originY = originY;\n    }\n  }\n\n  /**\n   * This callback function is called by the parent group of an object every\n   * time a non-delegated property changes on the group. It is passed the key\n   * and value as parameters. Not adding in this function's signature to avoid\n   * Travis build error about unused variables.\n   */\n  setOnGroup() {\n    // implemented by sub-classes, as needed.\n  }\n\n  /**\n   * Sets canvas globalCompositeOperation for specific object\n   * custom composition operation for the particular object can be specified using globalCompositeOperation property\n   * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n   */\n  _setupCompositeOperation(ctx: CanvasRenderingContext2D) {\n    if (this.globalCompositeOperation) {\n      ctx.globalCompositeOperation = this.globalCompositeOperation;\n    }\n  }\n\n  /**\n   * cancel instance's running animations\n   * override if necessary to dispose artifacts such as `clipPath`\n   */\n  dispose() {\n    runningAnimations.cancelByTarget(this);\n    this.off();\n    this._set('canvas', undefined);\n    // clear caches\n    this._cacheCanvas && getEnv().dispose(this._cacheCanvas);\n    this._cacheCanvas = undefined;\n    this._cacheContext = null;\n  }\n\n  /**\n   *\n   * @param {Function} klass\n   * @param {object} object\n   * @param {object} [options]\n   * @param {string} [options.extraParam] property to pass as first argument to the constructor\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricObject>}\n   */\n  static _fromObject<S extends FabricObject>(\n    { type, ...object }: Record<string, unknown>,\n    { extraParam, ...options }: Abortable & { extraParam?: string } = {}\n  ): Promise<S> {\n    return enlivenObjectEnlivables<any>(cloneDeep(object), options).then(\n      (enlivedMap) => {\n        const allOptions = { ...options, ...enlivedMap };\n        // from the resulting enlived options, extract options.extraParam to arg0\n        // to avoid accidental overrides later\n        if (extraParam) {\n          const { [extraParam]: arg0, ...rest } = allOptions;\n          // @ts-expect-error different signature\n          return new this(arg0, rest);\n        } else {\n          return new this(allOptions);\n        }\n      }\n    ) as Promise<S>;\n  }\n\n  /**\n   *\n   * @param {object} object\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricObject>}\n   */\n  static fromObject<T extends TOptions<SerializedObjectProps>>(\n    object: T,\n    options?: Abortable\n  ) {\n    return this._fromObject(object, options);\n  }\n}\n\nclassRegistry.setClass(FabricObject);\nclassRegistry.setClass(FabricObject, 'object');\n","import type {\n  TModificationEvents,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { fireEvent } from './fireEvent';\nimport { commonEventInfo } from './util';\n\n/**\n * Wrap an action handler with firing an event if the action is performed\n * @param {Function} actionHandler the function to wrap\n * @return {Function} a function with an action handler signature\n */\nexport const wrapWithFireEvent = <T extends Transform>(\n  eventName: TModificationEvents,\n  actionHandler: TransformActionHandler<T>\n) => {\n  return ((eventData, transform, x, y) => {\n    const actionPerformed = actionHandler(eventData, transform, x, y);\n    if (actionPerformed) {\n      fireEvent(eventName, commonEventInfo(eventData, transform, x, y));\n    }\n    return actionPerformed;\n  }) as TransformActionHandler<T>;\n};\n","import type { Transform, TransformActionHandler } from '../EventTypeDefs';\n\n/**\n * Wrap an action handler with saving/restoring object position on the transform.\n * this is the code that permits to objects to keep their position while transforming.\n * @param {Function} actionHandler the function to wrap\n * @return {Function} a function with an action handler signature\n */\nexport function wrapWithFixedAnchor<T extends Transform>(\n  actionHandler: TransformActionHandler<T>\n) {\n  return ((eventData, transform, x, y) => {\n    const { target, originX, originY } = transform,\n      centerPoint = target.getRelativeCenterPoint(),\n      constraint = target.translateToOriginPoint(centerPoint, originX, originY),\n      actionPerformed = actionHandler(eventData, transform, x, y);\n    // flipping requires to change the transform origin, so we read from the mutated transform\n    // instead of leveraging the one destructured before\n    target.setPositionByOrigin(\n      constraint,\n      transform.originX,\n      transform.originY\n    );\n    return actionPerformed;\n  }) as TransformActionHandler<T>;\n}\n","import type { TransformActionHandler } from '../EventTypeDefs';\nimport { CENTER, LEFT, RIGHT } from '../constants';\nimport { getLocalPoint, isTransformCentered } from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\n\n/**\n * Action handler to change object's width\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const changeObjectWidth: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y\n) => {\n  const localPoint = getLocalPoint(\n    transform,\n    transform.originX,\n    transform.originY,\n    x,\n    y\n  );\n  //  make sure the control changes width ONLY from it's side of target\n  if (\n    transform.originX === CENTER ||\n    (transform.originX === RIGHT && localPoint.x < 0) ||\n    (transform.originX === LEFT && localPoint.x > 0)\n  ) {\n    const { target } = transform,\n      strokePadding =\n        target.strokeWidth / (target.strokeUniform ? target.scaleX : 1),\n      multiplier = isTransformCentered(transform) ? 2 : 1,\n      oldWidth = target.width,\n      newWidth = Math.ceil(\n        Math.abs((localPoint.x * multiplier) / target.scaleX) - strokePadding\n      );\n    target.set('width', Math.max(newWidth, 0));\n    //  check against actual target width in case `newWidth` was rejected\n    return oldWidth !== target.width;\n  }\n  return false;\n};\n\nexport const changeWidth = wrapWithFireEvent(\n  'resizing',\n  wrapWithFixedAnchor(changeObjectWidth)\n);\n","import { twoMathPi } from '../constants';\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport type { Control } from './Control';\n\nexport type ControlRenderingStyleOverride = Partial<\n  Pick<\n    InteractiveFabricObject,\n    | 'cornerStyle'\n    | 'cornerSize'\n    | 'cornerColor'\n    | 'cornerStrokeColor'\n    | 'cornerDashArray'\n    | 'transparentCorners'\n  >\n>;\n\nexport type ControlRenderer = (\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject\n) => void;\n\n/**\n * Render a round control, as per fabric features.\n * This function is written to respect object properties like transparentCorners, cornerSize\n * cornerColor, cornerStrokeColor\n * plus the addition of offsetY and offsetX.\n * @param {CanvasRenderingContext2D} ctx context to render on\n * @param {Number} left x coordinate where the control center should be\n * @param {Number} top y coordinate where the control center should be\n * @param {Object} styleOverride override for FabricObject controls style\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n */\nexport function renderCircleControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n    transparentCorners =\n      typeof styleOverride.transparentCorners !== 'undefined'\n        ? styleOverride.transparentCorners\n        : fabricObject.transparentCorners,\n    methodName = transparentCorners ? 'stroke' : 'fill',\n    stroke =\n      !transparentCorners &&\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor);\n  let myLeft = left,\n    myTop = top,\n    size;\n  ctx.save();\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n  // TODO: use proper ellipse code.\n  if (xSize > ySize) {\n    size = xSize;\n    ctx.scale(1.0, ySize / xSize);\n    myTop = (top * xSize) / ySize;\n  } else if (ySize > xSize) {\n    size = ySize;\n    ctx.scale(xSize / ySize, 1.0);\n    myLeft = (left * ySize) / xSize;\n  } else {\n    size = xSize;\n  }\n  // this is still wrong\n  ctx.lineWidth = 1;\n  ctx.beginPath();\n  ctx.arc(myLeft, myTop, size / 2, 0, twoMathPi, false);\n  ctx[methodName]();\n  if (stroke) {\n    ctx.stroke();\n  }\n  ctx.restore();\n}\n\n/**\n * Render a square control, as per fabric features.\n * This function is written to respect object properties like transparentCorners, cornerSize\n * cornerColor, cornerStrokeColor\n * plus the addition of offsetY and offsetX.\n * @param {CanvasRenderingContext2D} ctx context to render on\n * @param {Number} left x coordinate where the control center should be\n * @param {Number} top y coordinate where the control center should be\n * @param {Object} styleOverride override for FabricObject controls style\n * @param {FabricObject} fabricObject the fabric object for which we are rendering controls\n */\nexport function renderSquareControl(\n  this: Control,\n  ctx: CanvasRenderingContext2D,\n  left: number,\n  top: number,\n  styleOverride: ControlRenderingStyleOverride,\n  fabricObject: InteractiveFabricObject\n) {\n  styleOverride = styleOverride || {};\n  const xSize =\n      this.sizeX || styleOverride.cornerSize || fabricObject.cornerSize,\n    ySize = this.sizeY || styleOverride.cornerSize || fabricObject.cornerSize,\n    transparentCorners =\n      typeof styleOverride.transparentCorners !== 'undefined'\n        ? styleOverride.transparentCorners\n        : fabricObject.transparentCorners,\n    methodName = transparentCorners ? 'stroke' : 'fill',\n    stroke =\n      !transparentCorners &&\n      (styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor),\n    xSizeBy2 = xSize / 2,\n    ySizeBy2 = ySize / 2;\n  ctx.save();\n  ctx.fillStyle = styleOverride.cornerColor || fabricObject.cornerColor || '';\n  ctx.strokeStyle =\n    styleOverride.cornerStrokeColor || fabricObject.cornerStrokeColor || '';\n  // this is still wrong\n  ctx.lineWidth = 1;\n  ctx.translate(left, top);\n  //  angle is relative to canvas plane\n  const angle = fabricObject.getTotalAngle();\n  ctx.rotate(degreesToRadians(angle));\n  // this does not work, and fixed with ( && ) does not make sense.\n  // to have real transparent corners we need the controls on upperCanvas\n  // transparentCorners || ctx.clearRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n  ctx[`${methodName}Rect`](-xSizeBy2, -ySizeBy2, xSize, ySize);\n  if (stroke) {\n    ctx.strokeRect(-xSizeBy2, -ySizeBy2, xSize, ySize);\n  }\n  ctx.restore();\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport type {\n  ControlActionHandler,\n  TPointerEvent,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { Intersection } from '../Intersection';\nimport { Point } from '../Point';\nimport type { InteractiveFabricObject } from '../shapes/Object/InteractiveObject';\nimport type { TCornerPoint, TDegree, TMat2D } from '../typedefs';\nimport {\n  createRotateMatrix,\n  createScaleMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrixArray,\n} from '../util/misc/matrix';\nimport type { ControlRenderingStyleOverride } from './controlRendering';\nimport { renderCircleControl, renderSquareControl } from './controlRendering';\n\nexport class Control {\n  /**\n   * keep track of control visibility.\n   * mainly for backward compatibility.\n   * if you do not want to see a control, you can remove it\n   * from the control set.\n   * @type {Boolean}\n   * @default true\n   */\n  visible = true;\n\n  /**\n   * Name of the action that the control will likely execute.\n   * This is optional. FabricJS uses to identify what the user is doing for some\n   * extra optimizations. If you are writing a custom control and you want to know\n   * somewhere else in the code what is going on, you can use this string here.\n   * you can also provide a custom getActionName if your control run multiple actions\n   * depending on some external state.\n   * default to scale since is the most common, used on 4 corners by default\n   * @type {String}\n   * @default 'scale'\n   */\n  actionName = 'scale';\n\n  /**\n   * Drawing angle of the control.\n   * NOT used for now, but name marked as needed for internal logic\n   * example: to reuse the same drawing function for different rotated controls\n   * @type {Number}\n   * @default 0\n   */\n  angle = 0;\n\n  /**\n   * Relative position of the control. X\n   * 0,0 is the center of the Object, while -0.5 (left) or 0.5 (right) are the extremities\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  x = 0;\n\n  /**\n   * Relative position of the control. Y\n   * 0,0 is the center of the Object, while -0.5 (top) or 0.5 (bottom) are the extremities\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  y = 0;\n\n  /**\n   * Horizontal offset of the control from the defined position. In pixels\n   * Positive offset moves the control to the right, negative to the left.\n   * It used when you want to have position of control that does not scale with\n   * the bounding box. Example: rotation control is placed at x:0, y: 0.5 on\n   * the boundind box, with an offset of 30 pixels vertically. Those 30 pixels will\n   * stay 30 pixels no matter how the object is big. Another example is having 2\n   * controls in the corner, that stay in the same position when the object scale.\n   * of the bounding box.\n   * @type {Number}\n   * @default 0\n   */\n  offsetX = 0;\n\n  /**\n   * Vertical offset of the control from the defined position. In pixels\n   * Positive offset moves the control to the bottom, negative to the top.\n   * @type {Number}\n   * @default 0\n   */\n  offsetY = 0;\n\n  /**\n   * Sets the length of the control. If null, defaults to object's cornerSize.\n   * Expects both sizeX and sizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  sizeX = 0;\n\n  /**\n   * Sets the height of the control. If null, defaults to object's cornerSize.\n   * Expects both sizeX and sizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  sizeY = 0;\n\n  /**\n   * Sets the length of the touch area of the control. If null, defaults to object's touchCornerSize.\n   * Expects both touchSizeX and touchSizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  touchSizeX = 0;\n\n  /**\n   * Sets the height of the touch area of the control. If null, defaults to object's touchCornerSize.\n   * Expects both touchSizeX and touchSizeY to be set when set.\n   * @type {?Number}\n   * @default null\n   */\n  touchSizeY = 0;\n\n  /**\n   * Css cursor style to display when the control is hovered.\n   * if the method `cursorStyleHandler` is provided, this property is ignored.\n   * @type {String}\n   * @default 'crosshair'\n   */\n  cursorStyle = 'crosshair';\n\n  /**\n   * If controls has an offsetY or offsetX, draw a line that connects\n   * the control to the bounding box\n   * @type {Boolean}\n   * @default false\n   */\n  withConnection = false;\n\n  constructor(options?: Partial<Control>) {\n    Object.assign(this, options);\n  }\n\n  /**\n   * The control actionHandler, provide one to handle action ( control being moved )\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare actionHandler: TransformActionHandler;\n\n  /**\n   * The control handler for mouse down, provide one to handle mouse down on control\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare mouseDownHandler?: ControlActionHandler;\n\n  /**\n   * The control mouseUpHandler, provide one to handle an effect on mouse up.\n   * @param {Event} eventData the native mouse event\n   * @param {Transform} transformData properties of the current transform\n   * @param {Number} x x position of the cursor\n   * @param {Number} y y position of the cursor\n   * @return {Boolean} true if the action/event modified the object\n   */\n  declare mouseUpHandler?: ControlActionHandler;\n\n  shouldActivate(\n    controlKey: string,\n    fabricObject: InteractiveFabricObject,\n    pointer: Point,\n    { tl, tr, br, bl }: TCornerPoint\n  ) {\n    // TODO: locking logic can be handled here instead of in the control handler logic\n    return (\n      fabricObject.canvas?.getActiveObject() === fabricObject &&\n      fabricObject.isControlVisible(controlKey) &&\n      Intersection.isPointInPolygon(pointer, [tl, tr, br, bl])\n    );\n  }\n\n  /**\n   * Returns control actionHandler\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getActionHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control\n  ): TransformActionHandler | undefined {\n    return this.actionHandler;\n  }\n\n  /**\n   * Returns control mouseDown handler\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getMouseDownHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control\n  ): ControlActionHandler | undefined {\n    return this.mouseDownHandler;\n  }\n\n  /**\n   * Returns control mouseUp handler.\n   * During actions the fabricObject or the control can be of different obj\n   * @param {Event} eventData the native mouse event\n   * @param {FabricObject} fabricObject on which the control is displayed\n   * @param {Control} control control for which the action handler is being asked\n   * @return {Function} the action handler\n   */\n  getMouseUpHandler(\n    eventData: TPointerEvent,\n    fabricObject: InteractiveFabricObject,\n    control: Control\n  ): ControlActionHandler | undefined {\n    return this.mouseUpHandler;\n  }\n\n  /**\n   * Returns control cursorStyle for css using cursorStyle. If you need a more elaborate\n   * function you can pass one in the constructor\n   * the cursorStyle property\n   * @param {Event} eventData the native mouse event\n   * @param {Control} control the current control ( likely this)\n   * @param {FabricObject} object on which the control is displayed\n   * @return {String}\n   */\n  cursorStyleHandler(\n    eventData: TPointerEvent,\n    control: Control,\n    fabricObject: InteractiveFabricObject\n  ) {\n    return control.cursorStyle;\n  }\n\n  /**\n   * Returns the action name. The basic implementation just return the actionName property.\n   * @param {Event} eventData the native mouse event\n   * @param {Control} control the current control ( likely this)\n   * @param {FabricObject} object on which the control is displayed\n   * @return {String}\n   */\n  getActionName(\n    eventData: TPointerEvent,\n    control: Control,\n    fabricObject: InteractiveFabricObject\n  ) {\n    return control.actionName;\n  }\n\n  /**\n   * Returns controls visibility\n   * @param {FabricObject} object on which the control is displayed\n   * @param {String} controlKey key where the control is memorized on the\n   * @return {Boolean}\n   */\n  getVisibility(fabricObject: InteractiveFabricObject, controlKey: string) {\n    return fabricObject._controlsVisibility?.[controlKey] ?? this.visible;\n  }\n\n  /**\n   * Sets controls visibility\n   * @param {Boolean} visibility for the object\n   * @return {Void}\n   */\n  setVisibility(\n    visibility: boolean,\n    name: string,\n    fabricObject: InteractiveFabricObject\n  ) {\n    this.visible = visibility;\n  }\n\n  positionHandler(\n    dim: Point,\n    finalMatrix: TMat2D,\n    fabricObject: InteractiveFabricObject,\n    currentControl: Control\n  ) {\n    return new Point(\n      this.x * dim.x + this.offsetX,\n      this.y * dim.y + this.offsetY\n    ).transform(finalMatrix);\n  }\n\n  /**\n   * Returns the coords for this control based on object values.\n   * @param {Number} objectAngle angle from the fabric object holding the control\n   * @param {Number} objectCornerSize cornerSize from the fabric object holding the control (or touchCornerSize if\n   *   isTouch is true)\n   * @param {Number} centerX x coordinate where the control center should be\n   * @param {Number} centerY y coordinate where the control center should be\n   * @param {boolean} isTouch true if touch corner, false if normal corner\n   */\n  calcCornerCoords(\n    angle: TDegree,\n    objectCornerSize: number,\n    centerX: number,\n    centerY: number,\n    isTouch: boolean,\n    fabricObject: InteractiveFabricObject\n  ) {\n    const t = multiplyTransformMatrixArray([\n      createTranslateMatrix(centerX, centerY),\n      createRotateMatrix({ angle }),\n      createScaleMatrix(\n        (isTouch ? this.touchSizeX : this.sizeX) || objectCornerSize,\n        (isTouch ? this.touchSizeY : this.sizeY) || objectCornerSize\n      ),\n    ]);\n    return {\n      tl: new Point(-0.5, -0.5).transform(t),\n      tr: new Point(0.5, -0.5).transform(t),\n      bl: new Point(-0.5, 0.5).transform(t),\n      br: new Point(0.5, 0.5).transform(t),\n    };\n  }\n\n  /**\n   * Render function for the control.\n   * When this function runs the context is unscaled. unrotate. Just retina scaled.\n   * all the functions will have to translate to the point left,top before starting Drawing\n   * if they want to draw a control where the position is detected.\n   * left and top are the result of the positionHandler function\n   * @param {RenderingContext2D} ctx the context where the control will be drawn\n   * @param {Number} left position of the canvas where we are about to render the control.\n   * @param {Number} top position of the canvas where we are about to render the control.\n   * @param {Object} styleOverride\n   * @param {FabricObject} fabricObject the object where the control is about to be rendered\n   */\n  render(\n    ctx: CanvasRenderingContext2D,\n    left: number,\n    top: number,\n    styleOverride: ControlRenderingStyleOverride | undefined,\n    fabricObject: InteractiveFabricObject\n  ) {\n    styleOverride = styleOverride || {};\n    switch (styleOverride.cornerStyle || fabricObject.cornerStyle) {\n      case 'circle':\n        renderCircleControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject\n        );\n        break;\n      default:\n        renderSquareControl.call(\n          this,\n          ctx,\n          left,\n          top,\n          styleOverride,\n          fabricObject\n        );\n    }\n  }\n}\n","import type {\n  ControlCursorCallback,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { radiansToDegrees } from '../util/misc/radiansDegreesConversion';\nimport { isLocked, NOT_ALLOWED_CURSOR } from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\n\n/**\n * Find the correct style for the control that is used for rotation.\n * this function is very simple and it just take care of not-allowed or standard cursor\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const rotationStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject\n) => {\n  if (fabricObject.lockRotation) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  return control.cursorStyle;\n};\n\n/**\n * Action handler for rotation and snapping, without anchor point.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n * @private\n */\nconst rotateObjectWithSnapping: TransformActionHandler = (\n  eventData,\n  { target, ex, ey, theta, originX, originY },\n  x,\n  y\n) => {\n  const pivotPoint = target.translateToOriginPoint(\n    target.getRelativeCenterPoint(),\n    originX,\n    originY\n  );\n\n  if (isLocked(target, 'lockRotation')) {\n    return false;\n  }\n\n  const lastAngle = Math.atan2(ey - pivotPoint.y, ex - pivotPoint.x),\n    curAngle = Math.atan2(y - pivotPoint.y, x - pivotPoint.x);\n  let angle = radiansToDegrees(curAngle - lastAngle + theta);\n\n  if (target.snapAngle && target.snapAngle > 0) {\n    const snapAngle = target.snapAngle,\n      snapThreshold = target.snapThreshold || snapAngle,\n      rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n      leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n    if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n      angle = leftAngleLocked;\n    } else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n      angle = rightAngleLocked;\n    }\n  }\n\n  // normalize angle to positive value\n  if (angle < 0) {\n    angle = 360 + angle;\n  }\n  angle %= 360;\n\n  const hasRotated = target.angle !== angle;\n  // TODO: why aren't we using set?\n  target.angle = angle;\n  return hasRotated;\n};\n\nexport const rotationWithSnapping = wrapWithFireEvent(\n  'rotating',\n  wrapWithFixedAnchor(rotateObjectWithSnapping)\n);\n","import type {\n  ControlCursorCallback,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TAxis } from '../typedefs';\nimport type { Canvas } from '../canvas/Canvas';\nimport {\n  findCornerQuadrant,\n  getLocalPoint,\n  invertOrigin,\n  isLocked,\n  isTransformCentered,\n  NOT_ALLOWED_CURSOR,\n} from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\n\ntype ScaleTransform = Transform & {\n  gestureScale?: number;\n  signX?: number;\n  signY?: number;\n};\n\ntype ScaleBy = TAxis | 'equally' | '' | undefined;\n\n/**\n * Inspect event and fabricObject properties to understand if the scaling action\n * @param {Event} eventData from the user action\n * @param {FabricObject} fabricObject the fabric object about to scale\n * @return {Boolean} true if scale is proportional\n */\nexport function scaleIsProportional(\n  eventData: TPointerEvent,\n  fabricObject: FabricObject\n): boolean {\n  const canvas = fabricObject.canvas as Canvas,\n    uniformIsToggled = eventData[canvas.uniScaleKey!];\n  return (\n    (canvas.uniformScaling && !uniformIsToggled) ||\n    (!canvas.uniformScaling && uniformIsToggled)\n  );\n}\n\n/**\n * Inspect fabricObject to understand if the current scaling action is allowed\n * @param {FabricObject} fabricObject the fabric object about to scale\n * @param {String} by 'x' or 'y' or ''\n * @param {Boolean} scaleProportionally true if we are trying to scale proportionally\n * @return {Boolean} true if scaling is not allowed at current conditions\n */\nexport function scalingIsForbidden(\n  fabricObject: FabricObject,\n  by: ScaleBy,\n  scaleProportionally: boolean\n) {\n  const lockX = isLocked(fabricObject, 'lockScalingX'),\n    lockY = isLocked(fabricObject, 'lockScalingY');\n  if (lockX && lockY) {\n    return true;\n  }\n  if (!by && (lockX || lockY) && scaleProportionally) {\n    return true;\n  }\n  if (lockX && by === 'x') {\n    return true;\n  }\n  if (lockY && by === 'y') {\n    return true;\n  }\n  // code crashes because of a division by 0 if a 0 sized object is scaled\n  // forbid to prevent scaling to happen. ISSUE-9475\n  const { width, height, strokeWidth } = fabricObject;\n  if (width === 0 && strokeWidth === 0 && by !== 'y') {\n    return true;\n  }\n  if (height === 0 && strokeWidth === 0 && by !== 'x') {\n    return true;\n  }\n  return false;\n}\n\nconst scaleMap = ['e', 'se', 's', 'sw', 'w', 'nw', 'n', 'ne', 'e'];\n\n/**\n * return the correct cursor style for the scale action\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const scaleCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject\n) => {\n  const scaleProportionally = scaleIsProportional(eventData, fabricObject),\n    by =\n      control.x !== 0 && control.y === 0\n        ? 'x'\n        : control.x === 0 && control.y !== 0\n        ? 'y'\n        : '';\n  if (scalingIsForbidden(fabricObject, by, scaleProportionally)) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  const n = findCornerQuadrant(fabricObject, control);\n  return `${scaleMap[n]}-resize`;\n};\n\n/**\n * Basic scaling logic, reused with different constrain for scaling X,Y, freely or equally.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @param {Object} options additional information for scaling\n * @param {String} options.by 'x', 'y', 'equally' or '' to indicate type of scaling\n * @return {Boolean} true if some change happened\n * @private\n */\nfunction scaleObject(\n  eventData: TPointerEvent,\n  transform: ScaleTransform,\n  x: number,\n  y: number,\n  options: { by?: ScaleBy } = {}\n) {\n  const target = transform.target,\n    by = options.by,\n    scaleProportionally = scaleIsProportional(eventData, target),\n    forbidScaling = scalingIsForbidden(target, by, scaleProportionally);\n  let newPoint, scaleX, scaleY, dim, signX, signY;\n\n  if (forbidScaling) {\n    return false;\n  }\n  if (transform.gestureScale) {\n    scaleX = transform.scaleX * transform.gestureScale;\n    scaleY = transform.scaleY * transform.gestureScale;\n  } else {\n    newPoint = getLocalPoint(\n      transform,\n      transform.originX,\n      transform.originY,\n      x,\n      y\n    );\n    // use of sign: We use sign to detect change of direction of an action. sign usually change when\n    // we cross the origin point with the mouse. So a scale flip for example. There is an issue when scaling\n    // by center and scaling using one middle control ( default: mr, mt, ml, mb), the mouse movement can easily\n    // cross many time the origin point and flip the object. so we need a way to filter out the noise.\n    // This ternary here should be ok to filter out X scaling when we want Y only and vice versa.\n    signX = by !== 'y' ? Math.sign(newPoint.x || transform.signX || 1) : 1;\n    signY = by !== 'x' ? Math.sign(newPoint.y || transform.signY || 1) : 1;\n    if (!transform.signX) {\n      transform.signX = signX;\n    }\n    if (!transform.signY) {\n      transform.signY = signY;\n    }\n\n    if (\n      isLocked(target, 'lockScalingFlip') &&\n      (transform.signX !== signX || transform.signY !== signY)\n    ) {\n      return false;\n    }\n\n    dim = target._getTransformedDimensions();\n    // missing detection of flip and logic to switch the origin\n    if (scaleProportionally && !by) {\n      // uniform scaling\n      const distance = Math.abs(newPoint.x) + Math.abs(newPoint.y),\n        { original } = transform,\n        originalDistance =\n          Math.abs((dim.x * original.scaleX) / target.scaleX) +\n          Math.abs((dim.y * original.scaleY) / target.scaleY),\n        scale = distance / originalDistance;\n      scaleX = original.scaleX * scale;\n      scaleY = original.scaleY * scale;\n    } else {\n      scaleX = Math.abs((newPoint.x * target.scaleX) / dim.x);\n      scaleY = Math.abs((newPoint.y * target.scaleY) / dim.y);\n    }\n    // if we are scaling by center, we need to double the scale\n    if (isTransformCentered(transform)) {\n      scaleX *= 2;\n      scaleY *= 2;\n    }\n    if (transform.signX !== signX && by !== 'y') {\n      transform.originX = invertOrigin(transform.originX);\n      scaleX *= -1;\n      transform.signX = signX;\n    }\n    if (transform.signY !== signY && by !== 'x') {\n      transform.originY = invertOrigin(transform.originY);\n      scaleY *= -1;\n      transform.signY = signY;\n    }\n  }\n  // minScale is taken care of in the setter.\n  const oldScaleX = target.scaleX,\n    oldScaleY = target.scaleY;\n  if (!by) {\n    !isLocked(target, 'lockScalingX') && target.set('scaleX', scaleX);\n    !isLocked(target, 'lockScalingY') && target.set('scaleY', scaleY);\n  } else {\n    // forbidden cases already handled on top here.\n    by === 'x' && target.set('scaleX', scaleX);\n    by === 'y' && target.set('scaleY', scaleY);\n  }\n  return oldScaleX !== target.scaleX || oldScaleY !== target.scaleY;\n}\n\n/**\n * Generic scaling logic, to scale from corners either equally or freely.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scaleObjectFromCorner: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y\n) => {\n  return scaleObject(eventData, transform, x, y);\n};\n\n/**\n * Scaling logic for the X axis.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nconst scaleObjectX: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y\n) => {\n  return scaleObject(eventData, transform, x, y, { by: 'x' });\n};\n\n/**\n * Scaling logic for the Y axis.\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nconst scaleObjectY: TransformActionHandler<ScaleTransform> = (\n  eventData,\n  transform,\n  x,\n  y\n) => {\n  return scaleObject(eventData, transform, x, y, { by: 'y' });\n};\n\nexport const scalingEqually = wrapWithFireEvent(\n  'scaling',\n  wrapWithFixedAnchor(scaleObjectFromCorner)\n);\n\nexport const scalingX = wrapWithFireEvent(\n  'scaling',\n  wrapWithFixedAnchor(scaleObjectX)\n);\n\nexport const scalingY = wrapWithFireEvent(\n  'scaling',\n  wrapWithFixedAnchor(scaleObjectY)\n);\n","import type {\n  ControlCursorCallback,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { Point } from '../Point';\nimport type { TAxis, TAxisKey } from '../typedefs';\nimport {\n  degreesToRadians,\n  radiansToDegrees,\n} from '../util/misc/radiansDegreesConversion';\nimport {\n  findCornerQuadrant,\n  getLocalPoint,\n  isLocked,\n  NOT_ALLOWED_CURSOR,\n} from './util';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { wrapWithFixedAnchor } from './wrapWithFixedAnchor';\nimport { CENTER } from '../constants';\n\nexport type SkewTransform = Transform & { skewingSide: -1 | 1 };\n\nconst AXIS_KEYS: Record<\n  TAxis,\n  {\n    counterAxis: TAxis;\n    scale: TAxisKey<'scale'>;\n    skew: TAxisKey<'skew'>;\n    lockSkewing: TAxisKey<'lockSkewing'>;\n    origin: TAxisKey<'origin'>;\n    flip: TAxisKey<'flip'>;\n  }\n> = {\n  x: {\n    counterAxis: 'y',\n    scale: 'scaleX',\n    skew: 'skewX',\n    lockSkewing: 'lockSkewingX',\n    origin: 'originX',\n    flip: 'flipX',\n  },\n  y: {\n    counterAxis: 'x',\n    scale: 'scaleY',\n    skew: 'skewY',\n    lockSkewing: 'lockSkewingY',\n    origin: 'originY',\n    flip: 'flipY',\n  },\n};\n\nconst skewMap = ['ns', 'nesw', 'ew', 'nwse'];\n\n/**\n * return the correct cursor style for the skew action\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const skewCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject\n) => {\n  if (control.x !== 0 && isLocked(fabricObject, 'lockSkewingY')) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  if (control.y !== 0 && isLocked(fabricObject, 'lockSkewingX')) {\n    return NOT_ALLOWED_CURSOR;\n  }\n  const n = findCornerQuadrant(fabricObject, control) % 4;\n  return `${skewMap[n]}-resize`;\n};\n\n/**\n * Since skewing is applied before scaling, calculations are done in a scaleless plane\n * @see https://github.com/fabricjs/fabric.js/pull/8380\n */\nfunction skewObject(\n  axis: TAxis,\n  { target, ex, ey, skewingSide, ...transform }: SkewTransform,\n  pointer: Point\n) {\n  const { skew: skewKey } = AXIS_KEYS[axis],\n    offset = pointer\n      .subtract(new Point(ex, ey))\n      .divide(new Point(target.scaleX, target.scaleY))[axis],\n    skewingBefore = target[skewKey],\n    skewingStart = transform[skewKey],\n    shearingStart = Math.tan(degreesToRadians(skewingStart)),\n    // let a, b be the size of target\n    // let a' be the value of a after applying skewing\n    // then:\n    // a' = a + b * skewA => skewA = (a' - a) / b\n    // the value b is tricky since skewY is applied before skewX\n    b =\n      axis === 'y'\n        ? target._getTransformedDimensions({\n            scaleX: 1,\n            scaleY: 1,\n            // since skewY is applied before skewX, b (=width) is not affected by skewX\n            skewX: 0,\n          }).x\n        : target._getTransformedDimensions({\n            scaleX: 1,\n            scaleY: 1,\n          }).y;\n\n  const shearing =\n    (2 * offset * skewingSide) /\n      // we max out fractions to safeguard from asymptotic behavior\n      Math.max(b, 1) +\n    // add starting state\n    shearingStart;\n\n  const skewing = radiansToDegrees(Math.atan(shearing));\n\n  target.set(skewKey, skewing);\n  const changed = skewingBefore !== target[skewKey];\n\n  if (changed && axis === 'y') {\n    // we don't want skewing to affect scaleX\n    // so we factor it by the inverse skewing diff to make it seem unchanged to the viewer\n    const { skewX, scaleX } = target,\n      dimBefore = target._getTransformedDimensions({ skewY: skewingBefore }),\n      dimAfter = target._getTransformedDimensions(),\n      compensationFactor = skewX !== 0 ? dimBefore.x / dimAfter.x : 1;\n    compensationFactor !== 1 &&\n      target.set('scaleX', compensationFactor * scaleX);\n  }\n\n  return changed;\n}\n\n/**\n * Wrapped Action handler for skewing on a given axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nfunction skewHandler(\n  axis: TAxis,\n  eventData: TPointerEvent,\n  transform: Transform,\n  x: number,\n  y: number\n) {\n  const { target } = transform,\n    {\n      counterAxis,\n      origin: originKey,\n      lockSkewing: lockSkewingKey,\n      skew: skewKey,\n      flip: flipKey,\n    } = AXIS_KEYS[axis];\n  if (isLocked(target, lockSkewingKey)) {\n    return false;\n  }\n\n  const { origin: counterOriginKey, flip: counterFlipKey } =\n      AXIS_KEYS[counterAxis],\n    counterOriginFactor =\n      resolveOrigin(transform[counterOriginKey]) *\n      (target[counterFlipKey] ? -1 : 1),\n    // if the counter origin is top/left (= -0.5) then we are skewing x/y values on the bottom/right side of target respectively.\n    // if the counter origin is bottom/right (= 0.5) then we are skewing x/y values on the top/left side of target respectively.\n    // skewing direction on the top/left side of target is OPPOSITE to the direction of the movement of the pointer,\n    // so we factor skewing direction by this value.\n    skewingSide = (-Math.sign(counterOriginFactor) *\n      (target[flipKey] ? -1 : 1)) as 1 | -1,\n    skewingDirection =\n      ((target[skewKey] === 0 &&\n        // in case skewing equals 0 we use the pointer offset from target center to determine the direction of skewing\n        getLocalPoint(transform, CENTER, CENTER, x, y)[axis] > 0) ||\n      // in case target has skewing we use that as the direction\n      target[skewKey] > 0\n        ? 1\n        : -1) * skewingSide,\n    // anchor to the opposite side of the skewing direction\n    // normalize value from [-1, 1] to origin value [0, 1]\n    origin = -skewingDirection * 0.5 + 0.5;\n\n  const finalHandler = wrapWithFireEvent<SkewTransform>(\n    'skewing',\n    wrapWithFixedAnchor((eventData, transform, x, y) =>\n      skewObject(axis, transform, new Point(x, y))\n    )\n  );\n\n  return finalHandler(\n    eventData,\n    {\n      ...transform,\n      [originKey]: origin,\n      skewingSide,\n    },\n    x,\n    y\n  );\n}\n\n/**\n * Wrapped Action handler for skewing on the X axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const skewHandlerX: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y\n) => {\n  return skewHandler('x', eventData, transform, x, y);\n};\n\n/**\n * Wrapped Action handler for skewing on the Y axis, takes care of the\n * skew direction and determines the correct transform origin for the anchor point\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const skewHandlerY: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y\n) => {\n  return skewHandler('y', eventData, transform, x, y);\n};\n","import type {\n  ControlCallback,\n  ControlCursorCallback,\n  TPointerEvent,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TAxisKey } from '../typedefs';\nimport { scaleCursorStyleHandler, scalingX, scalingY } from './scale';\nimport { skewCursorStyleHandler, skewHandlerX, skewHandlerY } from './skew';\n\nfunction isAltAction(eventData: TPointerEvent, target: FabricObject) {\n  return eventData[target.canvas!.altActionKey!];\n}\n\n/**\n * Inspect event, control and fabricObject to return the correct action name\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} an action name\n */\nexport const scaleOrSkewActionName: ControlCallback<\n  TAxisKey<'skew' | 'scale'> | ''\n> = (eventData, control, fabricObject) => {\n  const isAlternative = isAltAction(eventData, fabricObject);\n  if (control.x === 0) {\n    // then is scaleY or skewX\n    return isAlternative ? 'skewX' : 'scaleY';\n  }\n  if (control.y === 0) {\n    // then is scaleY or skewX\n    return isAlternative ? 'skewY' : 'scaleX';\n  }\n  return '';\n};\n\n/**\n * Combine skew and scale style handlers to cover fabric standard use case\n * @param {Event} eventData the javascript event that is causing the scale\n * @param {Control} control the control that is interested in the action\n * @param {FabricObject} fabricObject the fabric object that is interested in the action\n * @return {String} a valid css string for the cursor\n */\nexport const scaleSkewCursorStyleHandler: ControlCursorCallback = (\n  eventData,\n  control,\n  fabricObject\n) => {\n  return isAltAction(eventData, fabricObject)\n    ? skewCursorStyleHandler(eventData, control, fabricObject)\n    : scaleCursorStyleHandler(eventData, control, fabricObject);\n};\n/**\n * Composed action handler to either scale X or skew Y\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scalingXOrSkewingY: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y\n) => {\n  return isAltAction(eventData, transform.target)\n    ? skewHandlerY(eventData, transform, x, y)\n    : scalingX(eventData, transform, x, y);\n};\n\n/**\n * Composed action handler to either scale Y or skew X\n * Needs to be wrapped with `wrapWithFixedAnchor` to be effective\n * @param {Event} eventData javascript event that is doing the transform\n * @param {Object} transform javascript object containing a series of information around the current transform\n * @param {number} x current mouse x position, canvas normalized\n * @param {number} y current mouse y position, canvas normalized\n * @return {Boolean} true if some change happened\n */\nexport const scalingYOrSkewingX: TransformActionHandler = (\n  eventData,\n  transform,\n  x,\n  y\n) => {\n  return isAltAction(eventData, transform.target)\n    ? skewHandlerX(eventData, transform, x, y)\n    : scalingY(eventData, transform, x, y);\n};\n","import { changeWidth } from './changeWidth';\nimport { Control } from './Control';\nimport { rotationStyleHandler, rotationWithSnapping } from './rotate';\nimport { scaleCursorStyleHandler, scalingEqually } from './scale';\nimport {\n  scaleOrSkewActionName,\n  scaleSkewCursorStyleHandler,\n  scalingXOrSkewingY,\n  scalingYOrSkewingX,\n} from './scaleSkew';\n\n// use this function if you want to generate new controls for every instance\nexport const createObjectDefaultControls = () => ({\n  ml: new Control({\n    x: -0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mr: new Control({\n    x: 0.5,\n    y: 0,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingXOrSkewingY,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mb: new Control({\n    x: 0,\n    y: 0.5,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  mt: new Control({\n    x: 0,\n    y: -0.5,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionHandler: scalingYOrSkewingX,\n    getActionName: scaleOrSkewActionName,\n  }),\n\n  tl: new Control({\n    x: -0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  tr: new Control({\n    x: 0.5,\n    y: -0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  bl: new Control({\n    x: -0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  br: new Control({\n    x: 0.5,\n    y: 0.5,\n    cursorStyleHandler: scaleCursorStyleHandler,\n    actionHandler: scalingEqually,\n  }),\n\n  mtr: new Control({\n    x: 0,\n    y: -0.5,\n    actionHandler: rotationWithSnapping,\n    cursorStyleHandler: rotationStyleHandler,\n    offsetY: -40,\n    withConnection: true,\n    actionName: 'rotate',\n  }),\n});\n\nexport const createResizeControls = () => ({\n  mr: new Control({\n    x: 0.5,\n    y: 0,\n    actionHandler: changeWidth,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionName: 'resizing',\n  }),\n  ml: new Control({\n    x: -0.5,\n    y: 0,\n    actionHandler: changeWidth,\n    cursorStyleHandler: scaleSkewCursorStyleHandler,\n    actionName: 'resizing',\n  }),\n});\n\nexport const createTextboxDefaultControls = () => ({\n  ...createObjectDefaultControls(),\n  ...createResizeControls(),\n});\n","import { Point, ZERO } from '../../Point';\nimport type { TCornerPoint, TDegree } from '../../typedefs';\nimport { FabricObject } from './Object';\nimport { degreesToRadians } from '../../util/misc/radiansDegreesConversion';\nimport type { TQrDecomposeOut } from '../../util/misc/matrix';\nimport {\n  calcDimensionsMatrix,\n  createRotateMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from '../../util/misc/matrix';\nimport type { Control } from '../../controls/Control';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport type { ObjectEvents, TPointerEvent } from '../../EventTypeDefs';\nimport type { Canvas } from '../../canvas/Canvas';\nimport type { ControlRenderingStyleOverride } from '../../controls/controlRendering';\nimport type { FabricObjectProps } from './types/FabricObjectProps';\nimport type { TFabricObjectProps, SerializedObjectProps } from './types';\nimport { createObjectDefaultControls } from '../../controls/commonControls';\nimport { interactiveObjectDefaultValues } from './defaultValues';\n\nexport type TOCoord = Point & {\n  corner: TCornerPoint;\n  touchCorner: TCornerPoint;\n};\n\nexport type TControlSet = Record<string, Control>;\n\nexport type TBorderRenderingStyleOverride = Partial<\n  Pick<InteractiveFabricObject, 'borderColor' | 'borderDashArray'>\n>;\n\nexport type TStyleOverride = ControlRenderingStyleOverride &\n  TBorderRenderingStyleOverride &\n  Partial<\n    Pick<InteractiveFabricObject, 'hasBorders' | 'hasControls'> & {\n      forActiveSelection: boolean;\n    }\n  >;\n\nexport class InteractiveFabricObject<\n    Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements FabricObjectProps\n{\n  declare noScaleCache: boolean;\n\n  declare snapAngle?: TDegree;\n  declare snapThreshold?: TDegree;\n\n  declare lockMovementX: boolean;\n  declare lockMovementY: boolean;\n  declare lockRotation: boolean;\n  declare lockScalingX: boolean;\n  declare lockScalingY: boolean;\n  declare lockSkewingX: boolean;\n  declare lockSkewingY: boolean;\n  declare lockScalingFlip: boolean;\n\n  declare cornerSize: number;\n  declare touchCornerSize: number;\n  declare transparentCorners: boolean;\n  declare cornerColor: string;\n  declare cornerStrokeColor: string;\n  declare cornerStyle: 'rect' | 'circle';\n  declare cornerDashArray: number[] | null;\n  declare hasControls: boolean;\n\n  declare borderColor: string;\n  declare borderDashArray: number[] | null;\n  declare borderOpacityWhenMoving: number;\n  declare borderScaleFactor: number;\n  declare hasBorders: boolean;\n  declare selectionBackgroundColor: string;\n\n  declare selectable: boolean;\n  declare evented: boolean;\n  declare perPixelTargetFind: boolean;\n  declare activeOn: 'down' | 'up';\n\n  declare hoverCursor: CSSStyleDeclaration['cursor'] | null;\n  declare moveCursor: CSSStyleDeclaration['cursor'] | null;\n\n  /**\n   * The object's controls' position in viewport coordinates\n   * Calculated by {@link Control#positionHandler} and {@link Control#calcCornerCoords}, depending on {@link padding}.\n   * `corner/touchCorner` describe the 4 points forming the interactive area of the corner.\n   * Used to draw and locate controls.\n   */\n  declare oCoords: Record<string, TOCoord>;\n\n  /**\n   * keeps the value of the last hovered corner during mouse move.\n   * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n   * It should be private, but there is no harm in using it as\n   * a read-only property.\n   * this isn't cleaned automatically. Non selected objects may have wrong values\n   * @type [string]\n   */\n  declare __corner?: string;\n\n  /**\n   * a map of control visibility for this object.\n   * this was left when controls were introduced to not break the api too much\n   * this takes priority over the generic control visibility\n   */\n  declare _controlsVisibility: Record<string, boolean>;\n\n  /**\n   * holds the controls for the object.\n   * controls are added by default_controls.js\n   */\n  declare controls: TControlSet;\n\n  /**\n   * internal boolean to signal the code that the object is\n   * part of the move action.\n   */\n  declare isMoving?: boolean;\n\n  /**\n   * A boolean used from the gesture module to keep tracking of a scaling\n   * action when there is no scaling transform in place.\n   * This is an edge case and is used twice in all codebase.\n   * Probably added to keep track of some performance issues\n   * @TODO use git blame to investigate why it was added\n   * DON'T USE IT. WE WILL TRY TO REMOVE IT\n   */\n  declare _scaling?: boolean;\n\n  declare canvas?: Canvas;\n\n  static ownDefaults = interactiveObjectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      controls: createObjectDefaultControls(),\n      ...InteractiveFabricObject.ownDefaults,\n    };\n  }\n\n  /**\n   * Update width and height of the canvas for cache\n   * returns true or false if canvas needed resize.\n   * @private\n   * @return {Boolean} true if the canvas has been resized\n   */\n  _updateCacheCanvas() {\n    const targetCanvas = this.canvas;\n    if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n      const transform = targetCanvas._currentTransform,\n        target = transform.target,\n        action = transform.action;\n      if (\n        this === (target as unknown as this) &&\n        action &&\n        action.startsWith('scale')\n      ) {\n        return false;\n      }\n    }\n    return super._updateCacheCanvas();\n  }\n\n  getActiveControl() {\n    const key = this.__corner;\n    return key\n      ? {\n          key,\n          control: this.controls[key],\n          coord: this.oCoords[key],\n        }\n      : undefined;\n  }\n\n  /**\n   * Determines which corner is under the mouse cursor, represented by `pointer`.\n   * This function is return a corner only if the object is the active one.\n   * This is done to avoid selecting corner of non active object and activating transformations\n   * rather than drag action. The default behavior of fabricJS is that if you want to transform\n   * an object, first you select it to show the control set\n   * @private\n   * @param {Object} pointer The pointer indicating the mouse position\n   * @param {boolean} forTouch indicates if we are looking for interaction area with a touch action\n   * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or 0 if nothing is found.\n   */\n  _findTargetCorner(pointer: Point, forTouch = false): string {\n    if (!this.hasControls || !this.canvas) {\n      return '';\n    }\n\n    this.__corner = undefined;\n    const cornerEntries = Object.entries(this.oCoords);\n    for (let i = cornerEntries.length - 1; i >= 0; i--) {\n      const [key, corner] = cornerEntries[i];\n      if (\n        this.controls[key].shouldActivate(\n          key,\n          this,\n          pointer,\n          forTouch ? corner.touchCorner : corner.corner\n        )\n      ) {\n        // this.canvas.contextTop.fillRect(pointer.x - 1, pointer.y - 1, 2, 2);\n        return (this.__corner = key);\n      }\n    }\n\n    return '';\n  }\n\n  /**\n   * Calculates the coordinates of the center of each control plus the corners of the control itself\n   * This basically just delegates to each control positionHandler\n   * WARNING: changing what is passed to positionHandler is a breaking change, since position handler\n   * is a public api and should be done just if extremely necessary\n   * @return {Record<string, TOCoord>}\n   */\n  calcOCoords(): Record<string, TOCoord> {\n    const vpt = this.getViewportTransform(),\n      center = this.getCenterPoint(),\n      tMatrix = createTranslateMatrix(center.x, center.y),\n      rMatrix = createRotateMatrix({\n        angle: this.getTotalAngle() - (!!this.group && this.flipX ? 180 : 0),\n      }),\n      positionMatrix = multiplyTransformMatrices(tMatrix, rMatrix),\n      startMatrix = multiplyTransformMatrices(vpt, positionMatrix),\n      finalMatrix = multiplyTransformMatrices(startMatrix, [\n        1 / vpt[0],\n        0,\n        0,\n        1 / vpt[3],\n        0,\n        0,\n      ]),\n      transformOptions = this.group\n        ? qrDecompose(this.calcTransformMatrix())\n        : undefined,\n      dim = this._calculateCurrentDimensions(transformOptions),\n      coords: Record<string, TOCoord> = {};\n\n    this.forEachControl((control, key) => {\n      const position = control.positionHandler(dim, finalMatrix, this, control);\n      // coords[key] are sometimes used as points. Those are points to which we add\n      // the property corner and touchCorner from `_calcCornerCoords`.\n      // don't remove this assign for an object spread.\n      coords[key] = Object.assign(\n        position,\n        this._calcCornerCoords(control, position)\n      );\n    });\n\n    // debug code\n    /*\n      const canvas = this.canvas;\n      setTimeout(function () {\n      if (!canvas) return;\n        canvas.contextTop.clearRect(0, 0, 700, 700);\n        canvas.contextTop.fillStyle = 'green';\n        Object.keys(coords).forEach(function(key) {\n          const control = coords[key];\n          canvas.contextTop.fillRect(control.x, control.y, 3, 3);\n        });\n      } 50);\n    */\n    return coords;\n  }\n\n  /**\n   * Sets the coordinates that determine the interaction area of each control\n   * note: if we would switch to ROUND corner area, all of this would disappear.\n   * everything would resolve to a single point and a pythagorean theorem for the distance\n   * @todo evaluate simplification of code switching to circle interaction area at runtime\n   * @private\n   */\n  private _calcCornerCoords(control: Control, position: Point) {\n    const angle = this.getTotalAngle();\n    const corner = control.calcCornerCoords(\n      angle,\n      this.cornerSize,\n      position.x,\n      position.y,\n      false,\n      this\n    );\n    const touchCorner = control.calcCornerCoords(\n      angle,\n      this.touchCornerSize,\n      position.x,\n      position.y,\n      true,\n      this\n    );\n    return { corner, touchCorner };\n  }\n\n  /**\n   * @override set controls' coordinates as well\n   * See {@link https://github.com/fabricjs/fabric.js/wiki/When-to-call-setCoords} and {@link http://fabricjs.com/fabric-gotchas}\n   * @return {void}\n   */\n  setCoords(): void {\n    super.setCoords();\n    this.canvas && (this.oCoords = this.calcOCoords());\n  }\n\n  /**\n   * Calls a function for each control. The function gets called,\n   * with the control, the control's key and the object that is calling the iterator\n   * @param {Function} fn function to iterate over the controls over\n   */\n  forEachControl(\n    fn: (\n      control: Control,\n      key: string,\n      fabricObject: InteractiveFabricObject\n    ) => any\n  ) {\n    for (const i in this.controls) {\n      fn(this.controls[i], i, this);\n    }\n  }\n\n  /**\n   * Draws a colored layer behind the object, inside its selection borders.\n   * Requires public options: padding, selectionBackgroundColor\n   * this function is called when the context is transformed\n   * has checks to be skipped when the object is on a staticCanvas\n   * @todo evaluate if make this disappear in favor of a pre-render hook for objects\n   * this was added by Andrea Bogazzi to make possible some feature for work reasons\n   * it seemed a good option, now is an edge case\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   */\n  drawSelectionBackground(ctx: CanvasRenderingContext2D): void {\n    if (\n      !this.selectionBackgroundColor ||\n      (this.canvas && (this.canvas._activeObject as unknown as this) !== this)\n    ) {\n      return;\n    }\n    ctx.save();\n    const center = this.getRelativeCenterPoint(),\n      wh = this._calculateCurrentDimensions(),\n      vpt = this.getViewportTransform();\n    ctx.translate(center.x, center.y);\n    ctx.scale(1 / vpt[0], 1 / vpt[3]);\n    ctx.rotate(degreesToRadians(this.angle));\n    ctx.fillStyle = this.selectionBackgroundColor;\n    ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n    ctx.restore();\n  }\n\n  /**\n   * @public override this function in order to customize the drawing of the control box, e.g. rounded corners, different border style.\n   * @param {CanvasRenderingContext2D} ctx ctx is rotated and translated so that (0,0) is at object's center\n   * @param {Point} size the control box size used\n   */\n  strokeBorders(ctx: CanvasRenderingContext2D, size: Point): void {\n    ctx.strokeRect(-size.x / 2, -size.y / 2, size.x, size.y);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {Point} size\n   * @param {TStyleOverride} styleOverride object to override the object style\n   */\n  _drawBorders(\n    ctx: CanvasRenderingContext2D,\n    size: Point,\n    styleOverride: TStyleOverride = {}\n  ): void {\n    const options = {\n      hasControls: this.hasControls,\n      borderColor: this.borderColor,\n      borderDashArray: this.borderDashArray,\n      ...styleOverride,\n    };\n    ctx.save();\n    ctx.strokeStyle = options.borderColor;\n    this._setLineDash(ctx, options.borderDashArray);\n    this.strokeBorders(ctx, size);\n    options.hasControls && this.drawControlsConnectingLines(ctx, size);\n    ctx.restore();\n  }\n\n  /**\n   * Renders controls and borders for the object\n   * the context here is not transformed\n   * @todo move to interactivity\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {TStyleOverride} [styleOverride] properties to override the object style\n   */\n  _renderControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride: TStyleOverride = {}\n  ) {\n    const { hasBorders, hasControls } = this;\n    const styleOptions = {\n      hasBorders,\n      hasControls,\n      ...styleOverride,\n    };\n    const vpt = this.getViewportTransform(),\n      shouldDrawBorders = styleOptions.hasBorders,\n      shouldDrawControls = styleOptions.hasControls;\n    const matrix = multiplyTransformMatrices(vpt, this.calcTransformMatrix());\n    const options = qrDecompose(matrix);\n    ctx.save();\n    ctx.translate(options.translateX, options.translateY);\n    ctx.lineWidth = 1 * this.borderScaleFactor;\n    // since interactive groups have been introduced, an object could be inside a group and needing controls\n    // the following equality check `this.group === this.parent` covers:\n    // object without a group ( undefined === undefined )\n    // object inside a group\n    // excludes object inside a group but multi selected since group and parent will differ in value\n    if (this.group === this.parent) {\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n    }\n    if (this.flipX) {\n      options.angle -= 180;\n    }\n    ctx.rotate(degreesToRadians(this.group ? options.angle : this.angle));\n    shouldDrawBorders && this.drawBorders(ctx, options, styleOverride);\n    shouldDrawControls && this.drawControls(ctx, styleOverride);\n    ctx.restore();\n  }\n\n  /**\n   * Draws borders of an object's bounding box.\n   * Requires public properties: width, height\n   * Requires public options: padding, borderColor\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {object} options object representing current object parameters\n   * @param {TStyleOverride} [styleOverride] object to override the object style\n   */\n  drawBorders(\n    ctx: CanvasRenderingContext2D,\n    options: TQrDecomposeOut,\n    styleOverride: TStyleOverride\n  ): void {\n    let size;\n    if ((styleOverride && styleOverride.forActiveSelection) || this.group) {\n      const bbox = sizeAfterTransform(\n          this.width,\n          this.height,\n          calcDimensionsMatrix(options)\n        ),\n        stroke = !this.isStrokeAccountedForInDimensions()\n          ? (this.strokeUniform\n              ? new Point().scalarAdd(this.canvas ? this.canvas.getZoom() : 1)\n              : // this is extremely confusing. options comes from the upper function\n                // and is the qrDecompose of a matrix that takes in account zoom too\n                new Point(options.scaleX, options.scaleY)\n            ).scalarMultiply(this.strokeWidth)\n          : ZERO;\n      size = bbox\n        .add(stroke)\n        .scalarAdd(this.borderScaleFactor)\n        .scalarAdd(this.padding * 2);\n    } else {\n      size = this._calculateCurrentDimensions().scalarAdd(\n        this.borderScaleFactor\n      );\n    }\n    this._drawBorders(ctx, size, styleOverride);\n  }\n\n  /**\n   * Draws lines from a borders of an object's bounding box to controls that have `withConnection` property set.\n   * Requires public properties: width, height\n   * Requires public options: padding, borderColor\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {Point} size object size x = width, y = height\n   */\n  drawControlsConnectingLines(\n    ctx: CanvasRenderingContext2D,\n    size: Point\n  ): void {\n    let shouldStroke = false;\n\n    ctx.beginPath();\n    this.forEachControl((control, key) => {\n      // in this moment, the ctx is centered on the object.\n      // width and height of the above function are the size of the bbox.\n      if (control.withConnection && control.getVisibility(this, key)) {\n        // reset movement for each control\n        shouldStroke = true;\n        ctx.moveTo(control.x * size.x, control.y * size.y);\n        ctx.lineTo(\n          control.x * size.x + control.offsetX,\n          control.y * size.y + control.offsetY\n        );\n      }\n    });\n    shouldStroke && ctx.stroke();\n  }\n\n  /**\n   * Draws corners of an object's bounding box.\n   * Requires public properties: width, height\n   * Requires public options: cornerSize, padding\n   * @param {CanvasRenderingContext2D} ctx Context to draw on\n   * @param {ControlRenderingStyleOverride} styleOverride object to override the object style\n   */\n  drawControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride: ControlRenderingStyleOverride = {}\n  ) {\n    ctx.save();\n    const retinaScaling = this.getCanvasRetinaScaling();\n    const { cornerStrokeColor, cornerDashArray, cornerColor } = this;\n    const options = {\n      cornerStrokeColor,\n      cornerDashArray,\n      cornerColor,\n      ...styleOverride,\n    };\n    ctx.setTransform(retinaScaling, 0, 0, retinaScaling, 0, 0);\n    ctx.strokeStyle = ctx.fillStyle = options.cornerColor;\n    if (!this.transparentCorners) {\n      ctx.strokeStyle = options.cornerStrokeColor;\n    }\n    this._setLineDash(ctx, options.cornerDashArray);\n    this.setCoords();\n    this.forEachControl((control, key) => {\n      if (control.getVisibility(this, key)) {\n        const p = this.oCoords[key];\n        control.render(ctx, p.x, p.y, options, this);\n      }\n    });\n    ctx.restore();\n  }\n\n  /**\n   * Returns true if the specified control is visible, false otherwise.\n   * @param {string} controlKey The key of the control. Possible values are usually 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr',\n   * but since the control api allow for any control name, can be any string.\n   * @returns {boolean} true if the specified control is visible, false otherwise\n   */\n  isControlVisible(controlKey: string): boolean {\n    return (\n      this.controls[controlKey] &&\n      this.controls[controlKey].getVisibility(this, controlKey)\n    );\n  }\n\n  /**\n   * Sets the visibility of the specified control.\n   * please do not use.\n   * @param {String} controlKey The key of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n   * but since the control api allow for any control name, can be any string.\n   * @param {Boolean} visible true to set the specified control visible, false otherwise\n   * @todo discuss this overlap of priority here with the team. Andrea Bogazzi for details\n   */\n  setControlVisible(controlKey: string, visible: boolean) {\n    if (!this._controlsVisibility) {\n      this._controlsVisibility = {};\n    }\n    this._controlsVisibility[controlKey] = visible;\n  }\n\n  /**\n   * Sets the visibility state of object controls, this is just a bulk option for setControlVisible;\n   * @param {Record<string, boolean>} [options] with an optional key per control\n   * example: {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n   */\n  setControlsVisibility(options: Record<string, boolean> = {}) {\n    Object.entries(options).forEach(([controlKey, visibility]) =>\n      this.setControlVisible(controlKey, visibility)\n    );\n  }\n\n  /**\n   * Clears the canvas.contextTop in a specific area that corresponds to the object's bounding box\n   * that is in the canvas.contextContainer.\n   * This function is used to clear pieces of contextTop where we render ephemeral effects on top of the object.\n   * Example: blinking cursor text selection, drag effects.\n   * @todo discuss swapping restoreManually with a renderCallback, but think of async issues\n   * @param {Boolean} [restoreManually] When true won't restore the context after clear, in order to draw something else.\n   * @return {CanvasRenderingContext2D|undefined} canvas.contextTop that is either still transformed\n   * with the object transformMatrix, or restored to neutral transform\n   */\n  clearContextTop(\n    restoreManually?: boolean\n  ): CanvasRenderingContext2D | undefined {\n    if (!this.canvas) {\n      return;\n    }\n    const ctx = this.canvas.contextTop;\n    if (!ctx) {\n      return;\n    }\n    const v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n    this.transform(ctx);\n    // we add 4 pixel, to be sure to do not leave any pixel out\n    const width = this.width + 4,\n      height = this.height + 4;\n    ctx.clearRect(-width / 2, -height / 2, width, height);\n\n    restoreManually || ctx.restore();\n    return ctx;\n  }\n\n  /**\n   * This callback function is called every time _discardActiveObject or _setActiveObject\n   * try to to deselect this object. If the function returns true, the process is cancelled\n   * @param {Object} [options] options sent from the upper functions\n   * @param {TPointerEvent} [options.e] event if the process is generated by an event\n   * @param {FabricObject} [options.object] next object we are setting as active, and reason why\n   * this is being deselected\n   */\n  onDeselect(options?: {\n    e?: TPointerEvent;\n    object?: InteractiveFabricObject;\n  }): boolean {\n    // implemented by sub-classes, as needed.\n    return false;\n  }\n\n  /**\n   * This callback function is called every time _discardActiveObject or _setActiveObject\n   * try to to select this object. If the function returns true, the process is cancelled\n   * @param {Object} [options] options sent from the upper functions\n   * @param {Event} [options.e] event if the process is generated by an event\n   */\n  onSelect(options?: { e?: TPointerEvent }): boolean {\n    // implemented by sub-classes, as needed.\n    return false;\n  }\n\n  /**\n   * Override to customize Drag behavior\n   * Fired from {@link Canvas#_onMouseMove}\n   * @returns true in order for the window to start a drag session\n   */\n  shouldStartDragging() {\n    return false;\n  }\n\n  /**\n   * Override to customize Drag behavior\\\n   * Fired once a drag session has started\n   * @returns true to handle the drag event\n   */\n  onDragStart(e: DragEvent) {\n    return false;\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * @public\n   * @param {DragEvent} e\n   * @returns {boolean} true if the object currently dragged can be dropped on the target\n   */\n  canDrop(e: DragEvent): boolean {\n    return false;\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * render a specific effect when an object is the source of a drag event\n   * example: render the selection status for the part of text that is being dragged from a text object\n   * @public\n   * @param {DragEvent} e\n   */\n  renderDragSourceEffect(e: DragEvent) {\n    // for subclasses\n  }\n\n  /**\n   * Override to customize drag and drop behavior\n   * render a specific effect when an object is the target of a drag event\n   * used to show that the underly object can receive a drop, or to show how the\n   * object will change when dropping. example: show the cursor where the text is about to be dropped\n   * @public\n   * @param {DragEvent} e\n   */\n  renderDropTargetEffect(e: DragEvent) {\n    // for subclasses\n  }\n}\n","import type { Constructor } from '../typedefs';\n\n/***\n * https://www.typescriptlang.org/docs/handbook/mixins.html#alternative-pattern\n */\nexport function applyMixins<T extends Constructor, S extends Constructor>(\n  derivedCtor: T,\n  constructors: S[]\n) {\n  constructors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      name !== 'constructor' &&\n        Object.defineProperty(\n          derivedCtor.prototype,\n          name,\n          Object.getOwnPropertyDescriptor(baseCtor.prototype, name) ||\n            Object.create(null)\n        );\n    });\n  });\n  return derivedCtor as T & { prototype: InstanceType<T & S> };\n}\n","import type { ObjectEvents } from '../../EventTypeDefs';\nimport { FabricObjectSVGExportMixin } from './FabricObjectSVGExportMixin';\nimport { InteractiveFabricObject } from './InteractiveObject';\nimport { applyMixins } from '../../util/applyMixins';\nimport type { FabricObjectProps } from './types/FabricObjectProps';\nimport type { TFabricObjectProps, SerializedObjectProps } from './types';\nimport { classRegistry } from '../../ClassRegistry';\n\n// TODO somehow we have to make a tree-shakeable import\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface, @typescript-eslint/no-unused-vars\nexport interface FabricObject<\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  EventSpec extends ObjectEvents = ObjectEvents\n> extends FabricObjectSVGExportMixin {}\n\nexport class FabricObject<\n  Props extends TFabricObjectProps = Partial<FabricObjectProps>,\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  EventSpec extends ObjectEvents = ObjectEvents\n> extends InteractiveFabricObject<Props, SProps, EventSpec> {}\n\napplyMixins(FabricObject, [FabricObjectSVGExportMixin]);\n\nclassRegistry.setClass(FabricObject);\nclassRegistry.setClass(FabricObject, 'object');\n\nexport { cacheProperties } from './defaultValues';\n","/**\n * Returns true if context has transparent pixel\n * at specified location (taking tolerance into account)\n * @param {CanvasRenderingContext2D} ctx context\n * @param {Number} x x coordinate in canvasElementCoordinate, not fabric space. integer\n * @param {Number} y y coordinate in canvasElementCoordinate, not fabric space. integer\n * @param {Number} tolerance Tolerance pixels around the point, not alpha tolerance, integer\n * @return {boolean} true if transparent\n */\nexport const isTransparent = (\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  tolerance: number\n): boolean => {\n  tolerance = Math.round(tolerance);\n  const size = tolerance * 2 + 1;\n  const { data } = ctx.getImageData(x - tolerance, y - tolerance, size, size);\n\n  // Split image data - for tolerance > 1, pixelDataSize = 4;\n  for (let i = 3; i < data.length; i += 4) {\n    const alphaChannel = data[i];\n    if (alphaChannel > 0) {\n      return false;\n    }\n  }\n  return true;\n};\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { degreesToRadians } from '../radiansDegreesConversion';\nimport { createVector } from '../vectors';\nimport type { TProjectStrokeOnPointsOptions, TProjection } from './types';\n\n/**\n * @see https://github.com/fabricjs/fabric.js/pull/8344\n * @todo consider removing skewing from points before calculating stroke projection,\n * see https://github.com/fabricjs/fabric.js/commit/494a10ee2f8c2278ae9a55b20bf50cf6ee25b064#commitcomment-94751537\n */\nexport abstract class StrokeProjectionsBase {\n  declare options: TProjectStrokeOnPointsOptions;\n  declare scale: Point;\n  declare strokeUniformScalar: Point;\n  declare strokeProjectionMagnitude: number;\n\n  constructor(options: TProjectStrokeOnPointsOptions) {\n    this.options = options;\n    this.strokeProjectionMagnitude = this.options.strokeWidth / 2;\n    this.scale = new Point(this.options.scaleX, this.options.scaleY);\n    this.strokeUniformScalar = this.options.strokeUniform\n      ? new Point(1 / this.options.scaleX, 1 / this.options.scaleY)\n      : new Point(1, 1);\n  }\n\n  /**\n   * When the stroke is uniform, scaling affects the arrangement of points. So we must take it into account.\n   */\n  protected createSideVector(from: XY, to: XY) {\n    const v = createVector(from, to);\n    return this.options.strokeUniform ? v.multiply(this.scale) : v;\n  }\n\n  protected abstract calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude?: number\n  ): Point;\n\n  protected projectOrthogonally(from: Point, to: Point, magnitude?: number) {\n    return this.applySkew(\n      from.add(this.calcOrthogonalProjection(from, to, magnitude))\n    );\n  }\n\n  protected isSkewed() {\n    return this.options.skewX !== 0 || this.options.skewY !== 0;\n  }\n\n  protected applySkew(point: Point) {\n    const p = new Point(point);\n    // skewY must be applied before skewX as this distortion affects skewX calculation\n    p.y += p.x * Math.tan(degreesToRadians(this.options.skewY));\n    p.x += p.y * Math.tan(degreesToRadians(this.options.skewX));\n    return p;\n  }\n\n  protected scaleUnitVector(unitVector: Point, scalar: number) {\n    return unitVector.multiply(this.strokeUniformScalar).scalarMultiply(scalar);\n  }\n\n  protected abstract projectPoints(): Point[];\n\n  public abstract project(): TProjection[];\n}\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { halfPI, twoMathPi } from '../../../constants';\nimport type { TRadian } from '../../../typedefs';\nimport { degreesToRadians } from '../radiansDegreesConversion';\nimport {\n  calcAngleBetweenVectors,\n  calcVectorRotation,\n  crossProduct,\n  getOrthonormalVector,\n  getUnitVector,\n  isBetweenVectors,\n  magnitude,\n  rotateVector,\n} from '../vectors';\nimport { StrokeProjectionsBase } from './StrokeProjectionsBase';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\nconst zeroVector = new Point();\n\n/**\n * class in charge of finding projections for each type of line join\n * @see {@link [Closed path projections at #8344](https://github.com/fabricjs/fabric.js/pull/8344#2-closed-path)}\n *\n * - MDN:\n *   - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineJoin\n *   - https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linejoin\n * - Spec: https://svgwg.org/svg2-draft/painting.html#StrokeLinejoinProperty\n * - Playground to understand how the line joins works: https://hypertolosana.github.io/efficient-webgl-stroking/index.html\n * - View the calculated projections for each of the control points: https://codesandbox.io/s/project-stroke-points-with-context-to-trace-b8jc4j?file=/src/index.js\n *\n */\nexport class StrokeLineJoinProjections extends StrokeProjectionsBase {\n  /**\n   * The point being projected (the angle ∠BAC)\n   */\n  declare A: Point;\n  /**\n   * The point before A\n   */\n  declare B: Point;\n  /**\n   * The point after A\n   */\n  declare C: Point;\n  /**\n   * The AB vector\n   */\n  AB: Point;\n  /**\n   * The AC vector\n   */\n  AC: Point;\n  /**\n   * The angle of A (∠BAC)\n   */\n  alpha: TRadian;\n  /**\n   * The bisector of A (∠BAC)\n   */\n  bisector: Point;\n\n  static getOrthogonalRotationFactor(vector1: Point, vector2?: Point) {\n    const angle = vector2\n      ? calcAngleBetweenVectors(vector1, vector2)\n      : calcVectorRotation(vector1);\n    return Math.abs(angle) < halfPI ? -1 : 1;\n  }\n\n  constructor(A: XY, B: XY, C: XY, options: TProjectStrokeOnPointsOptions) {\n    super(options);\n    this.A = new Point(A);\n    this.B = new Point(B);\n    this.C = new Point(C);\n    this.AB = this.createSideVector(this.A, this.B);\n    this.AC = this.createSideVector(this.A, this.C);\n    this.alpha = calcAngleBetweenVectors(this.AB, this.AC);\n    this.bisector = getUnitVector(\n      // if AC is also the zero vector nothing will be projected\n      // in that case the next point will handle the projection\n      rotateVector(this.AB.eq(zeroVector) ? this.AC : this.AB, this.alpha / 2)\n    );\n  }\n\n  calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude: number = this.strokeProjectionMagnitude\n  ) {\n    const vector = this.createSideVector(from, to);\n    const orthogonalProjection = getOrthonormalVector(vector);\n    const correctSide = StrokeLineJoinProjections.getOrthogonalRotationFactor(\n      orthogonalProjection,\n      this.bisector\n    );\n    return this.scaleUnitVector(orthogonalProjection, magnitude * correctSide);\n  }\n\n  /**\n   * BEVEL\n   * Calculation: the projection points are formed by the vector orthogonal to the vertex.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-2-bevel\n   */\n  projectBevel() {\n    const projections: Point[] = [];\n    // if `alpha` equals 0 or 2*PI, the projections are the same for `B` and `C`\n    (this.alpha % twoMathPi === 0 ? [this.B] : [this.B, this.C]).forEach(\n      (to) => {\n        projections.push(this.projectOrthogonally(this.A, to));\n        projections.push(\n          this.projectOrthogonally(this.A, to, -this.strokeProjectionMagnitude)\n        );\n      }\n    );\n    return projections;\n  }\n\n  /**\n   * MITER\n   * Calculation: the corner is formed by extending the outer edges of the stroke\n   * at the tangents of the path segments until they intersect.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-1-miter\n   */\n  projectMiter() {\n    const projections: Point[] = [],\n      alpha = Math.abs(this.alpha),\n      hypotUnitScalar = 1 / Math.sin(alpha / 2),\n      miterVector = this.scaleUnitVector(\n        this.bisector,\n        -this.strokeProjectionMagnitude * hypotUnitScalar\n      );\n\n    // When two line segments meet at a sharp angle, it is possible for the join to extend,\n    // far beyond the thickness of the line stroking the path. The stroke-miterlimit imposes\n    // a limit on the extent of the line join.\n    // MDN: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-miterlimit\n    // When the stroke is uniform, scaling changes the arrangement of points, this changes the miter-limit\n    const strokeMiterLimit = this.options.strokeUniform\n      ? magnitude(\n          this.scaleUnitVector(this.bisector, this.options.strokeMiterLimit)\n        )\n      : this.options.strokeMiterLimit;\n\n    if (\n      magnitude(miterVector) / this.strokeProjectionMagnitude <=\n      strokeMiterLimit\n    ) {\n      projections.push(this.applySkew(this.A.add(miterVector)));\n    }\n    /* when the miter-limit is reached, the stroke line join becomes of type bevel.\n      We always need two orthogonal projections which are basically bevel-type projections,\n      so regardless of whether the miter-limit was reached or not, we include these projections.\n    */\n    projections.push(...this.projectBevel());\n\n    return projections;\n  }\n\n  /**\n   * ROUND (without skew)\n   * Calculation: the projections are the two vectors parallel to X and Y axes\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-3-1-round-without-skew\n   */\n  private projectRoundNoSkew(startCircle: Point, endCircle: Point) {\n    const projections: Point[] = [],\n      // correctSide is used to only consider projecting for the outer side\n      correctSide = new Point(\n        StrokeLineJoinProjections.getOrthogonalRotationFactor(this.bisector),\n        StrokeLineJoinProjections.getOrthogonalRotationFactor(\n          new Point(this.bisector.y, this.bisector.x)\n        )\n      ),\n      radiusOnAxisX = new Point(1, 0)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar)\n        .multiply(correctSide),\n      radiusOnAxisY = new Point(0, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar)\n        .multiply(correctSide);\n\n    [radiusOnAxisX, radiusOnAxisY].forEach((vector) => {\n      if (isBetweenVectors(vector, startCircle, endCircle)) {\n        projections.push(this.A.add(vector));\n      }\n    });\n    return projections;\n  }\n\n  /**\n   * ROUND (with skew)\n   * Calculation: the projections are the points furthest from the vertex in\n   * the direction of the X and Y axes after distortion.\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#2-3-2-round-skew\n   */\n  private projectRoundWithSkew(startCircle: Point, endCircle: Point) {\n    const projections: Point[] = [];\n\n    const { skewX, skewY, scaleX, scaleY, strokeUniform } = this.options,\n      shearing = new Point(\n        Math.tan(degreesToRadians(skewX)),\n        Math.tan(degreesToRadians(skewY))\n      );\n    // The points furthest from the vertex in the direction of the X and Y axes after distortion\n    const circleRadius = this.strokeProjectionMagnitude,\n      newY = strokeUniform\n        ? circleRadius /\n          scaleY /\n          Math.sqrt(1 / scaleY ** 2 + (1 / scaleX ** 2) * shearing.y ** 2)\n        : circleRadius / Math.sqrt(1 + shearing.y ** 2),\n      furthestY = new Point(\n        // Safe guard due to floating point precision. In some situations the square root\n        // was returning NaN because of a negative number close to zero.\n        Math.sqrt(Math.max(circleRadius ** 2 - newY ** 2, 0)),\n        newY\n      ),\n      newX = strokeUniform\n        ? circleRadius /\n          Math.sqrt(\n            1 +\n              (shearing.x ** 2 * (1 / scaleY) ** 2) /\n                (1 / scaleX + (1 / scaleX) * shearing.x * shearing.y) ** 2\n          )\n        : circleRadius /\n          Math.sqrt(1 + shearing.x ** 2 / (1 + shearing.x * shearing.y) ** 2),\n      furthestX = new Point(\n        newX,\n        Math.sqrt(Math.max(circleRadius ** 2 - newX ** 2, 0))\n      );\n\n    [\n      furthestX,\n      furthestX.scalarMultiply(-1),\n      furthestY,\n      furthestY.scalarMultiply(-1),\n    ]\n      // We need to skew the vector here as this information is used to check if\n      // it is between the start and end of the circle segment\n      .map((vector) =>\n        this.applySkew(\n          strokeUniform ? vector.multiply(this.strokeUniformScalar) : vector\n        )\n      )\n      .forEach((vector) => {\n        if (isBetweenVectors(vector, startCircle, endCircle)) {\n          projections.push(this.applySkew(this.A).add(vector));\n        }\n      });\n\n    return projections;\n  }\n\n  projectRound() {\n    const projections: Point[] = [];\n    /* Include the start and end points of the circle segment, so that only\n      the projections contained within it are included */\n    // add the orthogonal projections (start and end points of circle segment)\n    projections.push(...this.projectBevel());\n    // let's determines which one of the orthogonal projection is the beginning and end of the circle segment.\n    // when `alpha` equals 0 or 2*PI, we have a straight line, so the way to find the start/end is different.\n    const isStraightLine = this.alpha % twoMathPi === 0,\n      // change the origin of the projections to point A\n      // so that the cross product calculation is correct\n      newOrigin = this.applySkew(this.A),\n      proj0 = projections[isStraightLine ? 0 : 2].subtract(newOrigin),\n      proj1 = projections[isStraightLine ? 1 : 0].subtract(newOrigin),\n      // when `isStraightLine` === true, we compare with the vector opposite AB, otherwise we compare with the bisector.\n      comparisonVector = isStraightLine\n        ? this.applySkew(this.AB.scalarMultiply(-1))\n        : this.applySkew(\n            this.bisector.multiply(this.strokeUniformScalar).scalarMultiply(-1)\n          ),\n      // the beginning of the circle segment is always to the right of the comparison vector (cross product > 0)\n      isProj0Start = crossProduct(proj0, comparisonVector) > 0,\n      startCircle = isProj0Start ? proj0 : proj1,\n      endCircle = isProj0Start ? proj1 : proj0;\n    if (!this.isSkewed()) {\n      projections.push(...this.projectRoundNoSkew(startCircle, endCircle));\n    } else {\n      projections.push(...this.projectRoundWithSkew(startCircle, endCircle));\n    }\n    return projections;\n  }\n\n  /**\n   * Project stroke width on points returning projections for each point as follows:\n   * - `miter`: 1 point corresponding to the outer boundary. If the miter limit is exceeded, it will be 2 points (becomes bevel)\n   * - `bevel`: 2 points corresponding to the bevel possible boundaries, orthogonal to the stroke.\n   * - `round`: same as `bevel` when it has no skew, with skew are 4 points.\n   */\n  protected projectPoints() {\n    switch (this.options.strokeLineJoin) {\n      case 'miter':\n        return this.projectMiter();\n      case 'round':\n        return this.projectRound();\n      default:\n        return this.projectBevel();\n    }\n  }\n\n  public project(): TProjection[] {\n    return this.projectPoints().map((point) => ({\n      originPoint: this.A,\n      projectedPoint: point,\n      angle: this.alpha,\n      bisector: this.bisector,\n    }));\n  }\n}\n","import type { XY } from '../../../Point';\nimport { Point } from '../../../Point';\nimport { getOrthonormalVector, getUnitVector } from '../vectors';\nimport { StrokeLineJoinProjections } from './StrokeLineJoinProjections';\nimport { StrokeProjectionsBase } from './StrokeProjectionsBase';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\n/**\n * class in charge of finding projections for each type of line cap for start/end of an open path\n * @see {@link [Open path projections at #8344](https://github.com/fabricjs/fabric.js/pull/8344#1-open-path)}\n *\n * Reference:\n * - MDN:\n *   - https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/lineCap\n *   - https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-linecap\n * - Spec: https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-linecap-dev\n * - Playground to understand how the line joins works: https://hypertolosana.github.io/efficient-webgl-stroking/index.html\n * - View the calculated projections for each of the control points: https://codesandbox.io/s/project-stroke-points-with-context-to-trace-b8jc4j?file=/src/index.js\n */\nexport class StrokeLineCapProjections extends StrokeProjectionsBase {\n  /**\n   * edge point\n   */\n  declare A: Point;\n  /**\n   * point next to edge point\n   */\n  declare T: Point;\n\n  constructor(A: XY, T: XY, options: TProjectStrokeOnPointsOptions) {\n    super(options);\n    this.A = new Point(A);\n    this.T = new Point(T);\n  }\n\n  calcOrthogonalProjection(\n    from: Point,\n    to: Point,\n    magnitude: number = this.strokeProjectionMagnitude\n  ) {\n    const vector = this.createSideVector(from, to);\n    return this.scaleUnitVector(getOrthonormalVector(vector), magnitude);\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Butt\n   * Calculation: to find the projections, just find the points orthogonal to the stroke\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-1-butt\n   */\n  projectButt() {\n    return [\n      this.projectOrthogonally(this.A, this.T, this.strokeProjectionMagnitude),\n      this.projectOrthogonally(this.A, this.T, -this.strokeProjectionMagnitude),\n    ];\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Round\n   * Calculation: same as stroke line join `round`\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-2-round\n   */\n  projectRound() {\n    const projections: Point[] = [];\n\n    if (!this.isSkewed() && this.A.eq(this.T)) {\n      /* 1 point case without `skew`\n        When `strokeUniform` is true, scaling has no effect.\n        So we divide by scale, to remove its effect.\n      */\n      const projection = new Point(1, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar);\n      projections.push(\n        this.applySkew(this.A.add(projection)),\n        this.applySkew(this.A.subtract(projection))\n      );\n    } else {\n      projections.push(\n        ...new StrokeLineJoinProjections(\n          this.A,\n          this.T,\n          this.T,\n          this.options\n        ).projectRound()\n      );\n    }\n\n    return projections;\n  }\n\n  /**\n   * OPEN PATH START/END - Line cap: Square\n   * Calculation: project a rectangle of points on the stroke in the opposite direction of the vector `AT`\n   *\n   * @see https://github.com/fabricjs/fabric.js/pull/8344#1-3-square\n   */\n  projectSquare() {\n    const projections: Point[] = [];\n\n    if (this.A.eq(this.T)) {\n      /* 1 point case without `skew`\n        When `strokeUniform` is true, scaling has no effect.\n        So we divide by scale, to remove its effect.\n      */\n      const projection = new Point(1, 1)\n        .scalarMultiply(this.strokeProjectionMagnitude)\n        .multiply(this.strokeUniformScalar);\n      projections.push(this.A.add(projection), this.A.subtract(projection));\n    } else {\n      const orthogonalProjection = this.calcOrthogonalProjection(\n        this.A,\n        this.T,\n        this.strokeProjectionMagnitude\n      );\n      const strokePointingOut = this.scaleUnitVector(\n        getUnitVector(this.createSideVector(this.A, this.T)),\n        -this.strokeProjectionMagnitude\n      );\n      const projectedA = this.A.add(strokePointingOut);\n      projections.push(\n        projectedA.add(orthogonalProjection),\n        projectedA.subtract(orthogonalProjection)\n      );\n    }\n\n    return projections.map((p) => this.applySkew(p));\n  }\n\n  protected projectPoints() {\n    switch (this.options.strokeLineCap) {\n      case 'round':\n        return this.projectRound();\n      case 'square':\n        return this.projectSquare();\n      default:\n        return this.projectButt();\n    }\n  }\n\n  public project(): TProjection[] {\n    return this.projectPoints().map((point) => ({\n      originPoint: this.A,\n      projectedPoint: point,\n    }));\n  }\n}\n","import { Point, type XY } from '../../../Point';\nimport { findIndexRight } from '../../internals';\nimport { StrokeLineCapProjections } from './StrokeLineCapProjections';\nimport { StrokeLineJoinProjections } from './StrokeLineJoinProjections';\nimport type { TProjection, TProjectStrokeOnPointsOptions } from './types';\n\nexport * from './types';\n\n/**\n *\n * Used to calculate object's bounding box\n *\n * @see https://github.com/fabricjs/fabric.js/pull/8344\n *\n */\nexport const projectStrokeOnPoints = (\n  points: XY[],\n  options: TProjectStrokeOnPointsOptions,\n  openPath = false\n): TProjection[] => {\n  const projections: TProjection[] = [];\n\n  if (points.length === 0) {\n    return projections;\n  }\n\n  // first we remove duplicate neighboring points\n  const reduced = points.reduce(\n    (reduced, point) => {\n      if (!reduced[reduced.length - 1].eq(point)) {\n        reduced.push(new Point(point));\n      }\n      return reduced;\n    },\n    [new Point(points[0])]\n  );\n\n  if (reduced.length === 1) {\n    openPath = true;\n  } else if (!openPath) {\n    // remove points from end in case they equal the first point\n    // in order to correctly project the first point\n    const start = reduced[0];\n    const index = findIndexRight(reduced, (point) => !point.eq(start));\n    reduced.splice(index + 1);\n  }\n\n  reduced.forEach((A, index, points) => {\n    let B: XY, C: XY;\n    if (index === 0) {\n      C = points[1];\n      B = openPath ? A : points[points.length - 1];\n    } else if (index === points.length - 1) {\n      B = points[index - 1];\n      C = openPath ? A : points[0];\n    } else {\n      B = points[index - 1];\n      C = points[index + 1];\n    }\n\n    if (openPath && points.length === 1) {\n      projections.push(\n        ...new StrokeLineCapProjections(A, A, options).project()\n      );\n    } else if (openPath && (index === 0 || index === points.length - 1)) {\n      projections.push(\n        ...new StrokeLineCapProjections(\n          A,\n          index === 0 ? C : B,\n          options\n        ).project()\n      );\n    } else {\n      projections.push(\n        ...new StrokeLineJoinProjections(A, B, C, options).project()\n      );\n    }\n  });\n\n  return projections;\n};\n","/**\n * Capitalizes a string\n * @param {String} string String to capitalize\n * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n * and other letters stay untouched, if false first letter is capitalized\n * and other letters are converted to lowercase.\n * @return {String} Capitalized version of a string\n */\nexport const capitalize = (string: string, firstLetterOnly = false): string =>\n  `${string.charAt(0).toUpperCase()}${\n    firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase()\n  }`;\n\n/**\n * Escapes XML in a string\n * @param {String} string String to escape\n * @return {String} Escaped version of a string\n */\nexport const escapeXml = (string: string): string =>\n  string\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&apos;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;');\n\n/**\n * Divide a string in the user perceived single units\n * @param {String} textstring String to escape\n * @return {Array} array containing the graphemes\n */\nexport const graphemeSplit = (textstring: string): string[] => {\n  const graphemes = [];\n  for (let i = 0, chr; i < textstring.length; i++) {\n    if ((chr = getWholeChar(textstring, i)) === false) {\n      continue;\n    }\n    graphemes.push(chr as string);\n  }\n  return graphemes;\n};\n\n// taken from mdn in the charAt doc page.\nconst getWholeChar = (str: string, i: number): string | boolean => {\n  const code = str.charCodeAt(i);\n  if (isNaN(code)) {\n    return ''; // Position not found\n  }\n  if (code < 0xd800 || code > 0xdfff) {\n    return str.charAt(i);\n  }\n\n  // High surrogate (could change last hex to 0xDB7F to treat high private\n  // surrogates as single characters)\n  if (0xd800 <= code && code <= 0xdbff) {\n    if (str.length <= i + 1) {\n      throw 'High surrogate without following low surrogate';\n    }\n    const next = str.charCodeAt(i + 1);\n    if (0xdc00 > next || next > 0xdfff) {\n      throw 'High surrogate without following low surrogate';\n    }\n    return str.charAt(i) + str.charAt(i + 1);\n  }\n  // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n  if (i === 0) {\n    throw 'Low surrogate without preceding high surrogate';\n  }\n  const prev = str.charCodeAt(i - 1);\n\n  // (could change last hex to 0xDB7F to treat high private\n  // surrogates as single characters)\n  if (0xd800 > prev || prev > 0xdbff) {\n    throw 'Low surrogate without preceding high surrogate';\n  }\n  // We can pass over low surrogates now as the second component\n  // in a pair which we have already processed\n  return false;\n};\n","import { reNewline } from '../../constants';\nimport type {\n  TextStyle,\n  TextStyleDeclaration,\n} from '../../shapes/Text/StyledText';\nimport { cloneDeep } from '../internals/cloneDeep';\nimport { graphemeSplit } from '../lang_string';\n\nexport type TextStyleArray = {\n  start: number;\n  end: number;\n  style: TextStyleDeclaration;\n}[];\n\n/**\n * @param {Object} prevStyle first style to compare\n * @param {Object} thisStyle second style to compare\n * @param {boolean} forTextSpans whether to check overline, underline, and line-through properties\n * @return {boolean} true if the style changed\n */\nexport const hasStyleChanged = (\n  prevStyle: TextStyleDeclaration,\n  thisStyle: TextStyleDeclaration,\n  forTextSpans = false\n) =>\n  prevStyle.fill !== thisStyle.fill ||\n  prevStyle.stroke !== thisStyle.stroke ||\n  prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n  prevStyle.fontSize !== thisStyle.fontSize ||\n  prevStyle.fontFamily !== thisStyle.fontFamily ||\n  prevStyle.fontWeight !== thisStyle.fontWeight ||\n  prevStyle.fontStyle !== thisStyle.fontStyle ||\n  prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor ||\n  prevStyle.deltaY !== thisStyle.deltaY ||\n  (forTextSpans &&\n    (prevStyle.overline !== thisStyle.overline ||\n      prevStyle.underline !== thisStyle.underline ||\n      prevStyle.linethrough !== thisStyle.linethrough));\n\n/**\n * Returns the array form of a text object's inline styles property with styles grouped in ranges\n * rather than per character. This format is less verbose, and is better suited for storage\n * so it is used in serialization (not during runtime).\n * @param {object} styles per character styles for a text object\n * @param {String} text the text string that the styles are applied to\n * @return {{start: number, end: number, style: object}[]}\n */\nexport const stylesToArray = (\n  styles: TextStyle,\n  text: string\n): TextStyleArray => {\n  const textLines = text.split('\\n'),\n    stylesArray = [];\n  let charIndex = -1,\n    prevStyle = {};\n  // clone style structure to prevent mutation\n  styles = cloneDeep(styles);\n\n  //loop through each textLine\n  for (let i = 0; i < textLines.length; i++) {\n    const chars = graphemeSplit(textLines[i]);\n    if (!styles[i]) {\n      //no styles exist for this line, so add the line's length to the charIndex total and reset prevStyle\n      charIndex += chars.length;\n      prevStyle = {};\n      continue;\n    }\n    //loop through each character of the current line\n    for (let c = 0; c < chars.length; c++) {\n      charIndex++;\n      const thisStyle = styles[i][c];\n      //check if style exists for this character\n      if (thisStyle && Object.keys(thisStyle).length > 0) {\n        if (hasStyleChanged(prevStyle, thisStyle, true)) {\n          stylesArray.push({\n            start: charIndex,\n            end: charIndex + 1,\n            style: thisStyle,\n          });\n        } else {\n          //if style is the same as previous character, increase end index\n          stylesArray[stylesArray.length - 1].end++;\n        }\n      }\n      prevStyle = thisStyle || {};\n    }\n  }\n  return stylesArray;\n};\n\n/**\n * Returns the object form of the styles property with styles that are assigned per\n * character rather than grouped by range. This format is more verbose, and is\n * only used during runtime (not for serialization/storage)\n * @param {Array} styles the serialized form of a text object's styles\n * @param {String} text the text string that the styles are applied to\n * @return {Object}\n */\nexport const stylesFromArray = (\n  styles: TextStyleArray | TextStyle,\n  text: string\n): TextStyle => {\n  if (!Array.isArray(styles)) {\n    // clone to prevent mutation\n    return cloneDeep(styles);\n  }\n  const textLines = text.split(reNewline),\n    stylesObject: TextStyle = {};\n  let charIndex = -1,\n    styleIndex = 0;\n  //loop through each textLine\n  for (let i = 0; i < textLines.length; i++) {\n    const chars = graphemeSplit(textLines[i]);\n\n    //loop through each character of the current line\n    for (let c = 0; c < chars.length; c++) {\n      charIndex++;\n      //check if there's a style collection that includes the current character\n      if (\n        styles[styleIndex] &&\n        styles[styleIndex].start <= charIndex &&\n        charIndex < styles[styleIndex].end\n      ) {\n        //create object for line index if it doesn't exist\n        stylesObject[i] = stylesObject[i] || {};\n        //assign a style at this character's index\n        stylesObject[i][c] = { ...styles[styleIndex].style };\n        //if character is at the end of the current style collection, move to the next\n        if (charIndex === styles[styleIndex].end - 1) {\n          styleIndex++;\n        }\n      }\n    }\n  }\n  return stylesObject;\n};\n","/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nexport const SHARED_ATTRIBUTES = [\n  'display',\n  'transform',\n  'fill',\n  'fill-opacity',\n  'fill-rule',\n  'opacity',\n  'stroke',\n  'stroke-dasharray',\n  'stroke-linecap',\n  'stroke-dashoffset',\n  'stroke-linejoin',\n  'stroke-miterlimit',\n  'stroke-opacity',\n  'stroke-width',\n  'id',\n  'paint-order',\n  'vector-effect',\n  'instantiated_by_use',\n  'clip-path',\n];\n","export function selectorMatches(element: HTMLElement, selector: string) {\n  const nodeName = element.nodeName;\n  const classNames = element.getAttribute('class');\n  const id = element.getAttribute('id');\n  const azAz = '(?![a-zA-Z\\\\-]+)';\n  let matcher;\n  // i check if a selector matches slicing away part from it.\n  // if i get empty string i should match\n  matcher = new RegExp('^' + nodeName, 'i');\n  selector = selector.replace(matcher, '');\n  if (id && selector.length) {\n    matcher = new RegExp('#' + id + azAz, 'i');\n    selector = selector.replace(matcher, '');\n  }\n  if (classNames && selector.length) {\n    const splitClassNames = classNames.split(' ');\n    for (let i = splitClassNames.length; i--; ) {\n      matcher = new RegExp('\\\\.' + splitClassNames[i] + azAz, 'i');\n      selector = selector.replace(matcher, '');\n    }\n  }\n  return selector.length === 0;\n}\n","import { selectorMatches } from './selectorMatches';\nimport { doesSomeParentMatch } from './doesSomeParentMatch';\n\n/**\n * @private\n */\n\nexport function elementMatchesRule(element: HTMLElement, selectors: string[]) {\n  let parentMatching = true;\n  // start from rightmost selector.\n  const firstMatching = selectorMatches(element, selectors.pop()!);\n  if (firstMatching && selectors.length) {\n    parentMatching = doesSomeParentMatch(element, selectors);\n  }\n  return firstMatching && parentMatching && selectors.length === 0;\n}\n","import { selectorMatches } from './selectorMatches';\n\nexport function doesSomeParentMatch(element: HTMLElement, selectors: string[]) {\n  let selector: string,\n    parentMatching = true;\n  while (\n    element.parentElement &&\n    element.parentElement.nodeType === 1 &&\n    selectors.length\n  ) {\n    if (parentMatching) {\n      selector = selectors.pop()!;\n    }\n    element = element.parentElement;\n    parentMatching = selectorMatches(element, selector!);\n  }\n  return selectors.length === 0;\n}\n","import { attributesMap } from './constants';\n\nexport const normalizeAttr = (\n  attr: keyof typeof attributesMap | string\n): string => attributesMap[attr as keyof typeof attributesMap] ?? attr;\n","import { reNum } from '../../parser/constants';\n\nexport const cleanupSvgAttribute = (attributeValue: string) =>\n  attributeValue\n    .replace(new RegExp(`(${reNum})`, 'gi'), ' $1 ')\n    // replace annoying commas and arbitrary whitespace with single spaces\n    .replace(/,/gi, ' ')\n    .replace(/\\s+/gi, ' ');\n","import { iMatrix } from '../constants';\nimport { reNum } from './constants';\nimport type { TMat2D } from '../typedefs';\nimport { cleanupSvgAttribute } from '../util/internals/cleanupSvgAttribute';\nimport {\n  createRotateMatrix,\n  createScaleMatrix,\n  createSkewXMatrix,\n  createSkewYMatrix,\n  createTranslateMatrix,\n  multiplyTransformMatrixArray,\n} from '../util/misc/matrix';\n\n// == begin transform regexp\nconst p = `(${reNum})`;\nconst skewX = String.raw`(skewX)\\(${p}\\)`;\nconst skewY = String.raw`(skewY)\\(${p}\\)`;\nconst rotate = String.raw`(rotate)\\(${p}(?: ${p} ${p})?\\)`;\nconst scale = String.raw`(scale)\\(${p}(?: ${p})?\\)`;\nconst translate = String.raw`(translate)\\(${p}(?: ${p})?\\)`;\nconst matrix = String.raw`(matrix)\\(${p} ${p} ${p} ${p} ${p} ${p}\\)`;\nconst transform = `(?:${matrix}|${translate}|${rotate}|${scale}|${skewX}|${skewY})`;\nconst transforms = `(?:${transform}*)`;\nconst transformList = String.raw`^\\s*(?:${transforms}?)\\s*$`;\n// http://www.w3.org/TR/SVG/coords.html#TransformAttribute\nconst reTransformList = new RegExp(transformList);\n// == end transform regexp\nconst reTransform = new RegExp(transform, 'g');\n\n/**\n * Parses \"transform\" attribute, returning an array of values\n * @static\n * @function\n * @memberOf fabric\n * @param {String} attributeValue String containing attribute value\n * @return {TTransformMatrix} Array of 6 elements representing transformation matrix\n */\nexport function parseTransformAttribute(attributeValue: string): TMat2D {\n  // first we clean the string\n  attributeValue = cleanupSvgAttribute(attributeValue)\n    // remove spaces around front parentheses\n    .replace(/\\s*([()])\\s*/gi, '$1');\n\n  // start with identity matrix\n  const matrices: TMat2D[] = [];\n\n  // return if no argument was given or\n  // an argument does not match transform attribute regexp\n  if (\n    !attributeValue ||\n    (attributeValue && !reTransformList.test(attributeValue))\n  ) {\n    return [...iMatrix];\n  }\n\n  for (const match of attributeValue.matchAll(reTransform)) {\n    const transformMatch = new RegExp(transform).exec(match[0]);\n    if (!transformMatch) {\n      continue;\n    }\n    let matrix: TMat2D = iMatrix;\n    const matchedParams = transformMatch.filter((m) => !!m);\n    const [, operation, ...rawArgs] = matchedParams;\n    const [arg0, arg1, arg2, arg3, arg4, arg5] = rawArgs.map((arg) =>\n      parseFloat(arg)\n    );\n\n    switch (operation) {\n      case 'translate':\n        matrix = createTranslateMatrix(arg0, arg1);\n        break;\n      case 'rotate':\n        matrix = createRotateMatrix({ angle: arg0 }, { x: arg1, y: arg2 });\n        break;\n      case 'scale':\n        matrix = createScaleMatrix(arg0, arg1);\n        break;\n      case 'skewX':\n        matrix = createSkewXMatrix(arg0);\n        break;\n      case 'skewY':\n        matrix = createSkewYMatrix(arg0);\n        break;\n      case 'matrix':\n        matrix = [arg0, arg1, arg2, arg3, arg4, arg5];\n        break;\n    }\n\n    // snapshot current matrix into matrices array\n    matrices.push(matrix);\n  }\n\n  return multiplyTransformMatrixArray(matrices);\n}\n","import { multiplyTransformMatrices } from '../util/misc/matrix';\nimport { parseUnit } from '../util/misc/svgParsing';\nimport { parseTransformAttribute } from './parseTransformAttribute';\nimport { CENTER, LEFT, RIGHT, NONE } from '../constants';\n\nexport function normalizeValue(\n  attr: string,\n  value: any,\n  parentAttributes: Record<string, any>,\n  fontSize: number\n): string | null | boolean | number[] | number {\n  const isArray = Array.isArray(value);\n  let parsed: number | number[];\n  let ouputValue: string | null | boolean | number[] | number = value;\n  if ((attr === 'fill' || attr === 'stroke') && value === NONE) {\n    ouputValue = '';\n  } else if (attr === 'strokeUniform') {\n    return value === 'non-scaling-stroke';\n  } else if (attr === 'strokeDashArray') {\n    if (value === NONE) {\n      ouputValue = null;\n    } else {\n      ouputValue = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n    }\n  } else if (attr === 'transformMatrix') {\n    if (parentAttributes && parentAttributes.transformMatrix) {\n      ouputValue = multiplyTransformMatrices(\n        parentAttributes.transformMatrix,\n        parseTransformAttribute(value)\n      );\n    } else {\n      ouputValue = parseTransformAttribute(value);\n    }\n  } else if (attr === 'visible') {\n    ouputValue = value !== NONE && value !== 'hidden';\n    // display=none on parent element always takes precedence over child element\n    if (parentAttributes && parentAttributes.visible === false) {\n      ouputValue = false;\n    }\n  } else if (attr === 'opacity') {\n    ouputValue = parseFloat(value);\n    if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n      ouputValue *= parentAttributes.opacity as number;\n    }\n  } else if (attr === 'textAnchor' /* text-anchor */) {\n    ouputValue = value === 'start' ? LEFT : value === 'end' ? RIGHT : CENTER;\n  } else if (attr === 'charSpacing') {\n    // parseUnit returns px and we convert it to em\n    parsed = (parseUnit(value, fontSize) / fontSize) * 1000;\n  } else if (attr === 'paintFirst') {\n    const fillIndex = value.indexOf('fill');\n    const strokeIndex = value.indexOf('stroke');\n    ouputValue = 'fill';\n    if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n      ouputValue = 'stroke';\n    } else if (fillIndex === -1 && strokeIndex > -1) {\n      ouputValue = 'stroke';\n    }\n  } else if (attr === 'href' || attr === 'xlink:href' || attr === 'font') {\n    return value;\n  } else if (attr === 'imageSmoothing') {\n    return value === 'optimizeQuality';\n  } else {\n    parsed = isArray\n      ? (value as string[]).map(parseUnit)\n      : parseUnit(value, fontSize);\n  }\n\n  return !isArray && isNaN(parsed! as number) ? ouputValue : parsed!;\n}\n","import { parseUnit } from '../util/misc/svgParsing';\nimport { reFontDeclaration } from './constants';\n\n/**\n * Parses a short font declaration, building adding its properties to a style object\n * @static\n * @function\n * @memberOf fabric\n * @param {String} value font declaration\n * @param {Object} oStyle definition\n */\nexport function parseFontDeclaration(\n  value: string,\n  oStyle: Record<string, any>\n): void {\n  const match = value.match(reFontDeclaration);\n\n  if (!match) {\n    return;\n  }\n  const fontStyle = match[1],\n    // font variant is not used\n    // fontVariant = match[2],\n    fontWeight = match[3],\n    fontSize = match[4],\n    lineHeight = match[5],\n    fontFamily = match[6];\n\n  if (fontStyle) {\n    oStyle.fontStyle = fontStyle;\n  }\n  if (fontWeight) {\n    oStyle.fontWeight = isNaN(parseFloat(fontWeight))\n      ? fontWeight\n      : parseFloat(fontWeight);\n  }\n  if (fontSize) {\n    oStyle.fontSize = parseUnit(fontSize);\n  }\n  if (fontFamily) {\n    oStyle.fontFamily = fontFamily;\n  }\n  if (lineHeight) {\n    oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n  }\n}\n","import { parseStyleObject } from './parseStyleObject';\nimport { parseStyleString } from './parseStyleString';\n\n/**\n * Parses \"style\" attribute, retuning an object with values\n * @static\n * @memberOf fabric\n * @param {SVGElement} element Element to parse\n * @return {Object} Objects with values parsed from style attribute of an element\n */\nexport function parseStyleAttribute(element: HTMLElement): Record<string, any> {\n  const oStyle: Record<string, any> = {},\n    style = element.getAttribute('style');\n\n  if (!style) {\n    return oStyle;\n  }\n\n  if (typeof style === 'string') {\n    parseStyleString(style, oStyle);\n  } else {\n    parseStyleObject(style, oStyle);\n  }\n\n  return oStyle;\n}\n","/**\n * Takes a style string and parses it in one that has only defined values\n * and lowercases properties\n * @param style\n * @param oStyle\n */\nexport function parseStyleString(\n  style: string,\n  oStyle: Record<string, any>\n): void {\n  style\n    .replace(/;\\s*$/, '')\n    .split(';')\n    .forEach((chunk) => {\n      const [attr, value] = chunk.split(':');\n      oStyle[attr.trim().toLowerCase()] = value.trim();\n    });\n}\n","/**\n * Takes a style object and parses it in one that has only defined values\n * and lowercases properties\n * @param style\n * @param oStyle\n */\nexport function parseStyleObject(\n  style: Record<string, any>,\n  oStyle: Record<string, any>\n): void {\n  Object.entries(style).forEach(([prop, value]) => {\n    if (value === undefined) {\n      return;\n    }\n    oStyle[prop.toLowerCase()] = value;\n  });\n}\n","import { Color } from '../color/Color';\nimport { toFixed } from '../util/misc/toFixed';\nimport { FabricObject } from '../shapes/Object/FabricObject';\n\nconst colorAttributesMap = {\n  stroke: 'strokeOpacity',\n  fill: 'fillOpacity',\n};\n\n/**\n * @private\n * @param {Object} attributes Array of attributes to parse\n */\n\nexport function setStrokeFillOpacity(\n  attributes: Record<string, any>\n): Record<string, any> {\n  const defaults = FabricObject.getDefaults();\n  Object.entries(colorAttributesMap).forEach(([attr, colorAttr]) => {\n    if (\n      typeof attributes[colorAttr] === 'undefined' ||\n      attributes[attr] === ''\n    ) {\n      return;\n    }\n    if (typeof attributes[attr] === 'undefined') {\n      if (!defaults[attr]) {\n        return;\n      }\n      attributes[attr] = defaults[attr];\n    }\n    if (attributes[attr].indexOf('url(') === 0) {\n      return;\n    }\n    const color = new Color(attributes[attr]);\n    attributes[attr] = color\n      .setAlpha(toFixed(color.getAlpha() * attributes[colorAttr], 2))\n      .toRgba();\n  });\n  return attributes;\n}\n","import { DEFAULT_SVG_FONT_SIZE } from '../constants';\nimport { parseUnit } from '../util/misc/svgParsing';\nimport { cPath, fSize, svgValidParentsRegEx } from './constants';\nimport { getGlobalStylesForElement } from './getGlobalStylesForElement';\nimport { normalizeAttr } from './normalizeAttr';\nimport { normalizeValue } from './normalizeValue';\nimport { parseFontDeclaration } from './parseFontDeclaration';\nimport { parseStyleAttribute } from './parseStyleAttribute';\nimport { setStrokeFillOpacity } from './setStrokeFillOpacity';\nimport type { CSSRules } from './typedefs';\n\n/**\n * Returns an object of attributes' name/value, given element and an array of attribute names;\n * Parses parent \"g\" nodes recursively upwards.\n * @param {SVGElement | HTMLElement} element Element to parse\n * @param {Array} attributes Array of attributes to parse\n * @return {Object} object containing parsed attributes' names/values\n */\nexport function parseAttributes(\n  element: HTMLElement | null,\n  attributes: string[],\n  cssRules?: CSSRules\n): Record<string, any> {\n  if (!element) {\n    return {};\n  }\n\n  let parentAttributes: Record<string, string> = {},\n    fontSize: number,\n    parentFontSize = DEFAULT_SVG_FONT_SIZE;\n\n  // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n  if (\n    element.parentNode &&\n    svgValidParentsRegEx.test(element.parentNode.nodeName)\n  ) {\n    parentAttributes = parseAttributes(\n      element.parentElement,\n      attributes,\n      cssRules\n    );\n    if (parentAttributes.fontSize) {\n      fontSize = parentFontSize = parseUnit(parentAttributes.fontSize);\n    }\n  }\n\n  const ownAttributes: Record<string, string> = {\n    ...attributes.reduce<Record<string, string>>((memo, attr) => {\n      const value = element.getAttribute(attr);\n      if (value) {\n        memo[attr] = value;\n      }\n      return memo;\n    }, {}),\n    // add values parsed from style, which take precedence over attributes\n    // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n    ...getGlobalStylesForElement(element, cssRules),\n    ...parseStyleAttribute(element),\n  };\n\n  if (ownAttributes[cPath]) {\n    element.setAttribute(cPath, ownAttributes[cPath]);\n  }\n  if (ownAttributes[fSize]) {\n    // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n    fontSize = parseUnit(ownAttributes[fSize], parentFontSize);\n    ownAttributes[fSize] = `${fontSize}`;\n  }\n\n  // this should have its own complex type\n  const normalizedStyle: Record<\n    string,\n    string | boolean | number | number[] | null\n  > = {};\n  for (const attr in ownAttributes) {\n    const normalizedAttr = normalizeAttr(attr);\n    const normalizedValue = normalizeValue(\n      normalizedAttr,\n      ownAttributes[attr],\n      parentAttributes,\n      fontSize!\n    );\n    normalizedStyle[normalizedAttr] = normalizedValue;\n  }\n  if (normalizedStyle && normalizedStyle.font) {\n    parseFontDeclaration(normalizedStyle.font as string, normalizedStyle);\n  }\n  const mergedAttrs = { ...parentAttributes, ...normalizedStyle };\n  return svgValidParentsRegEx.test(element.nodeName)\n    ? mergedAttrs\n    : setStrokeFillOpacity(mergedAttrs);\n}\n","import { elementMatchesRule } from './elementMatchesRule';\nimport type { CSSRules } from './typedefs';\n\n/**\n * @private\n */\n\nexport function getGlobalStylesForElement(\n  element: HTMLElement,\n  cssRules: CSSRules = {}\n) {\n  let styles: Record<string, string> = {};\n  for (const rule in cssRules) {\n    if (elementMatchesRule(element, rule.split(' '))) {\n      styles = {\n        ...styles,\n        ...cssRules[rule],\n      };\n    }\n  }\n  return styles;\n}\n","import { kRect } from '../constants';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const rectDefaultValues: Partial<TClassProperties<Rect>> = {\n  rx: 0,\n  ry: 0,\n};\n\ninterface UniqueRectProps {\n  rx: number;\n  ry: number;\n}\n\nexport interface SerializedRectProps\n  extends SerializedObjectProps,\n    UniqueRectProps {}\n\nexport interface RectProps extends FabricObjectProps, UniqueRectProps {}\n\nconst RECT_PROPS = ['rx', 'ry'] as const;\n\nexport class Rect<\n    Props extends TOptions<RectProps> = Partial<RectProps>,\n    SProps extends SerializedRectProps = SerializedRectProps,\n    EventSpec extends ObjectEvents = ObjectEvents\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements RectProps\n{\n  /**\n   * Horizontal border radius\n   * @type Number\n   * @default\n   */\n  declare rx: number;\n\n  /**\n   * Vertical border radius\n   * @type Number\n   * @default\n   */\n  declare ry: number;\n\n  static type = 'Rect';\n\n  static cacheProperties = [...cacheProperties, ...RECT_PROPS];\n\n  static ownDefaults = rectDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Rect.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   * @return {Object} thisArg\n   */\n  constructor(options: Props) {\n    super(options);\n    this._initRxRy();\n  }\n\n  /**\n   * Initializes rx/ry attributes\n   * @private\n   */\n  _initRxRy() {\n    const { rx, ry } = this;\n    if (rx && !ry) {\n      this.ry = rx;\n    } else if (ry && !rx) {\n      this.rx = ry;\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const { width: w, height: h } = this;\n    const x = -w / 2;\n    const y = -h / 2;\n    const rx = this.rx ? Math.min(this.rx, w / 2) : 0;\n    const ry = this.ry ? Math.min(this.ry, h / 2) : 0;\n    const isRounded = rx !== 0 || ry !== 0;\n\n    ctx.beginPath();\n\n    ctx.moveTo(x + rx, y);\n\n    ctx.lineTo(x + w - rx, y);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + w - kRect * rx,\n        y,\n        x + w,\n        y + kRect * ry,\n        x + w,\n        y + ry\n      );\n\n    ctx.lineTo(x + w, y + h - ry);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + w,\n        y + h - kRect * ry,\n        x + w - kRect * rx,\n        y + h,\n        x + w - rx,\n        y + h\n      );\n\n    ctx.lineTo(x + rx, y + h);\n    isRounded &&\n      ctx.bezierCurveTo(\n        x + kRect * rx,\n        y + h,\n        x,\n        y + h - kRect * ry,\n        x,\n        y + h - ry\n      );\n\n    ctx.lineTo(x, y + ry);\n    isRounded &&\n      ctx.bezierCurveTo(x, y + kRect * ry, x + kRect * rx, y, x + rx, y);\n\n    ctx.closePath();\n\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...RECT_PROPS, ...propertiesToInclude]);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const { width, height, rx, ry } = this;\n    return [\n      '<rect ',\n      'COMMON_PARTS',\n      `x=\"${-width / 2}\" y=\"${\n        -height / 2\n      }\" rx=\"${rx}\" ry=\"${ry}\" width=\"${width}\" height=\"${height}\" />\\n`,\n    ];\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `Rect.fromElement`)\n   * @static\n   * @memberOf Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  static ATTRIBUTE_NAMES = [\n    ...SHARED_ATTRIBUTES,\n    'x',\n    'y',\n    'rx',\n    'ry',\n    'width',\n    'height',\n  ];\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * Returns {@link Rect} instance from an SVG element\n   * @static\n   * @memberOf Rect\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules\n  ) {\n    const {\n      left = 0,\n      top = 0,\n      width = 0,\n      height = 0,\n      visible = true,\n      ...restOfparsedAttributes\n    } = parseAttributes(element, this.ATTRIBUTE_NAMES, cssRules);\n\n    return new this({\n      ...options,\n      ...restOfparsedAttributes,\n      left,\n      top,\n      width,\n      height,\n      visible: Boolean(visible && width && height),\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Rect);\nclassRegistry.setSVGClass(Rect);\n","export const LAYOUT_TYPE_INITIALIZATION = 'initialization';\nexport const LAYOUT_TYPE_ADDED = 'added';\nexport const LAYOUT_TYPE_REMOVED = 'removed';\nexport const LAYOUT_TYPE_IMPERATIVE = 'imperative';\nexport const LAYOUT_TYPE_OBJECT_MODIFIED = 'object_modified';\nexport const LAYOUT_TYPE_OBJECT_MODIFYING = 'object_modifying';\n","import { Point, ZERO } from '../../Point';\nimport type { Group } from '../../shapes/Group';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { multiplyTransformMatrixArray } from '../../util/misc/matrix';\nimport { sizeAfterTransform } from '../../util/misc/objectTransforms';\nimport {\n  calcPlaneChangeMatrix,\n  sendVectorToPlane,\n} from '../../util/misc/planeChange';\n\n/**\n * @returns 2 points, the tl and br corners of the non rotated bounding box of an object\n * in the {@link group} plane, taking into account objects that {@link group} is their parent\n * but also belong to the active selection.\n */\nexport const getObjectBounds = (\n  destinationGroup: Group,\n  object: FabricObject\n): Point[] => {\n  const {\n    strokeUniform,\n    strokeWidth,\n    width,\n    height,\n    group: currentGroup,\n  } = object;\n  const t =\n    currentGroup && currentGroup !== destinationGroup\n      ? calcPlaneChangeMatrix(\n          currentGroup.calcTransformMatrix(),\n          destinationGroup.calcTransformMatrix()\n        )\n      : null;\n  const objectCenter = t\n    ? object.getRelativeCenterPoint().transform(t)\n    : object.getRelativeCenterPoint();\n  const accountForStroke = !object['isStrokeAccountedForInDimensions']();\n  const strokeUniformVector =\n    strokeUniform && accountForStroke\n      ? sendVectorToPlane(\n          new Point(strokeWidth, strokeWidth),\n          undefined,\n          destinationGroup.calcTransformMatrix()\n        )\n      : ZERO;\n  const scalingStrokeWidth =\n    !strokeUniform && accountForStroke ? strokeWidth : 0;\n  const sizeVector = sizeAfterTransform(\n    width + scalingStrokeWidth,\n    height + scalingStrokeWidth,\n    multiplyTransformMatrixArray([t, object.calcOwnMatrix()], true)\n  )\n    .add(strokeUniformVector)\n    .scalarDivide(2);\n  return [objectCenter.subtract(sizeVector), objectCenter.add(sizeVector)];\n};\n","import { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport {\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_IMPERATIVE,\n} from '../constants';\nimport type {\n  InitializationLayoutContext,\n  LayoutStrategyResult,\n  StrictLayoutContext,\n} from '../types';\nimport { getObjectBounds } from './utils';\n\n/**\n * Exposes a main public method {@link calcLayoutResult} that is used by the `LayoutManager` to perform layout.\n * Returning `undefined` signals the `LayoutManager` to skip the layout.\n *\n * In charge of calculating the bounding box of the passed objects.\n */\nexport abstract class LayoutStrategy {\n  /**\n   * override by subclass for persistence (TS does not support `static abstract`)\n   */\n  static type = 'strategy';\n\n  /**\n   * Used by the `LayoutManager` to perform layout\n   * @returns layout result **OR** `undefined` to skip layout\n   */\n  public calcLayoutResult(\n    context: StrictLayoutContext,\n    objects: FabricObject[]\n  ): LayoutStrategyResult | undefined {\n    if (this.shouldPerformLayout(context)) {\n      return this.calcBoundingBox(objects, context);\n    }\n  }\n\n  shouldPerformLayout(context: StrictLayoutContext) {\n    return (\n      context.type === LAYOUT_TYPE_INITIALIZATION ||\n      context.type === LAYOUT_TYPE_IMPERATIVE ||\n      (!!context.prevStrategy && context.strategy !== context.prevStrategy)\n    );\n  }\n\n  shouldLayoutClipPath({ type, target: { clipPath } }: StrictLayoutContext) {\n    return (\n      type !== LAYOUT_TYPE_INITIALIZATION &&\n      clipPath &&\n      !clipPath.absolutePositioned\n    );\n  }\n\n  getInitialSize(\n    context: StrictLayoutContext & InitializationLayoutContext,\n    result: Pick<LayoutStrategyResult, 'center' | 'size'>\n  ) {\n    return result.size;\n  }\n\n  /**\n   * Override this method to customize layout.\n   */\n  calcBoundingBox(\n    objects: FabricObject[],\n    context: StrictLayoutContext\n  ): LayoutStrategyResult | undefined {\n    if (context.type === LAYOUT_TYPE_IMPERATIVE && context.overrides) {\n      return context.overrides;\n    }\n    if (objects.length === 0) {\n      return;\n    }\n    const { target } = context;\n    const { left, top, width, height } = makeBoundingBoxFromPoints(\n      objects\n        .map((object) => getObjectBounds(target, object))\n        .reduce<Point[]>((coords, curr) => coords.concat(curr), [])\n    );\n    const bboxSize = new Point(width, height);\n    const bboxLeftTop = new Point(left, top);\n    const bboxCenter = bboxLeftTop.add(bboxSize.scalarDivide(2));\n\n    if (context.type === LAYOUT_TYPE_INITIALIZATION) {\n      const actualSize = this.getInitialSize(context, {\n        size: bboxSize,\n        center: bboxCenter,\n      });\n      return {\n        // in `initialization` we do not account for target's transformation matrix\n        center: bboxCenter,\n        // TODO: investigate if this is still necessary\n        relativeCorrection: new Point(0, 0),\n        size: actualSize,\n      };\n    } else {\n      //  we send `relativeCenter` up to group's containing plane\n      const center = bboxCenter.transform(target.calcOwnMatrix());\n      return {\n        center,\n        size: bboxSize,\n      };\n    }\n  }\n}\n","import type { StrictLayoutContext } from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will adjust the bounding box to fit target's objects.\n */\nexport class FitContentLayout extends LayoutStrategy {\n  static readonly type = 'fit-content';\n\n  /**\n   * @override layout on all triggers\n   * Override at will\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  shouldPerformLayout(context: StrictLayoutContext) {\n    return true;\n  }\n}\n\nclassRegistry.setClass(FitContentLayout);\n","import type { TModificationEvents } from '../EventTypeDefs';\nimport { Point } from '../Point';\nimport { CENTER, iMatrix } from '../constants';\nimport type { Group } from '../shapes/Group';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { invertTransform } from '../util/misc/matrix';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { FitContentLayout } from './LayoutStrategies/FitContentLayout';\nimport type { LayoutStrategy } from './LayoutStrategies/LayoutStrategy';\nimport {\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_REMOVED,\n  LAYOUT_TYPE_IMPERATIVE,\n  LAYOUT_TYPE_OBJECT_MODIFIED,\n  LAYOUT_TYPE_OBJECT_MODIFYING,\n} from './constants';\nimport type {\n  LayoutContext,\n  LayoutResult,\n  RegistrationContext,\n  StrictLayoutContext,\n} from './types';\nimport { classRegistry } from '../ClassRegistry';\n\nconst LAYOUT_MANAGER = 'layoutManager';\n\nexport type SerializedLayoutManager = {\n  type: string;\n  strategy: string;\n};\n\nexport class LayoutManager {\n  private declare _prevLayoutStrategy?: LayoutStrategy;\n  private declare _subscriptions: Map<FabricObject, VoidFunction[]>;\n\n  strategy: LayoutStrategy;\n\n  constructor(strategy: LayoutStrategy = new FitContentLayout()) {\n    this.strategy = strategy;\n    this._subscriptions = new Map();\n  }\n\n  public performLayout(context: LayoutContext) {\n    const strictContext: StrictLayoutContext = {\n      bubbles: true,\n      strategy: this.strategy,\n      ...context,\n      prevStrategy: this._prevLayoutStrategy,\n      stopPropagation() {\n        this.bubbles = false;\n      },\n    };\n\n    this.onBeforeLayout(strictContext);\n\n    const layoutResult = this.getLayoutResult(strictContext);\n    layoutResult && this.commitLayout(strictContext, layoutResult);\n\n    this.onAfterLayout(strictContext, layoutResult);\n    this._prevLayoutStrategy = strictContext.strategy;\n  }\n\n  /**\n   * subscribe to object layout triggers\n   */\n  protected subscribe(\n    object: FabricObject,\n    context: RegistrationContext & Partial<StrictLayoutContext>\n  ) {\n    const { target } = context;\n    this.unsubscribe(object, context);\n    const disposers = [\n      object.on('modified', (e) =>\n        this.performLayout({\n          trigger: 'modified',\n          e,\n          type: LAYOUT_TYPE_OBJECT_MODIFIED,\n          target,\n        })\n      ),\n      ...(\n        [\n          'moving',\n          'resizing',\n          'rotating',\n          'scaling',\n          'skewing',\n          'changed',\n          'modifyPoly',\n        ] as TModificationEvents[]\n      ).map((key) =>\n        object.on(key, (e) =>\n          this.performLayout({\n            trigger: key,\n            e: { ...e, target: object },\n            type: LAYOUT_TYPE_OBJECT_MODIFYING,\n            target,\n          })\n        )\n      ),\n    ];\n    this._subscriptions.set(object, disposers);\n  }\n\n  /**\n   * unsubscribe object layout triggers\n   */\n  protected unsubscribe(\n    object: FabricObject,\n    context?: RegistrationContext & Partial<StrictLayoutContext>\n  ) {\n    (this._subscriptions.get(object) || []).forEach((d) => d());\n    this._subscriptions.delete(object);\n  }\n\n  unsubscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>\n  ) {\n    context.targets.forEach((object) => this.unsubscribe(object, context));\n  }\n\n  subscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>\n  ) {\n    context.targets.forEach((object) => this.subscribe(object, context));\n  }\n\n  protected onBeforeLayout(context: StrictLayoutContext) {\n    const { target } = context;\n    const { canvas } = target;\n    // handle layout triggers subscription\n    if (\n      context.type === LAYOUT_TYPE_INITIALIZATION ||\n      context.type === LAYOUT_TYPE_ADDED\n    ) {\n      this.subscribeTargets(context);\n    } else if (context.type === LAYOUT_TYPE_REMOVED) {\n      this.unsubscribeTargets(context);\n    }\n    // fire layout event (event will fire only for layouts after initialization layout)\n    target.fire('layout:before', {\n      context,\n    });\n    canvas &&\n      canvas.fire('object:layout:before', {\n        target,\n        context,\n      });\n\n    if (context.type === LAYOUT_TYPE_IMPERATIVE && context.deep) {\n      const { strategy: _, ...tricklingContext } = context;\n      // traverse the tree\n      target.forEachObject((object) => {\n        (object as Group).layoutManager?.performLayout({\n          ...tricklingContext,\n          bubbles: false,\n          target: object as Group,\n        });\n      });\n    }\n  }\n\n  protected getLayoutResult(\n    context: StrictLayoutContext\n  ): Required<LayoutResult> | undefined {\n    const { target } = context;\n\n    const result = context.strategy.calcLayoutResult(\n      context,\n      target.getObjects()\n    );\n\n    if (!result) {\n      return;\n    }\n\n    const prevCenter =\n      context.type === LAYOUT_TYPE_INITIALIZATION\n        ? new Point()\n        : target.getRelativeCenterPoint();\n\n    const {\n      center: nextCenter,\n      correction = new Point(),\n      relativeCorrection = new Point(),\n    } = result;\n    const offset = prevCenter\n      .subtract(nextCenter)\n      .add(correction)\n      .transform(\n        // in `initialization` we do not account for target's transformation matrix\n        context.type === LAYOUT_TYPE_INITIALIZATION\n          ? iMatrix\n          : invertTransform(target.calcOwnMatrix()),\n        true\n      )\n      .add(relativeCorrection);\n\n    return {\n      result,\n      prevCenter,\n      nextCenter,\n      offset,\n    };\n  }\n\n  protected commitLayout(\n    context: StrictLayoutContext,\n    layoutResult: Required<LayoutResult>\n  ) {\n    const { target } = context;\n    const {\n      result: { size },\n      nextCenter,\n    } = layoutResult;\n    // set dimensions\n    target.set({ width: size.x, height: size.y });\n    // layout descendants\n    this.layoutObjects(context, layoutResult);\n    //  set position\n    // in `initialization` we do not account for target's transformation matrix\n    if (context.type === LAYOUT_TYPE_INITIALIZATION) {\n      // TODO: what about strokeWidth?\n      target.set({\n        left:\n          context.x ?? nextCenter.x + size.x * resolveOrigin(target.originX),\n        top: context.y ?? nextCenter.y + size.y * resolveOrigin(target.originY),\n      });\n    } else {\n      target.setPositionByOrigin(nextCenter, CENTER, CENTER);\n      // invalidate\n      target.setCoords();\n      target.set({ dirty: true });\n    }\n  }\n\n  protected layoutObjects(\n    context: StrictLayoutContext,\n    layoutResult: Required<LayoutResult>\n  ) {\n    const { target } = context;\n    //  adjust objects to account for new center\n    target.forEachObject((object) => {\n      object.group === target &&\n        this.layoutObject(context, layoutResult, object);\n    });\n    // adjust clip path to account for new center\n    context.strategy.shouldLayoutClipPath(context) &&\n      this.layoutObject(context, layoutResult, target.clipPath as FabricObject);\n  }\n\n  /**\n   * @param {FabricObject} object\n   * @param {Point} offset\n   */\n  protected layoutObject(\n    context: StrictLayoutContext,\n    { offset }: Required<LayoutResult>,\n    object: FabricObject\n  ) {\n    // TODO: this is here for cache invalidation.\n    // verify if this is necessary since we have explicit\n    // cache invalidation at the end of commitLayout\n    object.set({\n      left: object.left + offset.x,\n      top: object.top + offset.y,\n    });\n  }\n\n  protected onAfterLayout(\n    context: StrictLayoutContext,\n    layoutResult?: LayoutResult\n  ) {\n    const {\n      target,\n      strategy,\n      bubbles,\n      prevStrategy: _,\n      ...bubblingContext\n    } = context;\n    const { canvas } = target;\n\n    //  fire layout event (event will fire only for layouts after initialization layout)\n    target.fire('layout:after', {\n      context,\n      result: layoutResult,\n    });\n    canvas &&\n      canvas.fire('object:layout:after', {\n        context,\n        result: layoutResult,\n        target,\n      });\n\n    //  bubble\n    const parent = target.group;\n    if (bubbles && parent?.layoutManager) {\n      //  add target to context#path\n      (bubblingContext.path || (bubblingContext.path = [])).push(target);\n      //  all parents should invalidate their layout\n      parent.layoutManager.performLayout({\n        ...bubblingContext,\n        target: parent,\n      });\n    }\n  }\n\n  dispose() {\n    this._subscriptions.forEach((disposers) => disposers.forEach((d) => d()));\n    this._subscriptions.clear();\n  }\n\n  toObject() {\n    return {\n      type: LAYOUT_MANAGER,\n      strategy: (this.strategy.constructor as typeof LayoutStrategy).type,\n    };\n  }\n\n  toJSON() {\n    return this.toObject();\n  }\n}\n\nclassRegistry.setClass(LayoutManager, LAYOUT_MANAGER);\n","import type { CollectionEvents, ObjectEvents } from '../EventTypeDefs';\nimport { createCollectionMixin } from '../Collection';\nimport type { TClassProperties, TSVGReviver, TOptions } from '../typedefs';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n} from '../util/misc/matrix';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n} from '../util/misc/objectEnlive';\nimport { applyTransformToObject } from '../util/misc/objectTransforms';\nimport { FabricObject } from './Object/FabricObject';\nimport { Rect } from './Rect';\nimport { classRegistry } from '../ClassRegistry';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport { log } from '../util/internals/console';\nimport type {\n  ImperativeLayoutOptions,\n  LayoutBeforeEvent,\n  LayoutAfterEvent,\n} from '../LayoutManager/types';\nimport { LayoutManager } from '../LayoutManager/LayoutManager';\nimport {\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_IMPERATIVE,\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_REMOVED,\n} from '../LayoutManager/constants';\nimport type { SerializedLayoutManager } from '../LayoutManager/LayoutManager';\nimport type { FitContentLayout } from '../LayoutManager';\n\n/**\n * This class handles the specific case of creating a group using {@link Group#fromObject} and is not meant to be used in any other case.\n * We could have used a boolean in the constructor, as we did previously, but we think the boolean\n * would stay in the group's constructor interface and create confusion, therefore it was removed.\n * This layout manager doesn't do anything and therefore keeps the exact layout the group had when {@link Group#toObject} was called.\n */\nclass NoopLayoutManager extends LayoutManager {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  performLayout() {}\n}\n\nexport interface GroupEvents extends ObjectEvents, CollectionEvents {\n  'layout:before': LayoutBeforeEvent;\n  'layout:after': LayoutAfterEvent;\n}\n\nexport interface GroupOwnProps {\n  subTargetCheck: boolean;\n  interactive: boolean;\n}\n\nexport interface SerializedGroupProps\n  extends SerializedObjectProps,\n    GroupOwnProps {\n  objects: SerializedObjectProps[];\n  layoutManager: SerializedLayoutManager;\n}\n\nexport interface GroupProps extends FabricObjectProps, GroupOwnProps {\n  layoutManager: LayoutManager;\n}\n\nexport const groupDefaultValues: Partial<TClassProperties<Group>> = {\n  strokeWidth: 0,\n  subTargetCheck: false,\n  interactive: false,\n};\n\n/**\n * @fires object:added\n * @fires object:removed\n * @fires layout:before\n * @fires layout:after\n */\nexport class Group\n  extends createCollectionMixin(\n    FabricObject<GroupProps, SerializedGroupProps, GroupEvents>\n  )\n  implements GroupProps\n{\n  /**\n   * Used to optimize performance\n   * set to `false` if you don't need contained objects to be targets of events\n   * @default\n   * @type boolean\n   */\n  declare subTargetCheck: boolean;\n\n  /**\n   * Used to allow targeting of object inside groups.\n   * set to true if you want to select an object inside a group.\\\n   * **REQUIRES** `subTargetCheck` set to true\n   * @default\n   * @type boolean\n   */\n  declare interactive: boolean;\n\n  declare layoutManager: LayoutManager;\n\n  /**\n   * Used internally to optimize performance\n   * Once an object is selected, instance is rendered without the selected object.\n   * This way instance is cached only once for the entire interaction with the selected object.\n   * @private\n   */\n  protected _activeObjects: FabricObject[] = [];\n\n  static type = 'Group';\n\n  static ownDefaults: Record<string, any> = groupDefaultValues;\n  private __objectSelectionTracker: (ev: ObjectEvents['selected']) => void;\n  private __objectSelectionDisposer: (ev: ObjectEvents['deselected']) => void;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Group.ownDefaults,\n    };\n  }\n\n  /**\n   * Constructor\n   *\n   * @param {FabricObject[]} [objects] instance objects\n   * @param {Object} [options] Options object\n   */\n  constructor(objects: FabricObject[] = [], options: Partial<GroupProps> = {}) {\n    // @ts-expect-error options error\n    super(options);\n    this._objects = [...objects]; // Avoid unwanted mutations of Collection to affect the caller\n\n    this.__objectSelectionTracker = this.__objectSelectionMonitor.bind(\n      this,\n      true\n    );\n    this.__objectSelectionDisposer = this.__objectSelectionMonitor.bind(\n      this,\n      false\n    );\n\n    this.forEachObject((object) => {\n      this.enterGroup(object, false);\n    });\n\n    // perform initial layout\n    this.layoutManager = options.layoutManager || new LayoutManager();\n    this.layoutManager.performLayout({\n      type: LAYOUT_TYPE_INITIALIZATION,\n      target: this,\n      targets: [...objects],\n      x: options.left,\n      y: options.top,\n    });\n  }\n\n  /**\n   * Checks if object can enter group and logs relevant warnings\n   * @private\n   * @param {FabricObject} object\n   * @returns\n   */\n  canEnterGroup(object: FabricObject) {\n    if (object === this || this.isDescendantOf(object)) {\n      //  prevent circular object tree\n      log(\n        'error',\n        'Group: circular object trees are not supported, this call has no effect'\n      );\n      return false;\n    } else if (this._objects.indexOf(object) !== -1) {\n      // is already in the objects array\n      log(\n        'error',\n        'Group: duplicate objects are not supported inside group, this call has no effect'\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Override this method to enhance performance (for groups with a lot of objects).\n   * If Overriding, be sure not pass illegal objects to group - it will break your app.\n   * @private\n   */\n  protected _filterObjectsBeforeEnteringGroup(objects: FabricObject[]) {\n    return objects.filter((object, index, array) => {\n      // can enter AND is the first occurrence of the object in the passed args (to prevent adding duplicates)\n      return this.canEnterGroup(object) && array.indexOf(object) === index;\n    });\n  }\n\n  /**\n   * Add objects\n   * @param {...FabricObject[]} objects\n   */\n  add(...objects: FabricObject[]) {\n    const allowedObjects = this._filterObjectsBeforeEnteringGroup(objects);\n    const size = super.add(...allowedObjects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_ADDED, allowedObjects);\n    return size;\n  }\n\n  /**\n   * Inserts an object into collection at specified index\n   * @param {FabricObject[]} objects Object to insert\n   * @param {Number} index Index to insert object at\n   */\n  insertAt(index: number, ...objects: FabricObject[]) {\n    const allowedObjects = this._filterObjectsBeforeEnteringGroup(objects);\n    const size = super.insertAt(index, ...allowedObjects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_ADDED, allowedObjects);\n    return size;\n  }\n\n  /**\n   * Remove objects\n   * @param {...FabricObject[]} objects\n   * @returns {FabricObject[]} removed objects\n   */\n  remove(...objects: FabricObject[]) {\n    const removed = super.remove(...objects);\n    this._onAfterObjectsChange(LAYOUT_TYPE_REMOVED, removed);\n    return removed;\n  }\n\n  _onObjectAdded(object: FabricObject) {\n    this.enterGroup(object, true);\n    this.fire('object:added', { target: object });\n    object.fire('added', { target: this });\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  _onObjectRemoved(object: FabricObject, removeParentTransform?: boolean) {\n    this.exitGroup(object, removeParentTransform);\n    this.fire('object:removed', { target: object });\n    object.fire('removed', { target: this });\n  }\n\n  /**\n   * @private\n   * @param {'added'|'removed'} type\n   * @param {FabricObject[]} targets\n   */\n  _onAfterObjectsChange(type: 'added' | 'removed', targets: FabricObject[]) {\n    this.layoutManager.performLayout({\n      type,\n      targets,\n      target: this,\n    });\n  }\n\n  _onStackOrderChanged() {\n    this._set('dirty', true);\n  }\n\n  /**\n   * @private\n   * @param {string} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    const prev = this[key as keyof this];\n    super._set(key, value);\n    if (key === 'canvas' && prev !== value) {\n      (this._objects || []).forEach((object) => {\n        object._set(key, value);\n      });\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   */\n  _shouldSetNestedCoords() {\n    return this.subTargetCheck;\n  }\n\n  /**\n   * Remove all objects\n   * @returns {FabricObject[]} removed objects\n   */\n  removeAll() {\n    this._activeObjects = [];\n    return this.remove(...this._objects);\n  }\n\n  /**\n   * keeps track of the selected objects\n   * @private\n   */\n  __objectSelectionMonitor<T extends boolean>(\n    selected: T,\n    { target: object }: ObjectEvents[T extends true ? 'selected' : 'deselected']\n  ) {\n    if (selected) {\n      this._activeObjects.push(object);\n      this._set('dirty', true);\n    } else if (this._activeObjects.length > 0) {\n      const index = this._activeObjects.indexOf(object);\n      if (index > -1) {\n        this._activeObjects.splice(index, 1);\n        this._set('dirty', true);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} watch\n   * @param {FabricObject} object\n   */\n  _watchObject(watch: boolean, object: FabricObject) {\n    //  make sure we listen only once\n    watch && this._watchObject(false, object);\n    if (watch) {\n      object.on('selected', this.__objectSelectionTracker);\n      object.on('deselected', this.__objectSelectionDisposer);\n    } else {\n      object.off('selected', this.__objectSelectionTracker);\n      object.off('deselected', this.__objectSelectionDisposer);\n    }\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    object.group && object.group.remove(object);\n    object._set('parent', this);\n    this._enterGroup(object, removeParentTransform);\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  _enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    if (removeParentTransform) {\n      // can this be converted to utils (sendObjectToPlane)?\n      applyTransformToObject(\n        object,\n        multiplyTransformMatrices(\n          invertTransform(this.calcTransformMatrix()),\n          object.calcTransformMatrix()\n        )\n      );\n    }\n    this._shouldSetNestedCoords() && object.setCoords();\n    object._set('group', this);\n    object._set('canvas', this.canvas);\n    this._watchObject(true, object);\n    const activeObject =\n      this.canvas &&\n      this.canvas.getActiveObject &&\n      this.canvas.getActiveObject();\n    // if we are adding the activeObject in a group\n    if (\n      activeObject &&\n      (activeObject === object || object.isDescendantOf(activeObject))\n    ) {\n      this._activeObjects.push(object);\n    }\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    this._exitGroup(object, removeParentTransform);\n    object._set('parent', undefined);\n    object._set('canvas', undefined);\n  }\n\n  /**\n   * Executes the inner fabric logic of exiting a group.\n   * - Stop watching the object\n   * - Remove the object from the optimization map this._activeObjects\n   * - unset the group property of the object\n   * @protected\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  _exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    object._set('group', undefined);\n    if (!removeParentTransform) {\n      applyTransformToObject(\n        object,\n        multiplyTransformMatrices(\n          this.calcTransformMatrix(),\n          object.calcTransformMatrix()\n        )\n      );\n      object.setCoords();\n    }\n    this._watchObject(false, object);\n    const index =\n      this._activeObjects.length > 0 ? this._activeObjects.indexOf(object) : -1;\n    if (index > -1) {\n      this._activeObjects.splice(index, 1);\n    }\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group is already cached.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    const ownCache = FabricObject.prototype.shouldCache.call(this);\n    if (ownCache) {\n      for (let i = 0; i < this._objects.length; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          this.ownCaching = false;\n          return false;\n        }\n      }\n    }\n    return ownCache;\n  }\n\n  /**\n   * Check if this object or a child object will cast a shadow\n   * @return {Boolean}\n   */\n  willDrawShadow() {\n    if (super.willDrawShadow()) {\n      return true;\n    }\n    for (let i = 0; i < this._objects.length; i++) {\n      if (this._objects[i].willDrawShadow()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if instance or its group are caching, recursively up\n   * @return {Boolean}\n   */\n  isOnACache(): boolean {\n    return this.ownCaching || (!!this.group && this.group.isOnACache());\n  }\n\n  /**\n   * Execute the drawing operation for an object on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawObject(ctx: CanvasRenderingContext2D) {\n    this._renderBackground(ctx);\n    for (let i = 0; i < this._objects.length; i++) {\n      // TODO: handle rendering edge case somehow\n      if (\n        this.canvas?.preserveObjectStacking &&\n        this._objects[i].group !== this\n      ) {\n        ctx.save();\n        ctx.transform(...invertTransform(this.calcTransformMatrix()));\n        this._objects[i].render(ctx);\n        ctx.restore();\n      } else if (this._objects[i].group === this) {\n        this._objects[i].render(ctx);\n      }\n    }\n    this._drawClipPath(ctx, this.clipPath);\n  }\n\n  /**\n   * @override\n   * @return {Boolean}\n   */\n  setCoords() {\n    super.setCoords();\n    this._shouldSetNestedCoords() &&\n      this.forEachObject((object) => object.setCoords());\n  }\n\n  triggerLayout(options: ImperativeLayoutOptions = {}) {\n    this.layoutManager.performLayout({\n      target: this,\n      type: LAYOUT_TYPE_IMPERATIVE,\n      ...options,\n    });\n  }\n\n  /**\n   * Renders instance on a given context\n   * @param {CanvasRenderingContext2D} ctx context to render instance on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    this._transformDone = true;\n    super.render(ctx);\n    this._transformDone = false;\n  }\n\n  /**\n   *\n   * @private\n   * @param {'toObject'|'toDatalessObject'} [method]\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @returns {FabricObject[]} serialized objects\n   */\n  __serializeObjects(\n    method: 'toObject' | 'toDatalessObject',\n    propertiesToInclude?: string[]\n  ) {\n    const _includeDefaultValues = this.includeDefaultValues;\n    return this._objects\n      .filter(function (obj) {\n        return !obj.excludeFromExport;\n      })\n      .map(function (obj) {\n        const originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n        const data = obj[method || 'toObject'](propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        // delete data.version;\n        return data;\n      });\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<\n      GroupProps & TClassProperties<this>,\n      keyof SerializedGroupProps\n    >,\n    K extends keyof T = never\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SerializedGroupProps {\n    const layoutManager = this.layoutManager.toObject();\n\n    return {\n      ...super.toObject([\n        'subTargetCheck',\n        'interactive',\n        ...propertiesToInclude,\n      ]),\n      ...(layoutManager.strategy !== 'fit-content' || this.includeDefaultValues\n        ? { layoutManager }\n        : {}),\n      objects: this.__serializeObjects(\n        'toObject',\n        propertiesToInclude as string[]\n      ),\n    };\n  }\n\n  toString() {\n    return `#<Group: (${this.complexity()})>`;\n  }\n\n  dispose() {\n    this.layoutManager.unsubscribeTargets({\n      targets: this.getObjects(),\n      target: this,\n    });\n    this._activeObjects = [];\n    this.forEachObject((object) => {\n      this._watchObject(false, object);\n      object.dispose();\n    });\n    super.dispose();\n  }\n\n  /**\n   * @private\n   */\n  _createSVGBgRect(reviver?: TSVGReviver) {\n    if (!this.backgroundColor) {\n      return '';\n    }\n    const fillStroke = Rect.prototype._toSVG.call(this);\n    const commons = fillStroke.indexOf('COMMON_PARTS');\n    fillStroke[commons] = 'for=\"group\" ';\n    const markup = fillStroke.join('');\n    return reviver ? reviver(markup) : markup;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {TSVGReviver} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  _toSVG(reviver?: TSVGReviver) {\n    const svgString = ['<g ', 'COMMON_PARTS', ' >\\n'];\n    const bg = this._createSVGBgRect(reviver);\n    bg && svgString.push('\\t\\t', bg);\n    for (let i = 0; i < this._objects.length; i++) {\n      svgString.push('\\t\\t', this._objects[i].toSVG(reviver));\n    }\n    svgString.push('</g>\\n');\n    return svgString;\n  }\n\n  /**\n   * Returns styles-string for svg-export, specific version for group\n   * @return {String}\n   */\n  getSvgStyles(): string {\n    const opacity =\n        typeof this.opacity !== 'undefined' && this.opacity !== 1\n          ? `opacity: ${this.opacity};`\n          : '',\n      visibility = this.visible ? '' : ' visibility: hidden;';\n    return [opacity, this.getSvgFilter(), visibility].join('');\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {String} svg representation of an instance\n   */\n  toClipPathSVG(reviver?: TSVGReviver): string {\n    const svgString = [];\n    const bg = this._createSVGBgRect(reviver);\n    bg && svgString.push('\\t', bg);\n    for (let i = 0; i < this._objects.length; i++) {\n      svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n    }\n    return this._createBaseClipPathSVGMarkup(svgString, {\n      reviver,\n    });\n  }\n\n  /**\n   * @todo support loading from svg\n   * @private\n   * @static\n   * @memberOf Group\n   * @param {Object} object Object to create a group from\n   * @returns {Promise<Group>}\n   */\n  static fromObject<T extends TOptions<SerializedGroupProps>>({\n    type,\n    objects = [],\n    layoutManager,\n    ...options\n  }: T) {\n    return Promise.all([\n      enlivenObjects<FabricObject>(objects),\n      enlivenObjectEnlivables(options),\n    ]).then(([objects, hydratedOptions]) => {\n      const group = new this(objects, {\n        ...options,\n        ...hydratedOptions,\n        layoutManager: new NoopLayoutManager(),\n      });\n      if (layoutManager) {\n        const layoutClass = classRegistry.getClass<typeof LayoutManager>(\n          layoutManager.type\n        );\n        const strategyClass = classRegistry.getClass<typeof FitContentLayout>(\n          layoutManager.strategy\n        );\n        group.layoutManager = new layoutClass(new strategyClass());\n      } else {\n        group.layoutManager = new LayoutManager();\n      }\n      group.layoutManager.subscribeTargets({\n        type: LAYOUT_TYPE_INITIALIZATION,\n        target: group,\n        targets: group.getObjects(),\n      });\n      group.setCoords();\n      return group;\n    });\n  }\n}\n\nclassRegistry.setClass(Group);\n","import type { GroupProps } from '../../shapes/Group';\nimport { Group } from '../../shapes/Group';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\n\n/**\n * TODO experiment with different layout manager and svg results ( fixed fit content )\n * Groups SVG elements (usually those retrieved from SVG document)\n * @static\n * @param {FabricObject[]} elements FabricObject(s) parsed from svg, to group\n * @return {FabricObject | Group}\n */\nexport const groupSVGElements = (\n  elements: FabricObject[],\n  options?: Partial<GroupProps>\n) => {\n  if (elements && elements.length === 1) {\n    return elements[0];\n  }\n  return new Group(elements, options);\n};\n","import type { TSize } from '../../typedefs';\n\n/**\n * Finds the scale for the object source to fit inside the object destination,\n * keeping aspect ratio intact.\n * respect the total allowed area for the cache.\n * @param {TSize} source natural unscaled size of the object\n * @param {TSize} destination natural unscaled size of the object\n * @return {Number} scale factor to apply to source to fit into destination\n */\nexport const findScaleToFit = (source: TSize, destination: TSize) =>\n  Math.min(\n    destination.width / source.width,\n    destination.height / source.height\n  );\n\n/**\n * Finds the scale for the object source to cover entirely the object destination,\n * keeping aspect ratio intact.\n * respect the total allowed area for the cache.\n * @param {TSize} source natural unscaled size of the object\n * @param {TSize} destination natural unscaled size of the object\n * @return {Number} scale factor to apply to source to cover destination\n */\nexport const findScaleToCover = (source: TSize, destination: TSize) =>\n  Math.max(\n    destination.width / source.width,\n    destination.height / source.height\n  );\n","import { reNum } from '../../parser/constants';\n\n/**\n * p for param\n * using \"bad naming\" here because it makes the regex much easier to read\n */\nconst p = `(${reNum})`;\n\nconst reMoveToCommand = `(M) (?:${p} ${p} ?)+`;\n\nconst reLineCommand = `(L) (?:${p} ${p} ?)+`;\n\nconst reHorizontalLineCommand = `(H) (?:${p} ?)+`;\n\nconst reVerticalLineCommand = `(V) (?:${p} ?)+`;\n\nconst reClosePathCommand = String.raw`(Z)\\s*`;\n\nconst reCubicCurveCommand = `(C) (?:${p} ${p} ${p} ${p} ${p} ${p} ?)+`;\n\nconst reCubicCurveShortcutCommand = `(S) (?:${p} ${p} ${p} ${p} ?)+`;\n\nconst reQuadraticCurveCommand = `(Q) (?:${p} ${p} ${p} ${p} ?)+`;\n\nconst reQuadraticCurveShortcutCommand = `(T) (?:${p} ${p} ?)+`;\n\nconst reArcCommand = `(A) (?:${p} ${p} ${p} ([01]) ?([01]) ${p} ${p} ?)+`;\n\nexport const rePathCommand =\n  `(?:(?:${reMoveToCommand})` +\n  `|(?:${reLineCommand})` +\n  `|(?:${reHorizontalLineCommand})` +\n  `|(?:${reVerticalLineCommand})` +\n  `|(?:${reClosePathCommand})` +\n  `|(?:${reCubicCurveCommand})` +\n  `|(?:${reCubicCurveShortcutCommand})` +\n  `|(?:${reQuadraticCurveCommand})` +\n  `|(?:${reQuadraticCurveShortcutCommand})` +\n  `|(?:${reArcCommand}))`;\n","import { cache } from '../../cache';\nimport { config } from '../../config';\nimport { halfPI, PiBy180 } from '../../constants';\nimport type { TMat2D, TRadian, TRectBounds } from '../../typedefs';\nimport { cos } from '../misc/cos';\nimport { multiplyTransformMatrices, transformPoint } from '../misc/matrix';\nimport { sin } from '../misc/sin';\nimport { toFixed } from '../misc/toFixed';\nimport type {\n  TCurveInfo,\n  TComplexPathData,\n  TParsedAbsoluteCubicCurveCommand,\n  TParsedCubicCurveCommand,\n  TPathSegmentInfo,\n  TPointAngle,\n  TSimpleParsedCommand,\n  TSimplePathData,\n  TPathSegmentCommandInfo,\n  TComplexParsedCommand,\n  TPathSegmentInfoCommon,\n  TEndPathInfo,\n  TParsedArcCommand,\n} from './typedefs';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport { rePathCommand } from './regex';\nimport { cleanupSvgAttribute } from '../internals/cleanupSvgAttribute';\n\n/**\n * Commands that may be repeated\n */\nconst repeatedCommands: Record<string, string | undefined> = {\n  m: 'l',\n  M: 'L',\n};\n\n/**\n * Convert an arc of a rotated ellipse to a Bezier Curve\n * @param {TRadian} theta1 start of the arc\n * @param {TRadian} theta2 end of the arc\n * @param cosTh cosine of the angle of rotation\n * @param sinTh sine of the angle of rotation\n * @param rx x-axis radius (before rotation)\n * @param ry y-axis radius (before rotation)\n * @param cx1 center x of the ellipse\n * @param cy1 center y of the ellipse\n * @param mT\n * @param fromX starting point of arc x\n * @param fromY starting point of arc y\n */\nconst segmentToBezier = (\n  theta1: TRadian,\n  theta2: TRadian,\n  cosTh: number,\n  sinTh: number,\n  rx: number,\n  ry: number,\n  cx1: number,\n  cy1: number,\n  mT: number,\n  fromX: number,\n  fromY: number\n): TParsedCubicCurveCommand => {\n  const costh1 = cos(theta1),\n    sinth1 = sin(theta1),\n    costh2 = cos(theta2),\n    sinth2 = sin(theta2),\n    toX = cosTh * rx * costh2 - sinTh * ry * sinth2 + cx1,\n    toY = sinTh * rx * costh2 + cosTh * ry * sinth2 + cy1,\n    cp1X = fromX + mT * (-cosTh * rx * sinth1 - sinTh * ry * costh1),\n    cp1Y = fromY + mT * (-sinTh * rx * sinth1 + cosTh * ry * costh1),\n    cp2X = toX + mT * (cosTh * rx * sinth2 + sinTh * ry * costh2),\n    cp2Y = toY + mT * (sinTh * rx * sinth2 - cosTh * ry * costh2);\n\n  return ['C', cp1X, cp1Y, cp2X, cp2Y, toX, toY];\n};\n\n/**\n * Adapted from {@link http://dxr.mozilla.org/mozilla-central/source/dom/svg/SVGPathDataParser.cpp}\n * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n * http://mozilla.org/MPL/2.0/\n * @param toX\n * @param toY\n * @param rx\n * @param ry\n * @param {number} large 0 or 1 flag\n * @param {number} sweep 0 or 1 flag\n * @param rotateX\n */\nconst arcToSegments = (\n  toX: number,\n  toY: number,\n  rx: number,\n  ry: number,\n  large: number,\n  sweep: number,\n  rotateX: TRadian\n): TParsedAbsoluteCubicCurveCommand[] => {\n  if (rx === 0 || ry === 0) {\n    return [];\n  }\n  let fromX = 0,\n    fromY = 0,\n    root = 0;\n  const PI = Math.PI,\n    theta = rotateX * PiBy180,\n    sinTheta = sin(theta),\n    cosTh = cos(theta),\n    px = 0.5 * (-cosTh * toX - sinTheta * toY),\n    py = 0.5 * (-cosTh * toY + sinTheta * toX),\n    rx2 = rx ** 2,\n    ry2 = ry ** 2,\n    py2 = py ** 2,\n    px2 = px ** 2,\n    pl = rx2 * ry2 - rx2 * py2 - ry2 * px2;\n  let _rx = Math.abs(rx);\n  let _ry = Math.abs(ry);\n\n  if (pl < 0) {\n    const s = Math.sqrt(1 - pl / (rx2 * ry2));\n    _rx *= s;\n    _ry *= s;\n  } else {\n    root =\n      (large === sweep ? -1.0 : 1.0) * Math.sqrt(pl / (rx2 * py2 + ry2 * px2));\n  }\n\n  const cx = (root * _rx * py) / _ry,\n    cy = (-root * _ry * px) / _rx,\n    cx1 = cosTh * cx - sinTheta * cy + toX * 0.5,\n    cy1 = sinTheta * cx + cosTh * cy + toY * 0.5;\n  let mTheta = calcVectorAngle(1, 0, (px - cx) / _rx, (py - cy) / _ry);\n  let dtheta = calcVectorAngle(\n    (px - cx) / _rx,\n    (py - cy) / _ry,\n    (-px - cx) / _rx,\n    (-py - cy) / _ry\n  );\n\n  if (sweep === 0 && dtheta > 0) {\n    dtheta -= 2 * PI;\n  } else if (sweep === 1 && dtheta < 0) {\n    dtheta += 2 * PI;\n  }\n\n  // Convert into cubic bezier segments <= 90deg\n  const segments = Math.ceil(Math.abs((dtheta / PI) * 2)),\n    result = new Array(segments),\n    mDelta = dtheta / segments,\n    mT =\n      ((8 / 3) * Math.sin(mDelta / 4) * Math.sin(mDelta / 4)) /\n      Math.sin(mDelta / 2);\n  let th3 = mTheta + mDelta;\n\n  for (let i = 0; i < segments; i++) {\n    result[i] = segmentToBezier(\n      mTheta,\n      th3,\n      cosTh,\n      sinTheta,\n      _rx,\n      _ry,\n      cx1,\n      cy1,\n      mT,\n      fromX,\n      fromY\n    );\n    fromX = result[i][5];\n    fromY = result[i][6];\n    mTheta = th3;\n    th3 += mDelta;\n  }\n  return result;\n};\n\n/**\n * @private\n * Calculate the angle between two vectors\n * @param ux u endpoint x\n * @param uy u endpoint y\n * @param vx v endpoint x\n * @param vy v endpoint y\n */\nconst calcVectorAngle = (\n  ux: number,\n  uy: number,\n  vx: number,\n  vy: number\n): TRadian => {\n  const ta = Math.atan2(uy, ux),\n    tb = Math.atan2(vy, vx);\n  if (tb >= ta) {\n    return tb - ta;\n  } else {\n    return 2 * Math.PI - (ta - tb);\n  }\n};\n\n// functions for the Cubic beizer\n// taken from: https://github.com/konvajs/konva/blob/7.0.5/src/shapes/Path.ts#L350\nconst CB1 = (t: number) => t ** 3;\nconst CB2 = (t: number) => 3 * t ** 2 * (1 - t);\nconst CB3 = (t: number) => 3 * t * (1 - t) ** 2;\nconst CB4 = (t: number) => (1 - t) ** 3;\n\n/**\n * Calculate bounding box of a cubic Bezier curve\n * Taken from http://jsbin.com/ivomiq/56/edit (no credits available)\n * TODO: can we normalize this with the starting points set at 0 and then translated the bbox?\n * @param {number} begx starting point\n * @param {number} begy\n * @param {number} cp1x first control point\n * @param {number} cp1y\n * @param {number} cp2x second control point\n * @param {number} cp2y\n * @param {number} endx end of bezier\n * @param {number} endy\n * @return {TRectBounds} the rectangular bounds\n */\nexport function getBoundsOfCurve(\n  begx: number,\n  begy: number,\n  cp1x: number,\n  cp1y: number,\n  cp2x: number,\n  cp2y: number,\n  endx: number,\n  endy: number\n): TRectBounds {\n  let argsString: string;\n  if (config.cachesBoundsOfCurve) {\n    // eslint-disable-next-line\n    argsString = [...arguments].join();\n    if (cache.boundsOfCurveCache[argsString]) {\n      return cache.boundsOfCurveCache[argsString];\n    }\n  }\n\n  const sqrt = Math.sqrt,\n    abs = Math.abs,\n    tvalues = [],\n    bounds: [[x: number, y: number], [x: number, y: number]] = [\n      [0, 0],\n      [0, 0],\n    ];\n\n  let b = 6 * begx - 12 * cp1x + 6 * cp2x;\n  let a = -3 * begx + 9 * cp1x - 9 * cp2x + 3 * endx;\n  let c = 3 * cp1x - 3 * begx;\n\n  for (let i = 0; i < 2; ++i) {\n    if (i > 0) {\n      b = 6 * begy - 12 * cp1y + 6 * cp2y;\n      a = -3 * begy + 9 * cp1y - 9 * cp2y + 3 * endy;\n      c = 3 * cp1y - 3 * begy;\n    }\n\n    if (abs(a) < 1e-12) {\n      if (abs(b) < 1e-12) {\n        continue;\n      }\n      const t = -c / b;\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n      continue;\n    }\n    const b2ac = b * b - 4 * c * a;\n    if (b2ac < 0) {\n      continue;\n    }\n    const sqrtb2ac = sqrt(b2ac);\n    const t1 = (-b + sqrtb2ac) / (2 * a);\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n    const t2 = (-b - sqrtb2ac) / (2 * a);\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n\n  let j = tvalues.length;\n  const jlen = j;\n  const iterator = getPointOnCubicBezierIterator(\n    begx,\n    begy,\n    cp1x,\n    cp1y,\n    cp2x,\n    cp2y,\n    endx,\n    endy\n  );\n  while (j--) {\n    const { x, y } = iterator(tvalues[j]);\n    bounds[0][j] = x;\n    bounds[1][j] = y;\n  }\n\n  bounds[0][jlen] = begx;\n  bounds[1][jlen] = begy;\n  bounds[0][jlen + 1] = endx;\n  bounds[1][jlen + 1] = endy;\n  const result: TRectBounds = [\n    new Point(Math.min(...bounds[0]), Math.min(...bounds[1])),\n    new Point(Math.max(...bounds[0]), Math.max(...bounds[1])),\n  ];\n  if (config.cachesBoundsOfCurve) {\n    cache.boundsOfCurveCache[argsString!] = result;\n  }\n  return result;\n}\n\n/**\n * Converts arc to a bunch of cubic Bezier curves\n * @param {number} fx starting point x\n * @param {number} fy starting point y\n * @param {TParsedArcCommand} coords Arc command\n */\nexport const fromArcToBeziers = (\n  fx: number,\n  fy: number,\n  [_, rx, ry, rot, large, sweep, tx, ty]: TParsedArcCommand\n): TParsedAbsoluteCubicCurveCommand[] => {\n  const segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n  for (let i = 0, len = segsNorm.length; i < len; i++) {\n    segsNorm[i][1] += fx;\n    segsNorm[i][2] += fy;\n    segsNorm[i][3] += fx;\n    segsNorm[i][4] += fy;\n    segsNorm[i][5] += fx;\n    segsNorm[i][6] += fy;\n  }\n  return segsNorm;\n};\n\n/**\n * This function takes a parsed SVG path and makes it simpler for fabricJS logic.\n * Simplification consist of:\n * - All commands converted to absolute (lowercase to uppercase)\n * - S converted to C\n * - T converted to Q\n * - A converted to C\n * @param {TComplexPathData} path the array of commands of a parsed SVG path for `Path`\n * @return {TSimplePathData} the simplified array of commands of a parsed SVG path for `Path`\n * TODO: figure out how to remove the type assertions in a nice way\n */\nexport const makePathSimpler = (path: TComplexPathData): TSimplePathData => {\n  // x and y represent the last point of the path, AKA the previous command point.\n  // we add them to each relative command to make it an absolute comment.\n  // we also swap the v V h H with L, because are easier to transform.\n  let x = 0,\n    y = 0;\n  // x1 and y1 represent the last point of the subpath. the subpath is started with\n  // m or M command. When a z or Z command is drawn, x and y need to be resetted to\n  // the last x1 and y1.\n  let x1 = 0,\n    y1 = 0;\n  // previous will host the letter of the previous command, to handle S and T.\n  // controlX and controlY will host the previous reflected control point\n  const destinationPath: TSimplePathData = [];\n  let previous,\n    // placeholders\n    controlX = 0,\n    controlY = 0;\n  for (const parsedCommand of path) {\n    const current: TComplexParsedCommand = [...parsedCommand];\n    let converted: TSimpleParsedCommand | undefined;\n    switch (\n      current[0] // first letter\n    ) {\n      case 'l': // lineto, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'L':\n        x = current[1];\n        y = current[2];\n        converted = ['L', x, y];\n        break;\n      case 'h': // horizontal lineto, relative\n        current[1] += x;\n      // falls through\n      case 'H':\n        x = current[1];\n        converted = ['L', x, y];\n        break;\n      case 'v': // vertical lineto, relative\n        current[1] += y;\n      // falls through\n      case 'V':\n        y = current[1];\n        converted = ['L', x, y];\n        break;\n      case 'm': // moveTo, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'M':\n        x = current[1];\n        y = current[2];\n        x1 = current[1];\n        y1 = current[2];\n        converted = ['M', x, y];\n        break;\n      case 'c': // bezierCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n        current[5] += x;\n        current[6] += y;\n      // falls through\n      case 'C':\n        controlX = current[3];\n        controlY = current[4];\n        x = current[5];\n        y = current[6];\n        converted = ['C', current[1], current[2], controlX, controlY, x, y];\n        break;\n      case 's': // shorthand cubic bezierCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n      // falls through\n      case 'S':\n        // would be sScC but since we are swapping sSc for C, we check just that.\n        if (previous === 'C') {\n          // calculate reflection of previous control points\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        } else {\n          // If there is no previous command or if the previous command was not a C, c, S, or s,\n          // the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        x = current[3];\n        y = current[4];\n        converted = ['C', controlX, controlY, current[1], current[2], x, y];\n        // converted[3] and converted[4] are NOW the second control point.\n        // we keep it for the next reflection.\n        controlX = converted[3];\n        controlY = converted[4];\n        break;\n      case 'q': // quadraticCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n        current[3] += x;\n        current[4] += y;\n      // falls through\n      case 'Q':\n        controlX = current[1];\n        controlY = current[2];\n        x = current[3];\n        y = current[4];\n        converted = ['Q', controlX, controlY, x, y];\n        break;\n      case 't': // shorthand quadraticCurveTo, relative\n        current[1] += x;\n        current[2] += y;\n      // falls through\n      case 'T':\n        if (previous === 'Q') {\n          // calculate reflection of previous control point\n          controlX = 2 * x - controlX;\n          controlY = 2 * y - controlY;\n        } else {\n          // If there is no previous command or if the previous command was not a Q, q, T or t,\n          // assume the control point is coincident with the current point\n          controlX = x;\n          controlY = y;\n        }\n        x = current[1];\n        y = current[2];\n        converted = ['Q', controlX, controlY, x, y];\n        break;\n      case 'a':\n        current[6] += x;\n        current[7] += y;\n      // falls through\n      case 'A':\n        fromArcToBeziers(x, y, current).forEach((b) => destinationPath.push(b));\n        x = current[6];\n        y = current[7];\n        break;\n      case 'z':\n      case 'Z':\n        x = x1;\n        y = y1;\n        converted = ['Z'];\n        break;\n      default:\n    }\n    if (converted) {\n      destinationPath.push(converted);\n      previous = converted[0];\n    } else {\n      previous = '';\n    }\n  }\n  return destinationPath;\n};\n\n// todo verify if we can just use the point class here\n/**\n * Calc length from point x1,y1 to x2,y2\n * @param {number} x1 starting point x\n * @param {number} y1 starting point y\n * @param {number} x2 starting point x\n * @param {number} y2 starting point y\n * @return {number} length of segment\n */\nconst calcLineLength = (\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): number => Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n\n/**\n * Get an iterator that takes a percentage and returns a point\n * @param {number} begx\n * @param {number} begy\n * @param {number} cp1x\n * @param {number} cp1y\n * @param {number} cp2x\n * @param {number} cp2y\n * @param {number} endx\n * @param {number} endy\n */\nconst getPointOnCubicBezierIterator =\n  (\n    begx: number,\n    begy: number,\n    cp1x: number,\n    cp1y: number,\n    cp2x: number,\n    cp2y: number,\n    endx: number,\n    endy: number\n  ) =>\n  (pct: number) => {\n    const c1 = CB1(pct),\n      c2 = CB2(pct),\n      c3 = CB3(pct),\n      c4 = CB4(pct);\n    return new Point(\n      endx * c1 + cp2x * c2 + cp1x * c3 + begx * c4,\n      endy * c1 + cp2y * c2 + cp1y * c3 + begy * c4\n    );\n  };\n\nconst QB1 = (t: number) => t ** 2;\nconst QB2 = (t: number) => 2 * t * (1 - t);\nconst QB3 = (t: number) => (1 - t) ** 2;\n\nconst getTangentCubicIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number,\n    p4x: number,\n    p4y: number\n  ) =>\n  (pct: number) => {\n    const qb1 = QB1(pct),\n      qb2 = QB2(pct),\n      qb3 = QB3(pct),\n      tangentX =\n        3 * (qb3 * (p2x - p1x) + qb2 * (p3x - p2x) + qb1 * (p4x - p3x)),\n      tangentY =\n        3 * (qb3 * (p2y - p1y) + qb2 * (p3y - p2y) + qb1 * (p4y - p3y));\n    return Math.atan2(tangentY, tangentX);\n  };\n\nconst getPointOnQuadraticBezierIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number\n  ) =>\n  (pct: number) => {\n    const c1 = QB1(pct),\n      c2 = QB2(pct),\n      c3 = QB3(pct);\n    return new Point(\n      p3x * c1 + p2x * c2 + p1x * c3,\n      p3y * c1 + p2y * c2 + p1y * c3\n    );\n  };\n\nconst getTangentQuadraticIterator =\n  (\n    p1x: number,\n    p1y: number,\n    p2x: number,\n    p2y: number,\n    p3x: number,\n    p3y: number\n  ) =>\n  (pct: number) => {\n    const invT = 1 - pct,\n      tangentX = 2 * (invT * (p2x - p1x) + pct * (p3x - p2x)),\n      tangentY = 2 * (invT * (p2y - p1y) + pct * (p3y - p2y));\n    return Math.atan2(tangentY, tangentX);\n  };\n\n// this will run over a path segment (a cubic or quadratic segment) and approximate it\n// with 100 segments. This will good enough to calculate the length of the curve\nconst pathIterator = (\n  iterator: (pct: number) => Point,\n  x1: number,\n  y1: number\n) => {\n  let tempP = new Point(x1, y1),\n    tmpLen = 0;\n  for (let perc = 1; perc <= 100; perc += 1) {\n    const p = iterator(perc / 100);\n    tmpLen += calcLineLength(tempP.x, tempP.y, p.x, p.y);\n    tempP = p;\n  }\n  return tmpLen;\n};\n\n/**\n * Given a pathInfo, and a distance in pixels, find the percentage from 0 to 1\n * that correspond to that pixels run over the path.\n * The percentage will be then used to find the correct point on the canvas for the path.\n * @param {Array} segInfo fabricJS collection of information on a parsed path\n * @param {number} distance from starting point, in pixels.\n * @return {TPointAngle} info object with x and y ( the point on canvas ) and angle, the tangent on that point;\n */\nconst findPercentageForDistance = (\n  segInfo: TCurveInfo<'Q' | 'C'>,\n  distance: number\n): TPointAngle => {\n  let perc = 0,\n    tmpLen = 0,\n    tempP: XY = { x: segInfo.x, y: segInfo.y },\n    p: XY = { ...tempP },\n    nextLen: number,\n    nextStep = 0.01,\n    lastPerc = 0;\n  // nextStep > 0.0001 covers 0.00015625 that 1/64th of 1/100\n  // the path\n  const iterator = segInfo.iterator,\n    angleFinder = segInfo.angleFinder;\n  while (tmpLen < distance && nextStep > 0.0001) {\n    p = iterator(perc);\n    lastPerc = perc;\n    nextLen = calcLineLength(tempP.x, tempP.y, p.x, p.y);\n    // compare tmpLen each cycle with distance, decide next perc to test.\n    if (nextLen + tmpLen > distance) {\n      // we discard this step and we make smaller steps.\n      perc -= nextStep;\n      nextStep /= 2;\n    } else {\n      tempP = p;\n      perc += nextStep;\n      tmpLen += nextLen;\n    }\n  }\n  return { ...p, angle: angleFinder(lastPerc) };\n};\n\n/**\n * Run over a parsed and simplified path and extract some information (length of each command and starting point)\n * @param {TSimplePathData} path parsed path commands\n * @return {TPathSegmentInfo[]} path commands information\n */\nexport const getPathSegmentsInfo = (\n  path: TSimplePathData\n): TPathSegmentInfo[] => {\n  let totalLength = 0,\n    //x2 and y2 are the coords of segment start\n    //x1 and y1 are the coords of the current point\n    x1 = 0,\n    y1 = 0,\n    x2 = 0,\n    y2 = 0,\n    iterator,\n    tempInfo: TPathSegmentInfo;\n  const info: TPathSegmentInfo[] = [];\n  for (const current of path) {\n    const basicInfo: TPathSegmentInfoCommon<keyof TPathSegmentCommandInfo> = {\n      x: x1,\n      y: y1,\n      command: current[0],\n      length: 0,\n    };\n    switch (\n      current[0] //first letter\n    ) {\n      case 'M':\n        tempInfo = <TPathSegmentInfoCommon<'M'>>basicInfo;\n        tempInfo.x = x2 = x1 = current[1];\n        tempInfo.y = y2 = y1 = current[2];\n        break;\n      case 'L':\n        tempInfo = <TPathSegmentInfoCommon<'L'>>basicInfo;\n        tempInfo.length = calcLineLength(x1, y1, current[1], current[2]);\n        x1 = current[1];\n        y1 = current[2];\n        break;\n      case 'C':\n        iterator = getPointOnCubicBezierIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6]\n        );\n        tempInfo = <TCurveInfo<'C'>>basicInfo;\n        tempInfo.iterator = iterator;\n        tempInfo.angleFinder = getTangentCubicIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4],\n          current[5],\n          current[6]\n        );\n        tempInfo.length = pathIterator(iterator, x1, y1);\n\n        x1 = current[5];\n        y1 = current[6];\n        break;\n      case 'Q':\n        iterator = getPointOnQuadraticBezierIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4]\n        );\n        tempInfo = <TCurveInfo<'Q'>>basicInfo;\n        tempInfo.iterator = iterator;\n        tempInfo.angleFinder = getTangentQuadraticIterator(\n          x1,\n          y1,\n          current[1],\n          current[2],\n          current[3],\n          current[4]\n        );\n        tempInfo.length = pathIterator(iterator, x1, y1);\n        x1 = current[3];\n        y1 = current[4];\n        break;\n      case 'Z':\n        // we add those in order to ease calculations later\n        tempInfo = <TEndPathInfo>basicInfo;\n        tempInfo.destX = x2;\n        tempInfo.destY = y2;\n        tempInfo.length = calcLineLength(x1, y1, x2, y2);\n        x1 = x2;\n        y1 = y2;\n        break;\n    }\n    totalLength += tempInfo.length;\n    info.push(tempInfo);\n  }\n  info.push({ length: totalLength, x: x1, y: y1 });\n  return info;\n};\n\n/**\n * Get the point on the path that is distance along the path\n * @param path\n * @param distance\n * @param infos\n */\nexport const getPointOnPath = (\n  path: TSimplePathData,\n  distance: number,\n  infos: TPathSegmentInfo[] = getPathSegmentsInfo(path)\n): TPointAngle | undefined => {\n  let i = 0;\n  while (distance - infos[i].length > 0 && i < infos.length - 2) {\n    distance -= infos[i].length;\n    i++;\n  }\n  const segInfo = infos[i],\n    segPercent = distance / segInfo.length,\n    segment = path[i];\n\n  switch (segInfo.command) {\n    case 'M':\n      return { x: segInfo.x, y: segInfo.y, angle: 0 };\n    case 'Z':\n      return {\n        ...new Point(segInfo.x, segInfo.y).lerp(\n          new Point(segInfo.destX, segInfo.destY),\n          segPercent\n        ),\n        angle: Math.atan2(segInfo.destY - segInfo.y, segInfo.destX - segInfo.x),\n      };\n    case 'L':\n      return {\n        ...new Point(segInfo.x, segInfo.y).lerp(\n          new Point(segment[1]!, segment[2]!),\n          segPercent\n        ),\n        angle: Math.atan2(segment[2]! - segInfo.y, segment[1]! - segInfo.x),\n      };\n    case 'C':\n      return findPercentageForDistance(segInfo, distance);\n    case 'Q':\n      return findPercentageForDistance(segInfo, distance);\n    default:\n    // throw Error('Invalid command');\n  }\n};\n\n/**\n *\n * @param {string} pathString\n * @return {TComplexPathData} An array of SVG path commands\n * @example <caption>Usage</caption>\n * parsePath('M 3 4 Q 3 5 2 1 4 0 Q 9 12 2 1 4 0') === [\n *   ['M', 3, 4],\n *   ['Q', 3, 5, 2, 1, 4, 0],\n *   ['Q', 9, 12, 2, 1, 4, 0],\n * ];\n *\n */\nexport const parsePath = (pathString: string): TComplexPathData => {\n  // clean the string\n  // add spaces around the numbers\n  pathString = cleanupSvgAttribute(pathString);\n\n  const res: TComplexPathData = [];\n  for (const match of pathString.matchAll(new RegExp(rePathCommand, 'gi'))) {\n    let matchStr = match[0];\n    const chain: TComplexPathData = [];\n    let paramArr: RegExpExecArray | null;\n    do {\n      paramArr = new RegExp(rePathCommand, 'i').exec(matchStr);\n      if (!paramArr) {\n        break;\n      }\n      // ignore undefined match groups\n      const filteredGroups = paramArr.filter((g) => g);\n      // remove the first element from the match array since it's just the whole command\n      filteredGroups.shift();\n      // if we can't parse the number, just interpret it as a string\n      // (since it's probably the path command)\n      const command = filteredGroups.map((g) => {\n        const numParse = Number.parseFloat(g);\n        if (Number.isNaN(numParse)) {\n          return g;\n        } else {\n          return numParse;\n        }\n      });\n      chain.push(command as any);\n      // stop now if it's a z command\n      if (filteredGroups.length <= 1) {\n        break;\n      }\n      // remove the last part of the chained command\n      filteredGroups.shift();\n      // ` ?` is to support commands with optional spaces between flags\n      matchStr = matchStr.replace(\n        new RegExp(`${filteredGroups.join(' ?')} ?$`),\n        ''\n      );\n    } while (paramArr);\n    // add the chain, convert multiple m's to l's in the process\n    chain.reverse().forEach((c, idx) => {\n      const transformed = repeatedCommands[c[0]];\n      if (idx > 0 && (transformed == 'l' || transformed == 'L')) {\n        c[0] = transformed;\n      }\n      res.push(c);\n    });\n  }\n  return res;\n};\n\n/**\n *\n * Converts points to a smooth SVG path\n * @param {XY[]} points Array of points\n * @param {number} [correction] Apply a correction to the path (usually we use `width / 1000`). If value is undefined 0 is used as the correction value.\n * @return {(string|number)[][]} An array of SVG path commands\n */\nexport const getSmoothPathFromPoints = (\n  points: Point[],\n  correction = 0\n): TSimplePathData => {\n  let p1 = new Point(points[0]),\n    p2 = new Point(points[1]),\n    multSignX = 1,\n    multSignY = 0;\n  const path: TSimplePathData = [],\n    len = points.length,\n    manyPoints = len > 2;\n\n  if (manyPoints) {\n    multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n    multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n  }\n  path.push([\n    'M',\n    p1.x - multSignX * correction,\n    p1.y - multSignY * correction,\n  ]);\n  let i;\n  for (i = 1; i < len; i++) {\n    if (!p1.eq(p2)) {\n      const midPoint = p1.midPointFrom(p2);\n      // p1 is our bezier control point\n      // midpoint is our endpoint\n      // start point is p(i-1) value.\n      path.push(['Q', p1.x, p1.y, midPoint.x, midPoint.y]);\n    }\n    p1 = points[i];\n    if (i + 1 < points.length) {\n      p2 = points[i + 1];\n    }\n  }\n  if (manyPoints) {\n    multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n    multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n  }\n  path.push([\n    'L',\n    p1.x + multSignX * correction,\n    p1.y + multSignY * correction,\n  ]);\n  return path;\n};\n\n/**\n * Transform a path by transforming each segment.\n * it has to be a simplified path or it won't work.\n * WARNING: this depends from pathOffset for correct operation\n * @param {TSimplePathData} path fabricJS parsed and simplified path commands\n * @param {TMat2D} transform matrix that represent the transformation\n * @param {Point} [pathOffset] `Path.pathOffset`\n * @returns {TSimplePathData} the transformed path\n */\nexport const transformPath = (\n  path: TSimplePathData,\n  transform: TMat2D,\n  pathOffset: Point\n): TSimplePathData => {\n  if (pathOffset) {\n    transform = multiplyTransformMatrices(transform, [\n      1,\n      0,\n      0,\n      1,\n      -pathOffset.x,\n      -pathOffset.y,\n    ]);\n  }\n  return path.map((pathSegment) => {\n    const newSegment: TSimpleParsedCommand = [...pathSegment];\n    for (let i = 1; i < pathSegment.length - 1; i += 2) {\n      // TODO: is there a way to get around casting to any?\n      const { x, y } = transformPoint(\n        {\n          x: pathSegment[i] as number,\n          y: pathSegment[i + 1] as number,\n        },\n        transform\n      );\n      newSegment[i] = x;\n      newSegment[i + 1] = y;\n    }\n    return newSegment;\n  });\n};\n\n/**\n * Returns an array of path commands to create a regular polygon\n * @param {number} numVertexes\n * @param {number} radius\n * @returns {TSimplePathData} An array of SVG path commands\n */\nexport const getRegularPolygonPath = (\n  numVertexes: number,\n  radius: number\n): TSimplePathData => {\n  const interiorAngle = (Math.PI * 2) / numVertexes;\n  // rotationAdjustment rotates the path by 1/2 the interior angle so that the polygon always has a flat side on the bottom\n  // This isn't strictly necessary, but it's how we tend to think of and expect polygons to be drawn\n  let rotationAdjustment = -halfPI;\n  if (numVertexes % 2 === 0) {\n    rotationAdjustment += interiorAngle / 2;\n  }\n  const d = new Array(numVertexes + 1);\n  for (let i = 0; i < numVertexes; i++) {\n    const rad = i * interiorAngle + rotationAdjustment;\n    const { x, y } = new Point(cos(rad), sin(rad)).scalarMultiply(radius);\n    d[i] = [i === 0 ? 'M' : 'L', x, y];\n  }\n  d[numVertexes] = ['Z'];\n  return d;\n};\n\n/**\n * Join path commands to go back to svg format\n * @param {TSimplePathData} pathData fabricJS parsed path commands\n * @param {number} fractionDigits number of fraction digits to \"leave\"\n * @return {String} joined path 'M 0 0 L 20 30'\n */\nexport const joinPath = (pathData: TSimplePathData, fractionDigits?: number) =>\n  pathData\n    .map((segment) => {\n      return segment\n        .map((arg, i) => {\n          if (i === 0) return arg;\n          return fractionDigits === undefined\n            ? arg\n            : toFixed(arg, fractionDigits);\n        })\n        .join(' ');\n    })\n    .join(' ');\n","import { getFabricWindow } from '../../env';\nimport { noop } from '../../constants';\nimport type { Abortable } from '../../typedefs';\nimport { SignalAbortedError } from './console';\n\ntype requestOptions = Abortable & {\n  onComplete?: (xhr: XMLHttpRequest) => void;\n};\n\n/**\n * Cross-browser abstraction for sending XMLHttpRequest\n * @deprecated this has to go away, we can use a modern browser method to do the same.\n * @param {String} url URL to send XMLHttpRequest to\n * @param {Object} [options] Options object\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @param {Function} options.onComplete Callback to invoke when request is completed\n * @return {XMLHttpRequest} request\n */\n\nexport function request(url: string, options: requestOptions = {}) {\n  const onComplete = options.onComplete || noop,\n    xhr = new (getFabricWindow().XMLHttpRequest)(),\n    signal = options.signal,\n    abort = function () {\n      xhr.abort();\n    },\n    removeListener = function () {\n      signal && signal.removeEventListener('abort', abort);\n      xhr.onerror = xhr.ontimeout = noop;\n    };\n\n  if (signal && signal.aborted) {\n    throw new SignalAbortedError('request');\n  } else if (signal) {\n    signal.addEventListener('abort', abort, { once: true });\n  }\n\n  /** @ignore */\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState === 4) {\n      removeListener();\n      onComplete(xhr);\n      xhr.onreadystatechange = noop;\n    }\n  };\n\n  xhr.onerror = xhr.ontimeout = removeListener;\n\n  xhr.open('get', url, true);\n\n  xhr.send();\n  return xhr;\n}\n","import { CENTER } from '../constants';\nimport type { FabricImage } from '../shapes/Image';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TMat2D } from '../typedefs';\nimport { qrDecompose } from './misc/matrix';\n\ntype FabricObjectWithTransformMatrix = FabricObject & {\n  transformMatrix?: TMat2D;\n};\n\n/**\n * This function is an helper for svg import. it decompose the transformMatrix\n * and assign properties to object.\n * untransformed coordinates\n * @private\n */\nconst _assignTransformMatrixProps = (\n  object: FabricObjectWithTransformMatrix\n) => {\n  if (object.transformMatrix) {\n    const { scaleX, scaleY, angle, skewX } = qrDecompose(\n      object.transformMatrix\n    );\n    object.flipX = false;\n    object.flipY = false;\n    object.set('scaleX', scaleX);\n    object.set('scaleY', scaleY);\n    object.angle = angle;\n    object.skewX = skewX;\n    object.skewY = 0;\n  }\n};\n\n/**\n * This function is an helper for svg import. it removes the transform matrix\n * and set to object properties that fabricjs can handle\n * @private\n * @param {Object} preserveAspectRatioOptions\n */\nexport const removeTransformMatrixForSvgParsing = (\n  object: FabricObjectWithTransformMatrix,\n  preserveAspectRatioOptions?: any\n) => {\n  let center = object._findCenterFromElement();\n  if (object.transformMatrix) {\n    _assignTransformMatrixProps(object);\n    center = center.transform(object.transformMatrix);\n  }\n  delete object.transformMatrix;\n  if (preserveAspectRatioOptions) {\n    object.scaleX *= preserveAspectRatioOptions.scaleX;\n    object.scaleY *= preserveAspectRatioOptions.scaleY;\n    (object as FabricImage).cropX = preserveAspectRatioOptions.cropX;\n    (object as FabricImage).cropY = preserveAspectRatioOptions.cropY;\n    center.x += preserveAspectRatioOptions.offsetLeft;\n    center.y += preserveAspectRatioOptions.offsetTop;\n    object.width = preserveAspectRatioOptions.width;\n    object.height = preserveAspectRatioOptions.height;\n  }\n  object.setPositionByOrigin(center, CENTER, CENTER);\n};\n","import type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { sendObjectToPlane } from './planeChange';\nimport { Group } from '../../shapes/Group';\n/**\n * Merges 2 clip paths into one visually equal clip path\n *\n * **IMPORTANT**:\\\n * Does **NOT** clone the arguments, clone them proir if necessary.\n *\n * Creates a wrapper (group) that contains one clip path and is clipped by the other so content is kept where both overlap.\n * Use this method if both the clip paths may have nested clip paths of their own, so assigning one to the other's clip path property is not possible.\n *\n * In order to handle the `inverted` property we follow logic described in the following cases:\\\n * **(1)** both clip paths are inverted - the clip paths pass the inverted prop to the wrapper and loose it themselves.\\\n * **(2)** one is inverted and the other isn't - the wrapper shouldn't become inverted and the inverted clip path must clip the non inverted one to produce an identical visual effect.\\\n * **(3)** both clip paths are not inverted - wrapper and clip paths remain unchanged.\n *\n * @memberOf fabric.util\n * @param {fabric.Object} c1\n * @param {fabric.Object} c2\n * @returns {fabric.Object} merged clip path\n */\nexport const mergeClipPaths = (c1: FabricObject, c2: FabricObject) => {\n  let a = c1,\n    b = c2;\n  if (a.inverted && !b.inverted) {\n    //  case (2)\n    a = c2;\n    b = c1;\n  }\n  //  `b` becomes `a`'s clip path so we transform `b` to `a` coordinate plane\n  sendObjectToPlane(b, b.group?.calcTransformMatrix(), a.calcTransformMatrix());\n  //  assign the `inverted` prop to the wrapping group\n  const inverted = a.inverted && b.inverted;\n  if (inverted) {\n    //  case (1)\n    a.inverted = b.inverted = false;\n  }\n  return new Group([a], { clipPath: b, inverted });\n};\n","import type { Point } from '../../Point';\nimport type { TRadian } from '../../typedefs';\n/**\n * Rotates `point` around `origin` with `radians`\n * @deprecated use the Point.rotate\n * @param {Point} origin The origin of the rotation\n * @param {Point} origin The origin of the rotation\n * @param {TRadian} radians The radians of the angle for the rotation\n * @return {Point} The new rotated point\n */\nexport const rotatePoint = (\n  point: Point,\n  origin: Point,\n  radians: TRadian\n): Point => point.rotate(radians, origin);\n","import { getEnv, getFabricDocument } from '../../env';\nimport type { TSize } from '../../typedefs';\nimport { createCanvasElement, setStyle } from '../../util';\nimport type { CSSDimensions } from './util';\nimport {\n  allowTouchScrolling,\n  makeElementUnselectable,\n  setCSSDimensions,\n} from './util';\nimport type { CanvasItem } from './StaticCanvasDOMManager';\nimport { StaticCanvasDOMManager } from './StaticCanvasDOMManager';\nimport { setCanvasDimensions } from './util';\n\nexport class CanvasDOMManager extends StaticCanvasDOMManager {\n  upper: CanvasItem;\n  container: HTMLDivElement;\n\n  constructor(\n    arg0?: string | HTMLCanvasElement,\n    {\n      allowTouchScrolling = false,\n      containerClass = '',\n    }: {\n      allowTouchScrolling?: boolean;\n      /**\n       * @deprecated here only for backward compatibility\n       */\n      containerClass?: string;\n    } = {}\n  ) {\n    super(arg0);\n    const { el: lowerCanvasEl } = this.lower;\n    const upperCanvasEl = this.createUpperCanvas();\n    this.upper = { el: upperCanvasEl, ctx: upperCanvasEl.getContext('2d')! };\n    this.applyCanvasStyle(lowerCanvasEl, {\n      allowTouchScrolling,\n    });\n    this.applyCanvasStyle(upperCanvasEl, {\n      allowTouchScrolling,\n    });\n    const container = this.createContainerElement();\n    container.classList.add(containerClass);\n    if (lowerCanvasEl.parentNode) {\n      lowerCanvasEl.parentNode.replaceChild(container, lowerCanvasEl);\n    }\n    container.append(lowerCanvasEl, upperCanvasEl);\n    this.container = container;\n  }\n\n  protected createUpperCanvas() {\n    const { el: lowerCanvasEl } = this.lower;\n    const el = createCanvasElement();\n    // we assign the same classname of the lowerCanvas\n    el.className = lowerCanvasEl.className;\n    // but then we remove the lower-canvas specific className\n    el.classList.remove('lower-canvas');\n    // we add the specific upper-canvas class\n    el.classList.add('upper-canvas');\n    el.setAttribute('data-fabric', 'top');\n    el.style.cssText = lowerCanvasEl.style.cssText;\n    el.setAttribute('draggable', 'true');\n    return el;\n  }\n\n  protected createContainerElement() {\n    const container = getFabricDocument().createElement('div');\n    container.setAttribute('data-fabric', 'wrapper');\n    setStyle(container, {\n      position: 'relative',\n    });\n    makeElementUnselectable(container);\n    return container;\n  }\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} element canvas element to apply styles on\n   */\n  protected applyCanvasStyle(\n    element: HTMLCanvasElement,\n    { allowTouchScrolling: allow }: { allowTouchScrolling: boolean }\n  ) {\n    setStyle(element, {\n      position: 'absolute',\n      left: '0',\n      top: '0',\n    });\n    allowTouchScrolling(element, allow);\n    makeElementUnselectable(element);\n  }\n\n  setDimensions(size: TSize, retinaScaling: number) {\n    super.setDimensions(size, retinaScaling);\n    const { el, ctx } = this.upper;\n    setCanvasDimensions(el, ctx, size, retinaScaling);\n  }\n\n  setCSSDimensions(size: Partial<CSSDimensions>): void {\n    super.setCSSDimensions(size);\n    setCSSDimensions(this.upper.el, size);\n    setCSSDimensions(this.container, size);\n  }\n\n  cleanupDOM(size: TSize) {\n    const container = this.container,\n      { el: lowerCanvasEl } = this.lower,\n      { el: upperCanvasEl } = this.upper;\n    super.cleanupDOM(size);\n    container.removeChild(upperCanvasEl);\n    container.removeChild(lowerCanvasEl);\n    if (container.parentNode) {\n      container.parentNode.replaceChild(lowerCanvasEl, container);\n    }\n  }\n\n  dispose() {\n    super.dispose();\n    getEnv().dispose(this.upper.el);\n    // @ts-expect-error disposing\n    delete this.upper;\n    // @ts-expect-error disposing\n    delete this.container;\n  }\n}\n","import { dragHandler } from '../controls/drag';\nimport { getActionFromCorner } from '../controls/util';\nimport { Point } from '../Point';\nimport { FabricObject } from '../shapes/Object/FabricObject';\nimport type {\n  CanvasEvents,\n  ModifierKey,\n  TOptionalModifierKey,\n  TPointerEvent,\n  Transform,\n} from '../EventTypeDefs';\nimport {\n  addTransformToObject,\n  saveObjectTransform,\n} from '../util/misc/objectTransforms';\nimport type { TCanvasSizeOptions } from './StaticCanvas';\nimport { StaticCanvas } from './StaticCanvas';\nimport { isCollection } from '../Collection';\nimport { isTransparent } from '../util/misc/isTransparent';\nimport type {\n  TMat2D,\n  TOriginX,\n  TOriginY,\n  TSize,\n  TSVGReviver,\n} from '../typedefs';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { getPointer, isTouchEvent } from '../util/dom_event';\nimport type { IText } from '../shapes/IText/IText';\nimport type { BaseBrush } from '../brushes/BaseBrush';\nimport { pick } from '../util/misc/pick';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { cos, createCanvasElement, sin } from '../util';\nimport { CanvasDOMManager } from './DOMManagers/CanvasDOMManager';\nimport { BOTTOM, CENTER, LEFT, RIGHT, TOP } from '../constants';\nimport type { CanvasOptions } from './CanvasOptions';\nimport { canvasDefaults } from './CanvasOptions';\nimport { Intersection } from '../Intersection';\nimport { isActiveSelection } from '../util/typeAssertions';\n\n/**\n * Canvas class\n * @class Canvas\n * @extends StaticCanvas\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n *\n * @fires object:modified at the end of a transform\n * @fires object:rotating while an object is being rotated from the control\n * @fires object:scaling while an object is being scaled by controls\n * @fires object:moving while an object is being dragged\n * @fires object:skewing while an object is being skewed from the controls\n *\n * @fires before:transform before a transform is is started\n * @fires before:selection:cleared\n * @fires selection:cleared\n * @fires selection:updated\n * @fires selection:created\n *\n * @fires path:created after a drawing operation ends and the path is added\n * @fires mouse:down\n * @fires mouse:move\n * @fires mouse:up\n * @fires mouse:down:before  on mouse down, before the inner fabric logic runs\n * @fires mouse:move:before on mouse move, before the inner fabric logic runs\n * @fires mouse:up:before on mouse up, before the inner fabric logic runs\n * @fires mouse:over\n * @fires mouse:out\n * @fires mouse:dblclick whenever a native dbl click event fires on the canvas.\n *\n * @fires dragover\n * @fires dragenter\n * @fires dragleave\n * @fires drag:enter object drag enter\n * @fires drag:leave object drag leave\n * @fires drop:before before drop event. Prepare for the drop event (same native event).\n * @fires drop\n * @fires drop:after after drop event. Run logic on canvas after event has been accepted/declined (same native event).\n * @example\n * let a: fabric.Object, b: fabric.Object;\n * let flag = false;\n * canvas.add(a, b);\n * a.on('drop:before', opt => {\n *  //  we want a to accept the drop even though it's below b in the stack\n *  flag = this.canDrop(opt.e);\n * });\n * b.canDrop = function(e) {\n *  !flag && this.draggableTextDelegate.canDrop(e);\n * }\n * b.on('dragover', opt => b.set('fill', opt.dropTarget === b ? 'pink' : 'black'));\n * a.on('drop', opt => {\n *  opt.e.defaultPrevented  //  drop occurred\n *  opt.didDrop             //  drop occurred on canvas\n *  opt.target              //  drop target\n *  opt.target !== a && a.set('text', 'I lost');\n * });\n * canvas.on('drop:after', opt => {\n *  //  inform user who won\n *  if(!opt.e.defaultPrevented) {\n *    // no winners\n *  }\n *  else if(!opt.didDrop) {\n *    //  my objects didn't win, some other lucky object\n *  }\n *  else {\n *    //  we have a winner it's opt.target!!\n *  }\n * })\n *\n * @fires after:render at the end of the render process, receives the context in the callback\n * @fires before:render at start the render process, receives the context in the callback\n *\n * @fires contextmenu:before\n * @fires contextmenu\n * @example\n * let handler;\n * targets.forEach(target => {\n *   target.on('contextmenu:before', opt => {\n *     //  decide which target should handle the event before canvas hijacks it\n *     if (someCaseHappens && opt.targets.includes(target)) {\n *       handler = target;\n *     }\n *   });\n *   target.on('contextmenu', opt => {\n *     //  do something fantastic\n *   });\n * });\n * canvas.on('contextmenu', opt => {\n *   if (!handler) {\n *     //  no one takes responsibility, it's always left to me\n *     //  let's show them how it's done!\n *   }\n * });\n *\n */\nexport class SelectableCanvas<EventSpec extends CanvasEvents = CanvasEvents>\n  extends StaticCanvas<EventSpec>\n  implements Omit<CanvasOptions, 'enablePointerEvents'>\n{\n  declare _objects: FabricObject[];\n\n  // transform config\n  declare uniformScaling: boolean;\n  declare uniScaleKey: TOptionalModifierKey;\n  declare centeredScaling: boolean;\n  declare centeredRotation: boolean;\n  declare centeredKey: TOptionalModifierKey;\n  declare altActionKey: TOptionalModifierKey;\n\n  // selection config\n  declare selection: boolean;\n  declare selectionKey: TOptionalModifierKey | ModifierKey[];\n  declare altSelectionKey: TOptionalModifierKey;\n  declare selectionColor: string;\n  declare selectionDashArray: number[];\n  declare selectionBorderColor: string;\n  declare selectionLineWidth: number;\n  declare selectionFullyContained: boolean;\n\n  // cursors\n  declare hoverCursor: CSSStyleDeclaration['cursor'];\n  declare moveCursor: CSSStyleDeclaration['cursor'];\n  declare defaultCursor: CSSStyleDeclaration['cursor'];\n  declare freeDrawingCursor: CSSStyleDeclaration['cursor'];\n  declare notAllowedCursor: CSSStyleDeclaration['cursor'];\n\n  declare containerClass: string;\n\n  // target find config\n  declare perPixelTargetFind: boolean;\n  declare targetFindTolerance: number;\n  declare skipTargetFind: boolean;\n\n  /**\n   * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n   * After mousedown, mousemove creates a shape,\n   * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n   * @type Boolean\n   * @default\n   */\n  declare isDrawingMode: boolean;\n\n  declare preserveObjectStacking: boolean;\n\n  // event config\n  declare stopContextMenu: boolean;\n  declare fireRightClick: boolean;\n  declare fireMiddleClick: boolean;\n\n  /**\n   * Keep track of the subTargets for Mouse Events\n   * @type FabricObject[]\n   */\n  targets: FabricObject[] = [];\n\n  /**\n   * Keep track of the hovered target\n   * @type FabricObject | null\n   * @private\n   */\n  declare _hoveredTarget?: FabricObject;\n\n  /**\n   * hold the list of nested targets hovered\n   * @type FabricObject[]\n   * @private\n   */\n  _hoveredTargets: FabricObject[] = [];\n\n  /**\n   * hold the list of objects to render\n   * @type FabricObject[]\n   * @private\n   */\n  _objectsToRender?: FabricObject[];\n\n  /**\n   * hold a reference to a data structure that contains information\n   * on the current on going transform\n   * @type\n   * @private\n   */\n  _currentTransform: Transform | null = null;\n\n  /**\n   * hold a reference to a data structure used to track the selection\n   * box on canvas drag\n   * on the current on going transform\n   * x, y, deltaX and deltaY are in scene plane\n   * @type\n   * @private\n   */\n  protected _groupSelector: {\n    x: number;\n    y: number;\n    deltaX: number;\n    deltaY: number;\n  } | null = null;\n\n  /**\n   * internal flag used to understand if the context top requires a cleanup\n   * in case this is true, the contextTop will be cleared at the next render\n   * @type boolean\n   * @private\n   */\n  contextTopDirty = false;\n\n  /**\n   * During a mouse event we may need the pointer multiple times in multiple functions.\n   * _absolutePointer holds a reference to the pointer in fabricCanvas/design coordinates that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * We do this because there are some HTML DOM inspection functions to get the actual pointer coordinates\n   * @type {Point}\n   */\n  protected declare _absolutePointer?: Point;\n\n  /**\n   * During a mouse event we may need the pointer multiple times in multiple functions.\n   * _pointer holds a reference to the pointer in html coordinates that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * We do this because there are some HTML DOM inspection functions to get the actual pointer coordinates\n   * @type {Point}\n   */\n  protected declare _pointer?: Point;\n\n  /**\n   * During a mouse event we may need the target multiple times in multiple functions.\n   * _target holds a reference to the target that is valid for the event\n   * lifespan. Every fabricJS mouse event create and delete the cache every time\n   * @type {FabricObject}\n   */\n  protected declare _target?: FabricObject;\n\n  static ownDefaults = canvasDefaults;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...SelectableCanvas.ownDefaults };\n  }\n\n  declare elements: CanvasDOMManager;\n  get upperCanvasEl() {\n    return this.elements.upper?.el;\n  }\n  get contextTop() {\n    return this.elements.upper?.ctx;\n  }\n  get wrapperEl() {\n    return this.elements.container;\n  }\n  private declare pixelFindCanvasEl: HTMLCanvasElement;\n  private declare pixelFindContext: CanvasRenderingContext2D;\n\n  protected declare _isCurrentlyDrawing: boolean;\n  declare freeDrawingBrush?: BaseBrush;\n  declare _activeObject?: FabricObject;\n\n  protected initElements(el?: string | HTMLCanvasElement) {\n    this.elements = new CanvasDOMManager(el, {\n      allowTouchScrolling: this.allowTouchScrolling,\n      containerClass: this.containerClass,\n    });\n    this._createCacheCanvas();\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} obj Object that was added\n   */\n  _onObjectAdded(obj: FabricObject) {\n    this._objectsToRender = undefined;\n    super._onObjectAdded(obj);\n  }\n\n  /**\n   * @private\n   * @param {FabricObject} obj Object that was removed\n   */\n  _onObjectRemoved(obj: FabricObject) {\n    this._objectsToRender = undefined;\n    // removing active object should fire \"selection:cleared\" events\n    if (obj === this._activeObject) {\n      this.fire('before:selection:cleared', { deselected: [obj] });\n      this._discardActiveObject();\n      this.fire('selection:cleared', { deselected: [obj] });\n      obj.fire('deselected', {\n        target: obj,\n      });\n    }\n    if (obj === this._hoveredTarget) {\n      this._hoveredTarget = undefined;\n      this._hoveredTargets = [];\n    }\n    super._onObjectRemoved(obj);\n  }\n\n  _onStackOrderChanged() {\n    this._objectsToRender = undefined;\n    super._onStackOrderChanged();\n  }\n\n  /**\n   * Divides objects in two groups, one to render immediately\n   * and one to render as activeGroup.\n   * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n   */\n  _chooseObjectsToRender(): FabricObject[] {\n    const activeObject = this._activeObject;\n    return !this.preserveObjectStacking && activeObject\n      ? this._objects\n          .filter((object) => !object.group && object !== activeObject)\n          .concat(activeObject)\n      : this._objects;\n  }\n\n  /**\n   * Renders both the top canvas and the secondary container canvas.\n   */\n  renderAll() {\n    this.cancelRequestedRender();\n    if (this.destroyed) {\n      return;\n    }\n    if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n      this.clearContext(this.contextTop);\n      this.contextTopDirty = false;\n    }\n    if (this.hasLostContext) {\n      this.renderTopLayer(this.contextTop);\n      this.hasLostContext = false;\n    }\n    !this._objectsToRender &&\n      (this._objectsToRender = this._chooseObjectsToRender());\n    this.renderCanvas(this.getContext(), this._objectsToRender);\n  }\n\n  /**\n   * text selection is rendered by the active text instance during the rendering cycle\n   */\n  renderTopLayer(ctx: CanvasRenderingContext2D): void {\n    ctx.save();\n    if (this.isDrawingMode && this._isCurrentlyDrawing) {\n      this.freeDrawingBrush && this.freeDrawingBrush._render();\n      this.contextTopDirty = true;\n    }\n    // we render the top context - last object\n    if (this.selection && this._groupSelector) {\n      this._drawSelection(ctx);\n      this.contextTopDirty = true;\n    }\n    ctx.restore();\n  }\n\n  /**\n   * Method to render only the top canvas.\n   * Also used to render the group selection box.\n   * Does not render text selection.\n   */\n  renderTop() {\n    const ctx = this.contextTop;\n    this.clearContext(ctx);\n    this.renderTopLayer(ctx);\n    // todo: how do i know if the after:render is for the top or normal contex?\n    this.fire('after:render', { ctx });\n  }\n\n  /**\n   * Set the canvas tolerance value for pixel taret find.\n   * Use only integer numbers.\n   * @private\n   */\n  setTargetFindTolerance(value: number) {\n    value = Math.round(value);\n    this.targetFindTolerance = value;\n    const retina = this.getRetinaScaling();\n    const size = Math.ceil((value * 2 + 1) * retina);\n    this.pixelFindCanvasEl.width = this.pixelFindCanvasEl.height = size;\n    this.pixelFindContext.scale(retina, retina);\n  }\n\n  /**\n   * Returns true if object is transparent at a certain location\n   * Clarification: this is `is target transparent at location X or are controls there`\n   * @TODO this seems dumb that we treat controls with transparency. we can find controls\n   * programmatically without painting them, the cache canvas optimization is always valid\n   * @param {FabricObject} target Object to check\n   * @param {Number} x Left coordinate in viewport space\n   * @param {Number} y Top coordinate in viewport space\n   * @return {Boolean}\n   */\n  isTargetTransparent(target: FabricObject, x: number, y: number): boolean {\n    const tolerance = this.targetFindTolerance;\n    const ctx = this.pixelFindContext;\n    this.clearContext(ctx);\n    ctx.save();\n    ctx.translate(-x + tolerance, -y + tolerance);\n    ctx.transform(...this.viewportTransform);\n    const selectionBgc = target.selectionBackgroundColor;\n    target.selectionBackgroundColor = '';\n    target.render(ctx);\n    target.selectionBackgroundColor = selectionBgc;\n    ctx.restore();\n    // our canvas is square, and made around tolerance.\n    // so tolerance in this case also represent the center of the canvas.\n    const enhancedTolerance = Math.round(tolerance * this.getRetinaScaling());\n    return isTransparent(\n      ctx,\n      enhancedTolerance,\n      enhancedTolerance,\n      enhancedTolerance\n    );\n  }\n\n  /**\n   * takes an event and determines if selection key has been pressed\n   * @private\n   * @param {TPointerEvent} e Event object\n   */\n  _isSelectionKeyPressed(e: TPointerEvent): boolean {\n    const sKey = this.selectionKey;\n    if (!sKey) {\n      return false;\n    }\n    if (Array.isArray(sKey)) {\n      return !!sKey.find((key) => !!key && e[key] === true);\n    } else {\n      return e[sKey];\n    }\n  }\n\n  /**\n   * @private\n   * @param {TPointerEvent} e Event object\n   * @param {FabricObject} target\n   */\n  _shouldClearSelection(\n    e: TPointerEvent,\n    target?: FabricObject\n  ): target is undefined {\n    const activeObjects = this.getActiveObjects(),\n      activeObject = this._activeObject;\n\n    return !!(\n      !target ||\n      (target &&\n        activeObject &&\n        activeObjects.length > 1 &&\n        activeObjects.indexOf(target) === -1 &&\n        activeObject !== target &&\n        !this._isSelectionKeyPressed(e)) ||\n      (target && !target.evented) ||\n      (target && !target.selectable && activeObject && activeObject !== target)\n    );\n  }\n\n  /**\n   * This method will take in consideration a modifier key pressed and the control we are\n   * about to drag, and try to guess the anchor point ( origin ) of the transormation.\n   * This should be really in the realm of controls, and we should remove specific code for legacy\n   * embedded actions.\n   * @TODO this probably deserve discussion/rediscovery and change/refactor\n   * @private\n   * @deprecated\n   * @param {FabricObject} target\n   * @param {string} action\n   * @param {boolean} altKey\n   * @returns {boolean} true if the transformation should be centered\n   */\n  private _shouldCenterTransform(\n    target: FabricObject,\n    action: string,\n    modifierKeyPressed: boolean\n  ) {\n    if (!target) {\n      return;\n    }\n\n    let centerTransform;\n\n    if (\n      action === 'scale' ||\n      action === 'scaleX' ||\n      action === 'scaleY' ||\n      action === 'resizing'\n    ) {\n      centerTransform = this.centeredScaling || target.centeredScaling;\n    } else if (action === 'rotate') {\n      centerTransform = this.centeredRotation || target.centeredRotation;\n    }\n\n    return centerTransform ? !modifierKeyPressed : modifierKeyPressed;\n  }\n\n  /**\n   * Given the control clicked, determine the origin of the transform.\n   * This is bad because controls can totally have custom names\n   * should disappear before release 4.0\n   * @private\n   * @deprecated\n   */\n  _getOriginFromCorner(\n    target: FabricObject,\n    controlName: string\n  ): { x: TOriginX; y: TOriginY } {\n    const origin = {\n      x: target.originX,\n      y: target.originY,\n    };\n\n    if (!controlName) {\n      return origin;\n    }\n\n    // is a left control ?\n    if (['ml', 'tl', 'bl'].includes(controlName)) {\n      origin.x = RIGHT;\n      // is a right control ?\n    } else if (['mr', 'tr', 'br'].includes(controlName)) {\n      origin.x = LEFT;\n    }\n    // is a top control ?\n    if (['tl', 'mt', 'tr'].includes(controlName)) {\n      origin.y = BOTTOM;\n      // is a bottom control ?\n    } else if (['bl', 'mb', 'br'].includes(controlName)) {\n      origin.y = TOP;\n    }\n    return origin;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @param {FabricObject} target\n   * @param {boolean} [alreadySelected] pass true to setup the active control\n   */\n  _setupCurrentTransform(\n    e: TPointerEvent,\n    target: FabricObject,\n    alreadySelected: boolean\n  ): void {\n    const pointer = target.group\n      ? // transform pointer to target's containing coordinate plane\n        sendPointToPlane(\n          this.getScenePoint(e),\n          undefined,\n          target.group.calcTransformMatrix()\n        )\n      : this.getScenePoint(e);\n    const { key: corner = '', control } = target.getActiveControl() || {},\n      actionHandler =\n        alreadySelected && control\n          ? control.getActionHandler(e, target, control)?.bind(control)\n          : dragHandler,\n      action = getActionFromCorner(alreadySelected, corner, e, target),\n      altKey = e[this.centeredKey as ModifierKey],\n      origin = this._shouldCenterTransform(target, action, altKey)\n        ? ({ x: CENTER, y: CENTER } as const)\n        : this._getOriginFromCorner(target, corner),\n      /**\n       * relative to target's containing coordinate plane\n       * both agree on every point\n       **/\n      transform: Transform = {\n        target: target,\n        action,\n        actionHandler,\n        actionPerformed: false,\n        corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        theta: degreesToRadians(target.angle),\n        width: target.width,\n        height: target.height,\n        shiftKey: e.shiftKey,\n        altKey,\n        original: {\n          ...saveObjectTransform(target),\n          originX: origin.x,\n          originY: origin.y,\n        },\n      };\n\n    this._currentTransform = transform;\n\n    this.fire('before:transform', {\n      e,\n      transform,\n    });\n  }\n\n  /**\n   * Set the cursor type of the canvas element\n   * @param {String} value Cursor type of the canvas element.\n   * @see http://www.w3.org/TR/css3-ui/#cursor\n   */\n  setCursor(value: CSSStyleDeclaration['cursor']): void {\n    this.upperCanvasEl.style.cursor = value;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx to draw the selection on\n   */\n  _drawSelection(ctx: CanvasRenderingContext2D): void {\n    const { x, y, deltaX, deltaY } = this._groupSelector!,\n      start = new Point(x, y).transform(this.viewportTransform),\n      extent = new Point(x + deltaX, y + deltaY).transform(\n        this.viewportTransform\n      ),\n      strokeOffset = this.selectionLineWidth / 2;\n    let minX = Math.min(start.x, extent.x),\n      minY = Math.min(start.y, extent.y),\n      maxX = Math.max(start.x, extent.x),\n      maxY = Math.max(start.y, extent.y);\n\n    if (this.selectionColor) {\n      ctx.fillStyle = this.selectionColor;\n      ctx.fillRect(minX, minY, maxX - minX, maxY - minY);\n    }\n\n    if (!this.selectionLineWidth || !this.selectionBorderColor) {\n      return;\n    }\n    ctx.lineWidth = this.selectionLineWidth;\n    ctx.strokeStyle = this.selectionBorderColor;\n\n    minX += strokeOffset;\n    minY += strokeOffset;\n    maxX -= strokeOffset;\n    maxY -= strokeOffset;\n    // selection border\n    // @TODO: is _setLineDash still necessary on modern canvas?\n    FabricObject.prototype._setLineDash.call(\n      this,\n      ctx,\n      this.selectionDashArray\n    );\n    ctx.strokeRect(minX, minY, maxX - minX, maxY - minY);\n  }\n\n  /**\n   * Method that determines what object we are clicking on\n   * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n   * or the outside part of the corner.\n   * @param {Event} e mouse event\n   * @return {FabricObject | null} the target found\n   */\n  findTarget(e: TPointerEvent): FabricObject | undefined {\n    if (this.skipTargetFind) {\n      return undefined;\n    }\n\n    const pointer = this.getViewportPoint(e),\n      activeObject = this._activeObject,\n      aObjects = this.getActiveObjects();\n\n    this.targets = [];\n\n    if (activeObject && aObjects.length >= 1) {\n      if (activeObject._findTargetCorner(pointer, isTouchEvent(e))) {\n        // if we hit the corner of the active object, let's return that.\n        return activeObject;\n      } else if (\n        aObjects.length > 1 &&\n        // check pointer is over active selection and possibly perform `subTargetCheck`\n        this.searchPossibleTargets([activeObject], pointer)\n      ) {\n        // active selection does not select sub targets like normal groups\n        return activeObject;\n      } else if (\n        activeObject === this.searchPossibleTargets([activeObject], pointer)\n      ) {\n        // active object is not an active selection\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        } else {\n          const subTargets = this.targets;\n          this.targets = [];\n          const target = this.searchPossibleTargets(this._objects, pointer);\n          if (\n            e[this.altSelectionKey as ModifierKey] &&\n            target &&\n            target !== activeObject\n          ) {\n            // alt selection: select active object even though it is not the top most target\n            // restore targets\n            this.targets = subTargets;\n            return activeObject;\n          }\n          return target;\n        }\n      }\n    }\n\n    return this.searchPossibleTargets(this._objects, pointer);\n  }\n\n  /**\n   * Checks if the point is inside the object selection area including padding\n   * @param {FabricObject} obj Object to test against\n   * @param {Object} [pointer] point in scene coordinates\n   * @return {Boolean} true if point is contained within an area of given object\n   * @private\n   */\n  private _pointIsInObjectSelectionArea(obj: FabricObject, point: Point) {\n    // getCoords will already take care of group de-nesting\n    let coords = obj.getCoords();\n    const viewportZoom = this.getZoom();\n    const padding = obj.padding / viewportZoom;\n    if (padding) {\n      const [tl, tr, br, bl] = coords;\n      // what is the angle of the object?\n      // we could use getTotalAngle, but is way easier to look at it\n      // from how coords are oriented, since if something went wrong\n      // at least we are consistent.\n      const angleRadians = Math.atan2(tr.y - tl.y, tr.x - tl.x),\n        cosP = cos(angleRadians) * padding,\n        sinP = sin(angleRadians) * padding,\n        cosPSinP = cosP + sinP,\n        cosPMinusSinP = cosP - sinP;\n\n      coords = [\n        new Point(tl.x - cosPMinusSinP, tl.y - cosPSinP),\n        new Point(tr.x + cosPSinP, tr.y - cosPMinusSinP),\n        new Point(br.x + cosPMinusSinP, br.y + cosPSinP),\n        new Point(bl.x - cosPSinP, bl.y + cosPMinusSinP),\n      ];\n      // in case of padding we calculate the new coords on the fly.\n      // otherwise we have to maintain 2 sets of coordinates for everything.\n      // we can reiterate on storing them.\n      // if this is slow, for now the semplification is large and doesn't impact\n      // rendering.\n      // the idea behind this is that outside target check we don't need ot know\n      // where those coords are\n    }\n    return Intersection.isPointInPolygon(point, coords);\n  }\n\n  /**\n   * Checks point is inside the object selection condition. Either area with padding\n   * or over pixels if perPixelTargetFind is enabled\n   * @param {FabricObject} obj Object to test against\n   * @param {Object} [pointer] point from viewport.\n   * @return {Boolean} true if point is contained within an area of given object\n   * @private\n   */\n  _checkTarget(obj: FabricObject, pointer: Point): boolean {\n    if (\n      obj &&\n      obj.visible &&\n      obj.evented &&\n      this._pointIsInObjectSelectionArea(\n        obj,\n        sendPointToPlane(pointer, undefined, this.viewportTransform)\n      )\n    ) {\n      if (\n        (this.perPixelTargetFind || obj.perPixelTargetFind) &&\n        !(obj as unknown as IText).isEditing\n      ) {\n        if (!this.isTargetTransparent(obj, pointer.x, pointer.y)) {\n          return true;\n        }\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Internal Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n   * @param {Array} [objects] objects array to look into\n   * @param {Object} [pointer] x,y object of point coordinates we want to check.\n   * @return {FabricObject} **top most object from given `objects`** that contains pointer\n   * @private\n   */\n  _searchPossibleTargets(\n    objects: FabricObject[],\n    pointer: Point\n  ): FabricObject | undefined {\n    // Cache all targets where their bounding box contains point.\n    let i = objects.length;\n    // Do not check for currently grouped objects, since we check the parent group itself.\n    // until we call this function specifically to search inside the activeGroup\n    while (i--) {\n      const target = objects[i];\n      if (this._checkTarget(target, pointer)) {\n        if (isCollection(target) && target.subTargetCheck) {\n          const subTarget = this._searchPossibleTargets(\n            target._objects as FabricObject[],\n            pointer\n          );\n          subTarget && this.targets.push(subTarget);\n        }\n        return target;\n      }\n    }\n  }\n\n  /**\n   * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n   * @see {@link _searchPossibleTargets}\n   * @param {FabricObject[]} [objects] objects array to look into\n   * @param {Point} [pointer] coordinates from viewport to check.\n   * @return {FabricObject} **top most object on screen** that contains pointer\n   */\n  searchPossibleTargets(\n    objects: FabricObject[],\n    pointer: Point\n  ): FabricObject | undefined {\n    const target = this._searchPossibleTargets(objects, pointer);\n    // if we found something in this.targets, and the group is interactive, return that subTarget\n    // TODO: reverify why interactive. the target should be returned always, but selected only\n    // if interactive.\n    return target &&\n      isCollection(target) &&\n      target.interactive &&\n      this.targets[0]\n      ? this.targets[0]\n      : target;\n  }\n\n  /**\n   * @returns point existing in the same plane as the {@link HTMLCanvasElement},\n   * `(0, 0)` being the top left corner of the {@link HTMLCanvasElement}.\n   * This means that changes to the {@link viewportTransform} do not change the values of the point\n   * and it remains unchanged from the viewer's perspective.\n   *\n   * @example\n   * const scenePoint = sendPointToPlane(\n   *  this.getViewportPoint(e),\n   *  undefined,\n   *  canvas.viewportTransform\n   * );\n   *\n   */\n  getViewportPoint(e: TPointerEvent) {\n    if (this._pointer) {\n      return this._pointer;\n    }\n    return this.getPointer(e, true);\n  }\n\n  /**\n   * @returns point existing in the scene (the same plane as the plane {@link FabricObject#getCenterPoint} exists in).\n   * This means that changes to the {@link viewportTransform} do not change the values of the point,\n   * however, from the viewer's perspective, the point is changed.\n   *\n   * @example\n   * const viewportPoint = sendPointToPlane(\n   *  this.getScenePoint(e),\n   *  canvas.viewportTransform\n   * );\n   *\n   */\n  getScenePoint(e: TPointerEvent) {\n    if (this._absolutePointer) {\n      return this._absolutePointer;\n    }\n    return this.getPointer(e);\n  }\n\n  /**\n   * Returns pointer relative to canvas.\n   *\n   * @deprecated This method is deprecated since v6 to protect you from misuse.\n   * Use {@link getViewportPoint} or {@link getScenePoint} instead.\n   *\n   * @param {Event} e\n   * @param {Boolean} [fromViewport] whether to return the point from the viewport or in the scene\n   * @return {Point}\n   */\n  getPointer(e: TPointerEvent, fromViewport = false): Point {\n    const upperCanvasEl = this.upperCanvasEl,\n      bounds = upperCanvasEl.getBoundingClientRect();\n    let pointer = getPointer(e),\n      boundsWidth = bounds.width || 0,\n      boundsHeight = bounds.height || 0;\n\n    if (!boundsWidth || !boundsHeight) {\n      if (TOP in bounds && BOTTOM in bounds) {\n        boundsHeight = Math.abs(bounds.top - bounds.bottom);\n      }\n      if (RIGHT in bounds && LEFT in bounds) {\n        boundsWidth = Math.abs(bounds.right - bounds.left);\n      }\n    }\n\n    this.calcOffset();\n    pointer.x = pointer.x - this._offset.left;\n    pointer.y = pointer.y - this._offset.top;\n    if (!fromViewport) {\n      pointer = sendPointToPlane(pointer, undefined, this.viewportTransform);\n    }\n\n    const retinaScaling = this.getRetinaScaling();\n    if (retinaScaling !== 1) {\n      pointer.x /= retinaScaling;\n      pointer.y /= retinaScaling;\n    }\n\n    // If bounds are not available (i.e. not visible), do not apply scale.\n    const cssScale =\n      boundsWidth === 0 || boundsHeight === 0\n        ? new Point(1, 1)\n        : new Point(\n            upperCanvasEl.width / boundsWidth,\n            upperCanvasEl.height / boundsHeight\n          );\n\n    return pointer.multiply(cssScale);\n  }\n\n  /**\n   * Internal use only\n   * @protected\n   */\n  protected _setDimensionsImpl(\n    dimensions: TSize,\n    options?: TCanvasSizeOptions\n  ) {\n    // @ts-expect-error this method exists in the subclass - should be moved or declared as abstract\n    this._resetTransformEventData();\n    super._setDimensionsImpl(dimensions, options);\n    if (this._isCurrentlyDrawing) {\n      this.freeDrawingBrush &&\n        this.freeDrawingBrush._setBrushStyles(this.contextTop);\n    }\n  }\n\n  protected _createCacheCanvas() {\n    this.pixelFindCanvasEl = createCanvasElement();\n    this.pixelFindContext = this.pixelFindCanvasEl.getContext('2d', {\n      willReadFrequently: true,\n    })!;\n    this.setTargetFindTolerance(this.targetFindTolerance);\n  }\n\n  /**\n   * Returns context of top canvas where interactions are drawn\n   * @returns {CanvasRenderingContext2D}\n   */\n  getTopContext(): CanvasRenderingContext2D {\n    return this.elements.upper.ctx;\n  }\n\n  /**\n   * Returns context of canvas where object selection is drawn\n   * @alias\n   * @return {CanvasRenderingContext2D}\n   */\n  getSelectionContext(): CanvasRenderingContext2D {\n    return this.elements.upper.ctx;\n  }\n\n  /**\n   * Returns &lt;canvas> element on which object selection is drawn\n   * @return {HTMLCanvasElement}\n   */\n  getSelectionElement(): HTMLCanvasElement {\n    return this.elements.upper.el;\n  }\n\n  /**\n   * Returns currently active object\n   * @return {FabricObject | null} active object\n   */\n  getActiveObject(): FabricObject | undefined {\n    return this._activeObject;\n  }\n\n  /**\n   * Returns an array with the current selected objects\n   * @return {FabricObject[]} active objects array\n   */\n  getActiveObjects(): FabricObject[] {\n    const active = this._activeObject;\n    return isActiveSelection(active)\n      ? active.getObjects()\n      : active\n      ? [active]\n      : [];\n  }\n\n  /**\n   * @private\n   * Compares the old activeObject with the current one and fires correct events\n   * @param {FabricObject[]} oldObjects old activeObject\n   * @param {TPointerEvent} e mouse event triggering the selection events\n   */\n  _fireSelectionEvents(oldObjects: FabricObject[], e?: TPointerEvent) {\n    let somethingChanged = false,\n      invalidate = false;\n    const objects = this.getActiveObjects(),\n      added: FabricObject[] = [],\n      removed: FabricObject[] = [];\n\n    oldObjects.forEach((target) => {\n      if (!objects.includes(target)) {\n        somethingChanged = true;\n        target.fire('deselected', {\n          e,\n          target,\n        });\n        removed.push(target);\n      }\n    });\n\n    objects.forEach((target) => {\n      if (!oldObjects.includes(target)) {\n        somethingChanged = true;\n        target.fire('selected', {\n          e,\n          target,\n        });\n        added.push(target);\n      }\n    });\n\n    if (oldObjects.length > 0 && objects.length > 0) {\n      invalidate = true;\n      somethingChanged &&\n        this.fire('selection:updated', {\n          e,\n          selected: added,\n          deselected: removed,\n        });\n    } else if (objects.length > 0) {\n      invalidate = true;\n      this.fire('selection:created', {\n        e,\n        selected: added,\n      });\n    } else if (oldObjects.length > 0) {\n      invalidate = true;\n      this.fire('selection:cleared', {\n        e,\n        deselected: removed,\n      });\n    }\n    invalidate && (this._objectsToRender = undefined);\n  }\n\n  /**\n   * Sets given object as the only active object on canvas\n   * @param {FabricObject} object Object to set as an active one\n   * @param {TPointerEvent} [e] Event (passed along when firing \"object:selected\")\n   * @return {Boolean} true if the object has been selected\n   */\n  setActiveObject(object: FabricObject, e?: TPointerEvent) {\n    // we can't inline this, since _setActiveObject will change what getActiveObjects returns\n    const currentActives = this.getActiveObjects();\n    const selected = this._setActiveObject(object, e);\n    this._fireSelectionEvents(currentActives, e);\n    return selected;\n  }\n\n  /**\n   * This is supposed to be equivalent to setActiveObject but without firing\n   * any event. There is commitment to have this stay this way.\n   * This is the functional part of setActiveObject.\n   * @param {Object} object to set as active\n   * @param {Event} [e] Event (passed along when firing \"object:selected\")\n   * @return {Boolean} true if the object has been selected\n   */\n  _setActiveObject(object: FabricObject, e?: TPointerEvent) {\n    const prevActiveObject = this._activeObject;\n    if (prevActiveObject === object) {\n      return false;\n    }\n    // after calling this._discardActiveObject, this,_activeObject could be undefined\n    if (!this._discardActiveObject(e, object) && this._activeObject) {\n      // refused to deselect\n      return false;\n    }\n    if (object.onSelect({ e })) {\n      return false;\n    }\n\n    this._activeObject = object;\n\n    if (isActiveSelection(object) && prevActiveObject !== object) {\n      object.set('canvas', this);\n      object.setCoords();\n    }\n\n    return true;\n  }\n\n  /**\n   * This is supposed to be equivalent to discardActiveObject but without firing\n   * any selection events ( can still fire object transformation events ). There is commitment to have this stay this way.\n   * This is the functional part of discardActiveObject.\n   * @param {Event} [e] Event (passed along when firing \"object:deselected\")\n   * @param {Object} object the next object to set as active, reason why we are discarding this\n   * @return {Boolean} true if the active object has been discarded\n   */\n  _discardActiveObject(\n    e?: TPointerEvent,\n    object?: FabricObject\n  ): this is { _activeObject: undefined } {\n    const obj = this._activeObject;\n    if (obj) {\n      // onDeselect return TRUE to cancel selection;\n      if (obj.onDeselect({ e, object })) {\n        return false;\n      }\n      if (this._currentTransform && this._currentTransform.target === obj) {\n        this.endCurrentTransform(e);\n      }\n      this._activeObject = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Discards currently active object and fire events. If the function is called by fabric\n   * as a consequence of a mouse event, the event is passed as a parameter and\n   * sent to the fire function for the custom events. When used as a method the\n   * e param does not have any application.\n   * @param {event} e\n   * @return {Boolean} true if the active object has been discarded\n   */\n  discardActiveObject(e?: TPointerEvent): this is { _activeObject: undefined } {\n    const currentActives = this.getActiveObjects(),\n      activeObject = this.getActiveObject();\n    if (currentActives.length) {\n      this.fire('before:selection:cleared', {\n        e,\n        deselected: [activeObject!],\n      });\n    }\n    const discarded = this._discardActiveObject(e);\n    this._fireSelectionEvents(currentActives, e);\n    return discarded;\n  }\n\n  /**\n   * End the current transform.\n   * You don't usually need to call this method unless you are interrupting a user initiated transform\n   * because of some other event ( a press of key combination, or something that block the user UX )\n   * @param {Event} [e] send the mouse event that generate the finalize down, so it can be used in the event\n   */\n  endCurrentTransform(e?: TPointerEvent) {\n    const transform = this._currentTransform;\n    this._finalizeCurrentTransform(e);\n    if (transform && transform.target) {\n      // this could probably go inside _finalizeCurrentTransform\n      transform.target.isMoving = false;\n    }\n    this._currentTransform = null;\n  }\n\n  /**\n   * @private\n   * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n   */\n  _finalizeCurrentTransform(e?: TPointerEvent) {\n    const transform = this._currentTransform!,\n      target = transform.target,\n      options = {\n        e,\n        target,\n        transform,\n        action: transform.action,\n      };\n\n    if (target._scaling) {\n      target._scaling = false;\n    }\n\n    target.setCoords();\n\n    if (transform.actionPerformed) {\n      this.fire('object:modified', options);\n      target.fire('modified', options);\n    }\n  }\n\n  /**\n   * Sets viewport transformation of this canvas instance\n   * @param {Array} vpt a Canvas 2D API transform matrix\n   */\n  setViewportTransform(vpt: TMat2D) {\n    super.setViewportTransform(vpt);\n    const activeObject = this._activeObject;\n    if (activeObject) {\n      activeObject.setCoords();\n    }\n  }\n\n  /**\n   * @override clears active selection ref and interactive canvas elements and contexts\n   */\n  destroy() {\n    // dispose of active selection\n    const activeObject = this._activeObject;\n    if (isActiveSelection(activeObject)) {\n      activeObject.removeAll();\n      activeObject.dispose();\n    }\n\n    delete this._activeObject;\n\n    super.destroy();\n\n    // free resources\n\n    // pixel find canvas\n    // @ts-expect-error disposing\n    this.pixelFindContext = null;\n    // @ts-expect-error disposing\n    this.pixelFindCanvasEl = undefined;\n  }\n\n  /**\n   * Clears all contexts (background, main, top) of an instance\n   */\n  clear() {\n    // discard active object and fire events\n    this.discardActiveObject();\n    // make sure we clear the active object in case it refused to be discarded\n    this._activeObject = undefined;\n    this.clearContext(this.contextTop);\n    super.clear();\n  }\n\n  /**\n   * Draws objects' controls (borders/controls)\n   * @param {CanvasRenderingContext2D} ctx Context to render controls on\n   */\n  drawControls(ctx: CanvasRenderingContext2D) {\n    const activeObject = this._activeObject;\n\n    if (activeObject) {\n      activeObject._renderControls(ctx);\n    }\n  }\n\n  /**\n   * @private\n   */\n  protected _toObject(\n    instance: FabricObject,\n    methodName: 'toObject' | 'toDatalessObject',\n    propertiesToInclude: string[]\n  ): Record<string, any> {\n    // If the object is part of the current selection group, it should\n    // be transformed appropriately\n    // i.e. it should be serialised as it would appear if the selection group\n    // were to be destroyed.\n    const originalProperties = this._realizeGroupTransformOnObject(instance),\n      object = super._toObject(instance, methodName, propertiesToInclude);\n    //Undo the damage we did by changing all of its properties\n    instance.set(originalProperties);\n    return object;\n  }\n\n  /**\n   * Realizes an object's group transformation on it\n   * @private\n   * @param {FabricObject} [instance] the object to transform (gets mutated)\n   * @returns the original values of instance which were changed\n   */\n  private _realizeGroupTransformOnObject(\n    instance: FabricObject\n  ): Partial<typeof instance> {\n    const { group } = instance;\n    if (group && isActiveSelection(group) && this._activeObject === group) {\n      const layoutProps = [\n        'angle',\n        'flipX',\n        'flipY',\n        LEFT,\n        'scaleX',\n        'scaleY',\n        'skewX',\n        'skewY',\n        TOP,\n      ] as (keyof typeof instance)[];\n      const originalValues = pick<typeof instance>(instance, layoutProps);\n      addTransformToObject(instance, group.calcOwnMatrix());\n      return originalValues;\n    } else {\n      return {};\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setSVGObject(\n    markup: string[],\n    instance: FabricObject,\n    reviver: TSVGReviver\n  ) {\n    // If the object is in a selection group, simulate what would happen to that\n    // object when the group is deselected\n    const originalProperties = this._realizeGroupTransformOnObject(instance);\n    super._setSVGObject(markup, instance, reviver);\n    instance.set(originalProperties);\n  }\n}\n","import type { ModifierKey, TOptionalModifierKey } from '../EventTypeDefs';\nimport type { TOptions } from '../typedefs';\nimport type { StaticCanvasOptions } from './StaticCanvasOptions';\n\nexport interface CanvasTransformOptions {\n  /**\n   * When true, objects can be transformed by one side (unproportionately)\n   * when dragged on the corners that normally would not do that.\n   * @type Boolean\n   * @default\n   * @since fabric 4.0 // changed name and default value\n   */\n  uniformScaling: boolean;\n\n  /**\n   * Indicates which key switches uniform scaling.\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled.\n   * totally wrong named. this sounds like `uniform scaling`\n   * if Canvas.uniformScaling is true, pressing this will set it to false\n   * and viceversa.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  uniScaleKey: TOptionalModifierKey;\n\n  /**\n   * When true, objects use center point as the origin of scale transformation.\n   * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n   * @since 1.3.4\n   * @type Boolean\n   * @default\n   */\n  centeredScaling: boolean;\n\n  /**\n   * When true, objects use center point as the origin of rotate transformation.\n   * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n   * @since 1.3.4\n   * @type Boolean\n   * @default\n   */\n  centeredRotation: boolean;\n\n  /**\n   * Indicates which key enable centered Transform\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled feature disabled.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  centeredKey: TOptionalModifierKey;\n\n  /**\n   * Indicates which key enable alternate action on corner\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled feature disabled.\n   * @since 1.6.2\n   * @type ModifierKey\n   * @default\n   */\n  altActionKey: TOptionalModifierKey;\n}\n\nexport interface CanvasSelectionOptions {\n  /**\n   * Indicates whether group selection should be enabled\n   * @type Boolean\n   * @default\n   */\n  selection: boolean;\n\n  /**\n   * Indicates which key or keys enable multiple click selection\n   * Pass value as a string or array of strings\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * If `null` or empty or containing any other string that is not a modifier key\n   * feature is disabled.\n   * @since 1.6.2\n   * @type ModifierKey|ModifierKey[]\n   * @default\n   */\n  selectionKey: TOptionalModifierKey | ModifierKey[];\n\n  /**\n   * Indicates which key enable alternative selection\n   * in case of target overlapping with active object\n   * values: 'altKey', 'shiftKey', 'ctrlKey'.\n   * For a series of reason that come from the general expectations on how\n   * things should work, this feature works only for preserveObjectStacking true.\n   * If `null` or 'none' or any other string that is not a modifier key\n   * feature is disabled.\n   * @since 1.6.5\n   * @type null|ModifierKey\n   * @default\n   */\n  altSelectionKey: TOptionalModifierKey;\n\n  /**\n   * Color of selection\n   * @type String\n   * @default\n   */\n  selectionColor: string;\n\n  /**\n   * Default dash array pattern\n   * If not empty the selection border is dashed\n   * @type Array\n   */\n  selectionDashArray: number[];\n\n  /**\n   * Color of the border of selection (usually slightly darker than color of selection itself)\n   * @type String\n   * @default\n   */\n  selectionBorderColor: string;\n\n  /**\n   * Width of a line used in object/group selection\n   * @type Number\n   * @default\n   */\n  selectionLineWidth: number;\n\n  /**\n   * Select only shapes that are fully contained in the dragged selection rectangle.\n   * @type Boolean\n   * @default\n   */\n  selectionFullyContained: boolean;\n}\n\nexport interface CanvasCursorOptions {\n  /**\n   * Default cursor value used when hovering over an object on canvas\n   * @type CSSStyleDeclaration['cursor']\n   * @default move\n   */\n  hoverCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Default cursor value used when moving an object on canvas\n   * @type CSSStyleDeclaration['cursor']\n   * @default move\n   */\n  moveCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Default cursor value used for the entire canvas\n   * @type String\n   * @default default\n   */\n  defaultCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Cursor value used during free drawing\n   * @type String\n   * @default crosshair\n   */\n  freeDrawingCursor: CSSStyleDeclaration['cursor'];\n\n  /**\n   * Cursor value used for disabled elements ( corners with disabled action )\n   * @type String\n   * @since 2.0.0\n   * @default not-allowed\n   */\n  notAllowedCursor: CSSStyleDeclaration['cursor'];\n}\n\nexport interface TargetFindOptions {\n  /**\n   * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n   * @type Boolean\n   * @default\n   */\n  perPixelTargetFind: boolean;\n\n  /**\n   * Number of pixels around target pixel to tolerate (consider active) during object detection\n   * @type Number\n   * @default\n   */\n  targetFindTolerance: number;\n\n  /**\n   * When true, target detection is skipped. Target detection will return always undefined.\n   * click selection won't work anymore, events will fire with no targets.\n   * if something is selected before setting it to true, it will be deselected at the first click.\n   * area selection will still work. check the `selection` property too.\n   * if you deactivate both, you should look into staticCanvas.\n   * @type Boolean\n   * @default\n   */\n  skipTargetFind: boolean;\n}\n\nexport interface CanvasEventsOptions {\n  /**\n   * Indicates if the right click on canvas can output the context menu or not\n   * @type Boolean\n   * @since 1.6.5\n   * @default\n   */\n  stopContextMenu: boolean;\n\n  /**\n   * Indicates if the canvas can fire right click events\n   * @type Boolean\n   * @since 1.6.5\n   * @default\n   */\n  fireRightClick: boolean;\n\n  /**\n   * Indicates if the canvas can fire middle click events\n   * @type Boolean\n   * @since 1.7.8\n   * @default\n   */\n  fireMiddleClick: boolean;\n\n  /**\n   * When the option is enabled, PointerEvent is used instead of TPointerEvent.\n   * @type Boolean\n   * @default\n   */\n  enablePointerEvents: boolean;\n}\n\nexport interface CanvasOptions\n  extends StaticCanvasOptions,\n    CanvasTransformOptions,\n    CanvasSelectionOptions,\n    CanvasCursorOptions,\n    TargetFindOptions,\n    CanvasEventsOptions {\n  /**\n   * Default element class that's given to wrapper (div) element of canvas\n   * @type String\n   * @default\n   * @deprecated customize {@link CanvasDOMManager} instead or access {@link elements} directly\n   */\n  containerClass: string;\n\n  /**\n   * Indicates whether objects should remain in current stack position when selected.\n   * When false objects are brought to top and rendered as part of the selection group\n   * @type Boolean\n   * @default\n   */\n  preserveObjectStacking: boolean;\n}\n\nexport type TCanvasOptions = TOptions<CanvasOptions>;\n\nexport const canvasDefaults: TOptions<CanvasOptions> = {\n  uniformScaling: true,\n  uniScaleKey: 'shiftKey',\n  centeredScaling: false,\n  centeredRotation: false,\n  centeredKey: 'altKey',\n  altActionKey: 'shiftKey',\n\n  selection: true,\n  selectionKey: 'shiftKey',\n  selectionColor: 'rgba(100, 100, 255, 0.3)',\n  selectionDashArray: [],\n  selectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n  selectionLineWidth: 1,\n  selectionFullyContained: false,\n\n  hoverCursor: 'move',\n  moveCursor: 'move',\n  defaultCursor: 'default',\n  freeDrawingCursor: 'crosshair',\n  notAllowedCursor: 'not-allowed',\n\n  perPixelTargetFind: false,\n  targetFindTolerance: 0,\n  skipTargetFind: false,\n\n  stopContextMenu: false,\n  fireRightClick: false,\n  fireMiddleClick: false,\n  enablePointerEvents: false,\n\n  containerClass: 'canvas-container',\n\n  preserveObjectStacking: false,\n};\n","import type { TPointerEvent } from '../EventTypeDefs';\nimport type { ITextBehavior } from '../shapes/IText/ITextBehavior';\nimport { removeFromArray } from '../util/internals';\nimport type { Canvas } from './Canvas';\n\n/**\n * In charge of synchronizing all interactive text instances of a canvas\n */\nexport class TextEditingManager {\n  private targets: ITextBehavior[] = [];\n  private declare target?: ITextBehavior;\n  private __disposer: VoidFunction;\n\n  constructor(canvas: Canvas) {\n    const cb = () => {\n      const { hiddenTextarea } =\n        (canvas.getActiveObject() as ITextBehavior) || {};\n      hiddenTextarea && hiddenTextarea.focus();\n    };\n    const el = canvas.upperCanvasEl;\n    el.addEventListener('click', cb);\n    this.__disposer = () => el.removeEventListener('click', cb);\n  }\n\n  exitTextEditing() {\n    this.target = undefined;\n    this.targets.forEach((target) => {\n      if (target.isEditing) {\n        target.exitEditing();\n      }\n    });\n  }\n\n  add(target: ITextBehavior) {\n    this.targets.push(target);\n  }\n\n  remove(target: ITextBehavior) {\n    this.unregister(target);\n    removeFromArray(this.targets, target);\n  }\n\n  register(target: ITextBehavior) {\n    this.target = target;\n  }\n\n  unregister(target: ITextBehavior) {\n    if (target === this.target) {\n      this.target = undefined;\n    }\n  }\n\n  onMouseMove(e: TPointerEvent) {\n    this.target?.isEditing && this.target.updateSelectionOnMouseMove(e);\n  }\n\n  clear() {\n    this.targets = [];\n    this.target = undefined;\n  }\n\n  dispose() {\n    this.clear();\n    this.__disposer();\n    // @ts-expect-error disposing\n    delete this.__disposer;\n  }\n}\n","import { classRegistry } from '../ClassRegistry';\nimport { NONE } from '../constants';\nimport type {\n  CanvasEvents,\n  DragEventData,\n  ObjectEvents,\n  TPointerEvent,\n  TPointerEventNames,\n  Transform,\n} from '../EventTypeDefs';\nimport { Point } from '../Point';\nimport type { ActiveSelection } from '../shapes/ActiveSelection';\nimport type { Group } from '../shapes/Group';\nimport type { IText } from '../shapes/IText/IText';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { isTouchEvent, stopEvent } from '../util/dom_event';\nimport { getDocumentFromElement, getWindowFromElement } from '../util/dom_misc';\nimport { sendPointToPlane } from '../util/misc/planeChange';\nimport { isActiveSelection } from '../util/typeAssertions';\nimport type { CanvasOptions, TCanvasOptions } from './CanvasOptions';\nimport { SelectableCanvas } from './SelectableCanvas';\nimport { TextEditingManager } from './TextEditingManager';\n\nconst addEventOptions = { passive: false } as EventListenerOptions;\n\nconst getEventPoints = (canvas: Canvas, e: TPointerEvent) => {\n  const viewportPoint = canvas.getViewportPoint(e);\n  const scenePoint = canvas.getScenePoint(e);\n  return {\n    viewportPoint,\n    scenePoint,\n    pointer: viewportPoint,\n    absolutePointer: scenePoint,\n  };\n};\n\n// just to be clear, the utils are now deprecated and those are here exactly as minifier helpers\n// because el.addEventListener can't me be minified while a const yes and we use it 47 times in this file.\n// few bytes but why give it away.\nconst addListener = (\n  el: HTMLElement | Document,\n  ...args: Parameters<HTMLElement['addEventListener']>\n) => el.addEventListener(...args);\nconst removeListener = (\n  el: HTMLElement | Document,\n  ...args: Parameters<HTMLElement['removeEventListener']>\n) => el.removeEventListener(...args);\n\nconst syntheticEventConfig = {\n  mouse: {\n    in: 'over',\n    out: 'out',\n    targetIn: 'mouseover',\n    targetOut: 'mouseout',\n    canvasIn: 'mouse:over',\n    canvasOut: 'mouse:out',\n  },\n  drag: {\n    in: 'enter',\n    out: 'leave',\n    targetIn: 'dragenter',\n    targetOut: 'dragleave',\n    canvasIn: 'drag:enter',\n    canvasOut: 'drag:leave',\n  },\n} as const;\n\ntype TSyntheticEventContext = {\n  mouse: { e: TPointerEvent };\n  drag: DragEventData;\n};\n\nexport class Canvas extends SelectableCanvas implements CanvasOptions {\n  /**\n   * Contains the id of the touch event that owns the fabric transform\n   * @type Number\n   * @private\n   */\n  declare mainTouchId?: number;\n\n  declare enablePointerEvents: boolean;\n\n  /**\n   * Holds a reference to a setTimeout timer for event synchronization\n   * @type number\n   * @private\n   */\n  private declare _willAddMouseDown: number;\n\n  /**\n   * Holds a reference to an object on the canvas that is receiving the drag over event.\n   * @type FabricObject\n   * @private\n   */\n  private declare _draggedoverTarget?: FabricObject;\n\n  /**\n   * Holds a reference to an object on the canvas from where the drag operation started\n   * @type FabricObject\n   * @private\n   */\n  private declare _dragSource?: FabricObject;\n\n  /**\n   * Holds a reference to an object on the canvas that is the current drop target\n   * May differ from {@link _draggedoverTarget}\n   * @todo inspect whether {@link _draggedoverTarget} and {@link _dropTarget} should be merged somehow\n   * @type FabricObject\n   * @private\n   */\n  private declare _dropTarget: FabricObject<ObjectEvents> | undefined;\n\n  private _isClick: boolean;\n\n  textEditingManager = new TextEditingManager(this);\n\n  constructor(el?: string | HTMLCanvasElement, options: TCanvasOptions = {}) {\n    super(el, options);\n    // bind event handlers\n    (\n      [\n        '_onMouseDown',\n        '_onTouchStart',\n        '_onMouseMove',\n        '_onMouseUp',\n        '_onTouchEnd',\n        '_onResize',\n        // '_onGesture',\n        // '_onDrag',\n        // '_onShake',\n        // '_onLongPress',\n        // '_onOrientationChange',\n        '_onMouseWheel',\n        '_onMouseOut',\n        '_onMouseEnter',\n        '_onContextMenu',\n        '_onDoubleClick',\n        '_onDragStart',\n        '_onDragEnd',\n        '_onDragProgress',\n        '_onDragOver',\n        '_onDragEnter',\n        '_onDragLeave',\n        '_onDrop',\n      ] as (keyof this)[]\n    ).forEach((eventHandler) => {\n      this[eventHandler] = (this[eventHandler] as Function).bind(this);\n    });\n    // register event handlers\n    this.addOrRemove(addListener, 'add');\n  }\n\n  /**\n   * return an event prefix pointer or mouse.\n   * @private\n   */\n  private _getEventPrefix() {\n    return this.enablePointerEvents ? 'pointer' : 'mouse';\n  }\n\n  addOrRemove(functor: any, eventjsFunctor: 'add' | 'remove') {\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    functor(getWindowFromElement(canvasElement), 'resize', this._onResize);\n    functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n    functor(\n      canvasElement,\n      `${eventTypePrefix}move`,\n      this._onMouseMove,\n      addEventOptions\n    );\n    functor(canvasElement, `${eventTypePrefix}out`, this._onMouseOut);\n    functor(canvasElement, `${eventTypePrefix}enter`, this._onMouseEnter);\n    functor(canvasElement, 'wheel', this._onMouseWheel);\n    functor(canvasElement, 'contextmenu', this._onContextMenu);\n    functor(canvasElement, 'dblclick', this._onDoubleClick);\n    functor(canvasElement, 'dragstart', this._onDragStart);\n    functor(canvasElement, 'dragend', this._onDragEnd);\n    functor(canvasElement, 'dragover', this._onDragOver);\n    functor(canvasElement, 'dragenter', this._onDragEnter);\n    functor(canvasElement, 'dragleave', this._onDragLeave);\n    functor(canvasElement, 'drop', this._onDrop);\n    if (!this.enablePointerEvents) {\n      functor(canvasElement, 'touchstart', this._onTouchStart, addEventOptions);\n    }\n    // if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n    //   eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n    //   eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n    //   eventjs[eventjsFunctor](\n    //     canvasElement,\n    //     'orientation',\n    //     this._onOrientationChange\n    //   );\n    //   eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n    //   eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n    // }\n  }\n\n  /**\n   * Removes all event listeners\n   */\n  removeListeners() {\n    this.addOrRemove(removeListener, 'remove');\n    // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n    const eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(this.upperCanvasEl);\n    removeListener(\n      doc,\n      `${eventTypePrefix}up`,\n      this._onMouseUp as EventListener\n    );\n    removeListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions\n    );\n    removeListener(\n      doc,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions\n    );\n    removeListener(\n      doc,\n      'touchmove',\n      this._onMouseMove as EventListener,\n      addEventOptions\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} [e] Event object fired on wheel event\n   */\n  private _onMouseWheel(e: MouseEvent) {\n    this.__onMouseWheel(e);\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onMouseOut(e: TPointerEvent) {\n    const target = this._hoveredTarget;\n    const shared = {\n      e,\n      ...getEventPoints(this, e),\n    };\n    this.fire('mouse:out', { ...shared, target });\n    this._hoveredTarget = undefined;\n    target && target.fire('mouseout', { ...shared });\n    this._hoveredTargets.forEach((nestedTarget) => {\n      this.fire('mouse:out', { ...shared, target: nestedTarget });\n      nestedTarget && nestedTarget.fire('mouseout', { ...shared });\n    });\n    this._hoveredTargets = [];\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseenter\n   */\n  private _onMouseEnter(e: TPointerEvent) {\n    // This find target and consequent 'mouse:over' is used to\n    // clear old instances on hovered target.\n    // calling findTarget has the side effect of killing target.__corner.\n    // as a short term fix we are not firing this if we are currently transforming.\n    // as a long term fix we need to separate the action of finding a target with the\n    // side effects we added to it.\n    if (!this._currentTransform && !this.findTarget(e)) {\n      this.fire('mouse:over', {\n        e,\n        ...getEventPoints(this, e),\n      });\n      this._hoveredTarget = undefined;\n      this._hoveredTargets = [];\n    }\n  }\n\n  /**\n   * supports native like text dragging\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragStart(e: DragEvent) {\n    this._isClick = false;\n    const activeObject = this.getActiveObject();\n    if (activeObject && activeObject.onDragStart(e)) {\n      this._dragSource = activeObject;\n      const options = { e, target: activeObject };\n      this.fire('dragstart', options);\n      activeObject.fire('dragstart', options);\n      addListener(\n        this.upperCanvasEl,\n        'drag',\n        this._onDragProgress as EventListener\n      );\n      return;\n    }\n    stopEvent(e);\n  }\n\n  /**\n   * First we clear top context where the effects are being rendered.\n   * Then we render the effects.\n   * Doing so will render the correct effect for all cases including an overlap between `source` and `target`.\n   * @private\n   */\n  private _renderDragEffects(\n    e: DragEvent,\n    source?: FabricObject,\n    target?: FabricObject\n  ) {\n    let dirty = false;\n    // clear top context\n    const dropTarget = this._dropTarget;\n    if (dropTarget && dropTarget !== source && dropTarget !== target) {\n      dropTarget.clearContextTop();\n      dirty = true;\n    }\n    source?.clearContextTop();\n    target !== source && target?.clearContextTop();\n    // render effects\n    const ctx = this.contextTop;\n    ctx.save();\n    ctx.transform(...this.viewportTransform);\n    if (source) {\n      ctx.save();\n      source.transform(ctx);\n      source.renderDragSourceEffect(e);\n      ctx.restore();\n      dirty = true;\n    }\n    if (target) {\n      ctx.save();\n      target.transform(ctx);\n      target.renderDropTargetEffect(e);\n      ctx.restore();\n      dirty = true;\n    }\n    ctx.restore();\n    dirty && (this.contextTopDirty = true);\n  }\n\n  /**\n   * supports native like text dragging\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragEnd(e: DragEvent) {\n    const didDrop = !!e.dataTransfer && e.dataTransfer.dropEffect !== NONE,\n      dropTarget = didDrop ? this._activeObject : undefined,\n      options = {\n        e,\n        target: this._dragSource as FabricObject,\n        subTargets: this.targets,\n        dragSource: this._dragSource as FabricObject,\n        didDrop,\n        dropTarget: dropTarget as FabricObject,\n      };\n    removeListener(\n      this.upperCanvasEl,\n      'drag',\n      this._onDragProgress as EventListener\n    );\n    this.fire('dragend', options);\n    this._dragSource && this._dragSource.fire('dragend', options);\n    delete this._dragSource;\n    // we need to call mouse up synthetically because the browser won't\n    this._onMouseUp(e);\n  }\n\n  /**\n   * fire `drag` event on canvas and drag source\n   * @private\n   * @param {DragEvent} e\n   */\n  private _onDragProgress(e: DragEvent) {\n    const options = {\n      e,\n      target: this._dragSource as FabricObject | undefined,\n      dragSource: this._dragSource as FabricObject | undefined,\n      dropTarget: this._draggedoverTarget as FabricObject,\n    };\n    this.fire('drag', options);\n    this._dragSource && this._dragSource.fire('drag', options);\n  }\n\n  /**\n   * As opposed to {@link findTarget} we want the top most object to be returned w/o the active object cutting in line.\n   * Override at will\n   */\n  protected findDragTargets(e: DragEvent) {\n    this.targets = [];\n    const target = this._searchPossibleTargets(\n      this._objects,\n      this.getViewportPoint(e)\n    );\n    return {\n      target,\n      targets: [...this.targets],\n    };\n  }\n\n  /**\n   * prevent default to allow drop event to be fired\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#specifying_drop_targets\n   * @private\n   * @param {DragEvent} [e] Event object fired on Event.js shake\n   */\n  private _onDragOver(e: DragEvent) {\n    const eventType = 'dragover';\n    const { target, targets } = this.findDragTargets(e);\n    const dragSource = this._dragSource as FabricObject;\n    const options = {\n      e,\n      target,\n      subTargets: targets,\n      dragSource,\n      canDrop: false,\n      dropTarget: undefined,\n    };\n    let dropTarget;\n    //  fire on canvas\n    this.fire(eventType, options);\n    //  make sure we fire dragenter events before dragover\n    //  if dragleave is needed, object will not fire dragover so we don't need to trouble ourselves with it\n    this._fireEnterLeaveEvents(target, options);\n    if (target) {\n      if (target.canDrop(e)) {\n        dropTarget = target;\n      }\n      target.fire(eventType, options);\n    }\n    //  propagate the event to subtargets\n    for (let i = 0; i < targets.length; i++) {\n      const subTarget = targets[i];\n      // accept event only if previous targets didn't (the accepting target calls `preventDefault` to inform that the event is taken)\n      // TODO: verify if those should loop in inverse order then?\n      // what is the order of subtargets?\n      if (subTarget.canDrop(e)) {\n        dropTarget = subTarget;\n      }\n      subTarget.fire(eventType, options);\n    }\n    //  render drag effects now that relations between source and target is clear\n    this._renderDragEffects(e, dragSource, dropTarget);\n    this._dropTarget = dropTarget;\n  }\n\n  /**\n   * fire `dragleave` on `dragover` targets\n   * @private\n   * @param {Event} [e] Event object fired on Event.js shake\n   */\n  private _onDragEnter(e: DragEvent) {\n    const { target, targets } = this.findDragTargets(e);\n    const options = {\n      e,\n      target,\n      subTargets: targets,\n      dragSource: this._dragSource,\n    };\n    this.fire('dragenter', options);\n    //  fire dragenter on targets\n    this._fireEnterLeaveEvents(target, options);\n  }\n\n  /**\n   * fire `dragleave` on `dragover` targets\n   * @private\n   * @param {Event} [e] Event object fired on Event.js shake\n   */\n  private _onDragLeave(e: DragEvent) {\n    const options = {\n      e,\n      target: this._draggedoverTarget,\n      subTargets: this.targets,\n      dragSource: this._dragSource,\n    };\n    this.fire('dragleave', options);\n\n    //  fire dragleave on targets\n    this._fireEnterLeaveEvents(undefined, options);\n    this._renderDragEffects(e, this._dragSource);\n    this._dropTarget = undefined;\n    //  clear targets\n    this.targets = [];\n    this._hoveredTargets = [];\n  }\n\n  /**\n   * `drop:before` is a an event that allows you to schedule logic\n   * before the `drop` event. Prefer `drop` event always, but if you need\n   * to run some drop-disabling logic on an event, since there is no way\n   * to handle event handlers ordering, use `drop:before`\n   * @private\n   * @param {Event} e\n   */\n  private _onDrop(e: DragEvent) {\n    const { target, targets } = this.findDragTargets(e);\n    const options = this._basicEventHandler('drop:before', {\n      e,\n      target,\n      subTargets: targets,\n      dragSource: this._dragSource,\n      ...getEventPoints(this, e),\n    });\n    //  will be set by the drop target\n    options.didDrop = false;\n    //  will be set by the drop target, used in case options.target refuses the drop\n    options.dropTarget = undefined;\n    //  fire `drop`\n    this._basicEventHandler('drop', options);\n    //  inform canvas of the drop\n    //  we do this because canvas was unaware of what happened at the time the `drop` event was fired on it\n    //  use for side effects\n    this.fire('drop:after', options);\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onContextMenu(e: TPointerEvent): false {\n    const target = this.findTarget(e),\n      subTargets = this.targets || [];\n    const options = this._basicEventHandler('contextmenu:before', {\n      e,\n      target,\n      subTargets,\n    });\n    // TODO: this line is silly because the dev can subscribe to the event and prevent it themselves\n    this.stopContextMenu && stopEvent(e);\n    this._basicEventHandler('contextmenu', options);\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  private _onDoubleClick(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'dblclick');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Return a the id of an event.\n   * returns either the pointerId or the identifier or 0 for the mouse event\n   * @private\n   * @param {Event} evt Event object\n   */\n  getPointerId(evt: TouchEvent | PointerEvent): number {\n    const changedTouches = (evt as TouchEvent).changedTouches;\n\n    if (changedTouches) {\n      return changedTouches[0] && changedTouches[0].identifier;\n    }\n\n    if (this.enablePointerEvents) {\n      return (evt as PointerEvent).pointerId;\n    }\n\n    return -1;\n  }\n\n  /**\n   * Determines if an event has the id of the event that is considered main\n   * @private\n   * @param {evt} event Event object\n   */\n  _isMainEvent(evt: TPointerEvent): boolean {\n    if ((evt as PointerEvent).isPrimary === true) {\n      return true;\n    }\n    if ((evt as PointerEvent).isPrimary === false) {\n      return false;\n    }\n    if (evt.type === 'touchend' && (evt as TouchEvent).touches.length === 0) {\n      return true;\n    }\n    if ((evt as TouchEvent).changedTouches) {\n      return (\n        (evt as TouchEvent).changedTouches[0].identifier === this.mainTouchId\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onTouchStart(e: TouchEvent) {\n    e.preventDefault();\n    if (this.mainTouchId === undefined) {\n      this.mainTouchId = this.getPointerId(e);\n    }\n    this.__onMouseDown(e);\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(canvasElement);\n    addListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions\n    );\n    addListener(\n      doc,\n      'touchmove',\n      this._onMouseMove as EventListener,\n      addEventOptions\n    );\n    // Unbind mousedown to prevent double triggers from touch devices\n    removeListener(\n      canvasElement,\n      `${eventTypePrefix}down`,\n      this._onMouseDown as EventListener\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onMouseDown(e: TPointerEvent) {\n    this.__onMouseDown(e);\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    removeListener(\n      canvasElement,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions\n    );\n    const doc = getDocumentFromElement(canvasElement);\n    addListener(doc, `${eventTypePrefix}up`, this._onMouseUp as EventListener);\n    addListener(\n      doc,\n      `${eventTypePrefix}move`,\n      this._onMouseMove as EventListener,\n      addEventOptions\n    );\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onTouchEnd(e: TouchEvent) {\n    if (e.touches.length > 0) {\n      // if there are still touches stop here\n      return;\n    }\n    this.__onMouseUp(e);\n    this._resetTransformEventData();\n    delete this.mainTouchId;\n    const eventTypePrefix = this._getEventPrefix();\n    const doc = getDocumentFromElement(this.upperCanvasEl);\n    removeListener(\n      doc,\n      'touchend',\n      this._onTouchEnd as EventListener,\n      addEventOptions\n    );\n    removeListener(\n      doc,\n      'touchmove',\n      this._onMouseMove as EventListener,\n      addEventOptions\n    );\n    if (this._willAddMouseDown) {\n      clearTimeout(this._willAddMouseDown);\n    }\n    this._willAddMouseDown = setTimeout(() => {\n      // Wait 400ms before rebinding mousedown to prevent double triggers\n      // from touch devices\n      addListener(\n        this.upperCanvasEl,\n        `${eventTypePrefix}down`,\n        this._onMouseDown as EventListener\n      );\n      this._willAddMouseDown = 0;\n    }, 400) as unknown as number;\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  _onMouseUp(e: TPointerEvent) {\n    this.__onMouseUp(e);\n    this._resetTransformEventData();\n    const canvasElement = this.upperCanvasEl,\n      eventTypePrefix = this._getEventPrefix();\n    if (this._isMainEvent(e)) {\n      const doc = getDocumentFromElement(this.upperCanvasEl);\n      removeListener(\n        doc,\n        `${eventTypePrefix}up`,\n        this._onMouseUp as EventListener\n      );\n      removeListener(\n        doc,\n        `${eventTypePrefix}move`,\n        this._onMouseMove as EventListener,\n        addEventOptions\n      );\n      addListener(\n        canvasElement,\n        `${eventTypePrefix}move`,\n        this._onMouseMove as EventListener,\n        addEventOptions\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  _onMouseMove(e: TPointerEvent) {\n    const activeObject = this.getActiveObject();\n    !this.allowTouchScrolling &&\n      (!activeObject ||\n        // a drag event sequence is started by the active object flagging itself on mousedown / mousedown:before\n        // we must not prevent the event's default behavior in order for the window to start dragging\n        !activeObject.shouldStartDragging()) &&\n      e.preventDefault &&\n      e.preventDefault();\n    this.__onMouseMove(e);\n  }\n\n  /**\n   * @private\n   */\n  _onResize() {\n    this.calcOffset();\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n   * @private\n   * @param {Object} target\n   */\n  _shouldRender(target: FabricObject | undefined) {\n    const activeObject = this.getActiveObject();\n    // if just one of them is available or if they are both but are different objects\n    // this covers: switch of target, from target to no target, selection of target\n    // multiSelection with key and mouse\n    return (\n      !!activeObject !== !!target ||\n      (activeObject && target && activeObject !== target)\n    );\n  }\n\n  /**\n   * Method that defines the actions when mouse is released on canvas.\n   * The method resets the currentTransform parameters, store the image corner\n   * position in the image object and render the canvas on top.\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  __onMouseUp(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'up:before');\n\n    const transform = this._currentTransform;\n    const isClick = this._isClick;\n    const target = this._target;\n\n    // if right/middle click just fire events and return\n    // target undefined will make the _handleEvent search the target\n    const { button } = e as MouseEvent;\n    if (button) {\n      ((this.fireMiddleClick && button === 1) ||\n        (this.fireRightClick && button === 2)) &&\n        this._handleEvent(e, 'up');\n      this._resetTransformEventData();\n      return;\n    }\n\n    if (this.isDrawingMode && this._isCurrentlyDrawing) {\n      this._onMouseUpInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n    let shouldRender = false;\n    if (transform) {\n      this._finalizeCurrentTransform(e);\n      shouldRender = transform.actionPerformed;\n    }\n    if (!isClick) {\n      const targetWasActive = target === this._activeObject;\n      this.handleSelection(e);\n      if (!shouldRender) {\n        shouldRender =\n          this._shouldRender(target) ||\n          (!targetWasActive && target === this._activeObject);\n      }\n    }\n    let pointer, corner;\n    if (target) {\n      corner = target._findTargetCorner(\n        this.getViewportPoint(e),\n        isTouchEvent(e)\n      );\n      if (\n        target.selectable &&\n        target !== this._activeObject &&\n        target.activeOn === 'up'\n      ) {\n        this.setActiveObject(target, e);\n        shouldRender = true;\n      } else {\n        const control = target.controls[corner];\n        const mouseUpHandler =\n          control && control.getMouseUpHandler(e, target, control);\n        if (mouseUpHandler) {\n          pointer = this.getScenePoint(e);\n          mouseUpHandler.call(control, e, transform!, pointer.x, pointer.y);\n        }\n      }\n      target.isMoving = false;\n    }\n    // if we are ending up a transform on a different control or a new object\n    // fire the original mouse up from the corner that started the transform\n    if (\n      transform &&\n      (transform.target !== target || transform.corner !== corner)\n    ) {\n      const originalControl =\n          transform.target && transform.target.controls[transform.corner],\n        originalMouseUpHandler =\n          originalControl &&\n          originalControl.getMouseUpHandler(\n            e,\n            transform.target,\n            originalControl\n          );\n      pointer = pointer || this.getScenePoint(e);\n      originalMouseUpHandler &&\n        originalMouseUpHandler.call(\n          originalControl,\n          e,\n          transform,\n          pointer.x,\n          pointer.y\n        );\n    }\n    this._setCursorFromEvent(e, target);\n    this._handleEvent(e, 'up');\n    this._groupSelector = null;\n    this._currentTransform = null;\n    // reset the target information about which corner is selected\n    target && (target.__corner = undefined);\n    if (shouldRender) {\n      this.requestRenderAll();\n    } else if (!isClick && !(this._activeObject as IText)?.isEditing) {\n      this.renderTop();\n    }\n  }\n\n  _basicEventHandler<T extends keyof (CanvasEvents | ObjectEvents)>(\n    eventType: T,\n    options: (CanvasEvents & ObjectEvents)[T]\n  ) {\n    const { target, subTargets = [] } = options as {\n      target?: FabricObject;\n      subTargets: FabricObject[];\n    };\n    this.fire(eventType, options);\n    target && target.fire(eventType, options);\n    for (let i = 0; i < subTargets.length; i++) {\n      subTargets[i] !== target && subTargets[i].fire(eventType, options);\n    }\n    return options;\n  }\n\n  /**\n   * @private\n   * Handle event firing for target and subtargets\n   * @param {TPointerEvent} e event from mouse\n   * @param {TPointerEventNames} eventType\n   */\n  _handleEvent<T extends TPointerEventNames>(e: TPointerEvent, eventType: T) {\n    const target = this._target,\n      targets = this.targets || [],\n      options: CanvasEvents[`mouse:${T}`] = {\n        e,\n        target,\n        subTargets: targets,\n        ...getEventPoints(this, e),\n        transform: this._currentTransform,\n        ...(eventType === 'up:before' || eventType === 'up'\n          ? {\n              isClick: this._isClick,\n              currentTarget: this.findTarget(e),\n              // set by the preceding `findTarget` call\n              currentSubTargets: this.targets,\n            }\n          : {}),\n      } as CanvasEvents[`mouse:${T}`];\n    this.fire(`mouse:${eventType}`, options);\n    // this may be a little be more complicated of what we want to handle\n    target && target.fire(`mouse${eventType}`, options);\n    for (let i = 0; i < targets.length; i++) {\n      targets[i] !== target && targets[i].fire(`mouse${eventType}`, options);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  _onMouseDownInDrawingMode(e: TPointerEvent) {\n    this._isCurrentlyDrawing = true;\n    if (this.getActiveObject()) {\n      this.discardActiveObject(e);\n      this.requestRenderAll();\n    }\n    // TODO: this is a scene point so it should be renamed\n    const pointer = this.getScenePoint(e);\n    this.freeDrawingBrush &&\n      this.freeDrawingBrush.onMouseDown(pointer, { e, pointer });\n    this._handleEvent(e, 'down');\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  _onMouseMoveInDrawingMode(e: TPointerEvent) {\n    if (this._isCurrentlyDrawing) {\n      const pointer = this.getScenePoint(e);\n      this.freeDrawingBrush &&\n        this.freeDrawingBrush.onMouseMove(pointer, {\n          e,\n          // this is an absolute pointer, the naming is wrong\n          pointer,\n        });\n    }\n    this.setCursor(this.freeDrawingCursor);\n    this._handleEvent(e, 'move');\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event object fired on mouseup\n   */\n  _onMouseUpInDrawingMode(e: TPointerEvent) {\n    const pointer = this.getScenePoint(e);\n    if (this.freeDrawingBrush) {\n      this._isCurrentlyDrawing = !!this.freeDrawingBrush.onMouseUp({\n        e: e,\n        // this is an absolute pointer, the naming is wrong\n        pointer,\n      });\n    } else {\n      this._isCurrentlyDrawing = false;\n    }\n    this._handleEvent(e, 'up');\n  }\n\n  /**\n   * Method that defines the actions when mouse is clicked on canvas.\n   * The method inits the currentTransform parameters and renders all the\n   * canvas so the current image can be placed on the top canvas and the rest\n   * in on the container one.\n   * @private\n   * @param {Event} e Event object fired on mousedown\n   */\n  __onMouseDown(e: TPointerEvent) {\n    this._isClick = true;\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'down:before');\n\n    let target: FabricObject | undefined = this._target;\n\n    // if right/middle click just fire events\n    const { button } = e as MouseEvent;\n    if (button) {\n      ((this.fireMiddleClick && button === 1) ||\n        (this.fireRightClick && button === 2)) &&\n        this._handleEvent(e, 'down');\n      this._resetTransformEventData();\n      return;\n    }\n\n    if (this.isDrawingMode) {\n      this._onMouseDownInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n\n    // ignore if some object is being transformed at this moment\n    if (this._currentTransform) {\n      return;\n    }\n\n    let shouldRender = this._shouldRender(target);\n    let grouped = false;\n    if (this.handleMultiSelection(e, target)) {\n      // active object might have changed while grouping\n      target = this._activeObject;\n      grouped = true;\n      shouldRender = true;\n    } else if (this._shouldClearSelection(e, target)) {\n      this.discardActiveObject(e);\n    }\n    // we start a group selector rectangle if\n    // selection is enabled\n    // and there is no target, or the following 3 conditions are satisfied:\n    // target is not selectable ( otherwise we selected it )\n    // target is not editing\n    // target is not already selected ( otherwise we drag )\n    if (\n      this.selection &&\n      (!target ||\n        (!target.selectable &&\n          !(target as IText).isEditing &&\n          target !== this._activeObject))\n    ) {\n      const p = this.getScenePoint(e);\n      this._groupSelector = {\n        x: p.x,\n        y: p.y,\n        deltaY: 0,\n        deltaX: 0,\n      };\n    }\n\n    if (target) {\n      const alreadySelected = target === this._activeObject;\n      if (target.selectable && target.activeOn === 'down') {\n        this.setActiveObject(target, e);\n      }\n      const corner = target._findTargetCorner(\n        this.getViewportPoint(e),\n        isTouchEvent(e)\n      );\n      if (target === this._activeObject && (corner || !grouped)) {\n        this._setupCurrentTransform(e, target, alreadySelected);\n        const control = target.controls[corner],\n          pointer = this.getScenePoint(e),\n          mouseDownHandler =\n            control && control.getMouseDownHandler(e, target, control);\n        mouseDownHandler &&\n          mouseDownHandler.call(\n            control,\n            e,\n            this._currentTransform!,\n            pointer.x,\n            pointer.y\n          );\n      }\n    }\n    //  we clear `_objectsToRender` in case of a change in order to repopulate it at rendering\n    //  run before firing the `down` event to give the dev a chance to populate it themselves\n    shouldRender && (this._objectsToRender = undefined);\n    this._handleEvent(e, 'down');\n    // we must renderAll so that we update the visuals\n    shouldRender && this.requestRenderAll();\n  }\n\n  /**\n   * reset cache form common information needed during event processing\n   * @private\n   */\n  _resetTransformEventData() {\n    this._target = undefined;\n    this._pointer = undefined;\n    this._absolutePointer = undefined;\n  }\n\n  /**\n   * Cache common information needed during event processing\n   * @private\n   * @param {Event} e Event object fired on event\n   */\n  _cacheTransformEventData(e: TPointerEvent) {\n    // reset in order to avoid stale caching\n    this._resetTransformEventData();\n    this._pointer = this.getViewportPoint(e);\n    this._absolutePointer = sendPointToPlane(\n      this._pointer,\n      undefined,\n      this.viewportTransform\n    );\n    this._target = this._currentTransform\n      ? this._currentTransform.target\n      : this.findTarget(e);\n  }\n\n  /**\n   * Method that defines the actions when mouse is hovering the canvas.\n   * The currentTransform parameter will define whether the user is rotating/scaling/translating\n   * an image or neither of them (only hovering). A group selection is also possible and would cancel\n   * all any other type of action.\n   * In case of an image transformation only the top canvas will be rendered.\n   * @private\n   * @param {Event} e Event object fired on mousemove\n   */\n  __onMouseMove(e: TPointerEvent) {\n    this._isClick = false;\n    this._handleEvent(e, 'move:before');\n    this._cacheTransformEventData(e);\n\n    if (this.isDrawingMode) {\n      this._onMouseMoveInDrawingMode(e);\n      return;\n    }\n\n    if (!this._isMainEvent(e)) {\n      return;\n    }\n\n    const groupSelector = this._groupSelector;\n\n    // We initially clicked in an empty area, so we draw a box for multiple selection\n    if (groupSelector) {\n      const pointer = this.getScenePoint(e);\n\n      groupSelector.deltaX = pointer.x - groupSelector.x;\n      groupSelector.deltaY = pointer.y - groupSelector.y;\n\n      this.renderTop();\n    } else if (!this._currentTransform) {\n      const target = this.findTarget(e);\n      this._setCursorFromEvent(e, target);\n      this._fireOverOutEvents(e, target);\n    } else {\n      this._transformObject(e);\n    }\n    this.textEditingManager.onMouseMove(e);\n    this._handleEvent(e, 'move');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * Manage the mouseout, mouseover events for the fabric object on the canvas\n   * @param {Fabric.Object} target the target where the target from the mousemove event\n   * @param {Event} e Event object fired on mousemove\n   * @private\n   */\n  _fireOverOutEvents(e: TPointerEvent, target?: FabricObject) {\n    const _hoveredTarget = this._hoveredTarget,\n      _hoveredTargets = this._hoveredTargets,\n      targets = this.targets,\n      length = Math.max(_hoveredTargets.length, targets.length);\n\n    this.fireSyntheticInOutEvents('mouse', {\n      e,\n      target,\n      oldTarget: _hoveredTarget,\n      fireCanvas: true,\n    });\n    for (let i = 0; i < length; i++) {\n      this.fireSyntheticInOutEvents('mouse', {\n        e,\n        target: targets[i],\n        oldTarget: _hoveredTargets[i],\n      });\n    }\n    this._hoveredTarget = target;\n    this._hoveredTargets = this.targets.concat();\n  }\n\n  /**\n   * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n   * @param {Fabric.Object} target the target where the target from the onDrag event\n   * @param {Object} data Event object fired on dragover\n   * @private\n   */\n  _fireEnterLeaveEvents(target: FabricObject | undefined, data: DragEventData) {\n    const draggedoverTarget = this._draggedoverTarget,\n      _hoveredTargets = this._hoveredTargets,\n      targets = this.targets,\n      length = Math.max(_hoveredTargets.length, targets.length);\n\n    this.fireSyntheticInOutEvents('drag', {\n      ...data,\n      target,\n      oldTarget: draggedoverTarget,\n      fireCanvas: true,\n    });\n    for (let i = 0; i < length; i++) {\n      this.fireSyntheticInOutEvents('drag', {\n        ...data,\n        target: targets[i],\n        oldTarget: _hoveredTargets[i],\n      });\n    }\n    this._draggedoverTarget = target;\n  }\n\n  /**\n   * Manage the synthetic in/out events for the fabric objects on the canvas\n   * @param {Fabric.Object} target the target where the target from the supported events\n   * @param {Object} data Event object fired\n   * @param {Object} config configuration for the function to work\n   * @param {String} config.targetName property on the canvas where the old target is stored\n   * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n   * @param {String} config.evtOut name of the event to fire for out\n   * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n   * @param {String} config.evtIn name of the event to fire for in\n   * @private\n   */\n  fireSyntheticInOutEvents<T extends keyof TSyntheticEventContext>(\n    type: T,\n    {\n      target,\n      oldTarget,\n      fireCanvas,\n      e,\n      ...data\n    }: TSyntheticEventContext[T] & {\n      target?: FabricObject;\n      oldTarget?: FabricObject;\n      fireCanvas?: boolean;\n    }\n  ) {\n    const { targetIn, targetOut, canvasIn, canvasOut } =\n      syntheticEventConfig[type];\n    const targetChanged = oldTarget !== target;\n\n    if (oldTarget && targetChanged) {\n      const outOpt: CanvasEvents[typeof canvasOut] = {\n        ...data,\n        e,\n        target: oldTarget,\n        nextTarget: target,\n        ...getEventPoints(this, e),\n      };\n      fireCanvas && this.fire(canvasOut, outOpt);\n      oldTarget.fire(targetOut, outOpt);\n    }\n    if (target && targetChanged) {\n      const inOpt: CanvasEvents[typeof canvasIn] = {\n        ...data,\n        e,\n        target,\n        previousTarget: oldTarget,\n        ...getEventPoints(this, e),\n      };\n      fireCanvas && this.fire(canvasIn, inOpt);\n      target.fire(targetIn, inOpt);\n    }\n  }\n\n  /**\n   * Method that defines actions when an Event Mouse Wheel\n   * @param {Event} e Event object fired on mouseup\n   */\n  __onMouseWheel(e: TPointerEvent) {\n    this._cacheTransformEventData(e);\n    this._handleEvent(e, 'wheel');\n    this._resetTransformEventData();\n  }\n\n  /**\n   * @private\n   * @param {Event} e Event fired on mousemove\n   */\n  _transformObject(e: TPointerEvent) {\n    const scenePoint = this.getScenePoint(e),\n      transform = this._currentTransform!,\n      target = transform.target,\n      //  transform pointer to target's containing coordinate plane\n      //  both pointer and object should agree on every point\n      localPointer = target.group\n        ? sendPointToPlane(\n            scenePoint,\n            undefined,\n            target.group.calcTransformMatrix()\n          )\n        : scenePoint;\n    transform.shiftKey = e.shiftKey;\n    transform.altKey = !!this.centeredKey && e[this.centeredKey];\n\n    this._performTransformAction(e, transform, localPointer);\n    transform.actionPerformed && this.requestRenderAll();\n  }\n\n  /**\n   * @private\n   */\n  _performTransformAction(\n    e: TPointerEvent,\n    transform: Transform,\n    pointer: Point\n  ) {\n    const x = pointer.x,\n      y = pointer.y,\n      action = transform.action,\n      actionHandler = transform.actionHandler;\n    let actionPerformed = false;\n    // this object could be created from the function in the control handlers\n\n    if (actionHandler) {\n      actionPerformed = actionHandler(e, transform, x, y);\n    }\n    if (action === 'drag' && actionPerformed) {\n      transform.target.isMoving = true;\n      this.setCursor(transform.target.moveCursor || this.moveCursor);\n    }\n    transform.actionPerformed = transform.actionPerformed || actionPerformed;\n  }\n\n  /**\n   * Sets the cursor depending on where the canvas is being hovered.\n   * Note: very buggy in Opera\n   * @param {Event} e Event object\n   * @param {Object} target Object that the mouse is hovering, if so.\n   */\n  _setCursorFromEvent(e: TPointerEvent, target?: FabricObject) {\n    if (!target) {\n      this.setCursor(this.defaultCursor);\n      return;\n    }\n    let hoverCursor = target.hoverCursor || this.hoverCursor;\n    const activeSelection = isActiveSelection(this._activeObject)\n        ? this._activeObject\n        : null,\n      // only show proper corner when group selection is not active\n      corner =\n        (!activeSelection || target.group !== activeSelection) &&\n        // here we call findTargetCorner always with undefined for the touch parameter.\n        // we assume that if you are using a cursor you do not need to interact with\n        // the bigger touch area.\n        target._findTargetCorner(this.getViewportPoint(e));\n\n    if (!corner) {\n      if ((target as Group).subTargetCheck) {\n        // hoverCursor should come from top-most subTarget,\n        // so we walk the array backwards\n        this.targets\n          .concat()\n          .reverse()\n          .map((_target) => {\n            hoverCursor = _target.hoverCursor || hoverCursor;\n          });\n      }\n      this.setCursor(hoverCursor);\n    } else {\n      const control = target.controls[corner];\n      this.setCursor(control.cursorStyleHandler(e, control, target));\n    }\n  }\n\n  /**\n   * ## Handles multiple selection\n   * - toggles `target` selection (selects/deselects `target` if it isn't/is selected respectively)\n   * - sets the active object in case it is not set or in case there is a single active object left under active selection.\n   * ---\n   * - If the active object is the active selection we add/remove `target` from it\n   * - If not, add the active object and `target` to the active selection and make it the active object.\n   * @private\n   * @param {TPointerEvent} e Event object\n   * @param {FabricObject} target target of event to select/deselect\n   * @returns true if grouping occurred\n   */\n  protected handleMultiSelection(e: TPointerEvent, target?: FabricObject) {\n    const activeObject = this._activeObject;\n    const isAS = isActiveSelection(activeObject);\n    if (\n      // check if an active object exists on canvas and if the user is pressing the `selectionKey` while canvas supports multi selection.\n      !!activeObject &&\n      this._isSelectionKeyPressed(e) &&\n      this.selection &&\n      // on top of that the user also has to hit a target that is selectable.\n      !!target &&\n      target.selectable &&\n      // group target and active object only if they are different objects\n      // else we try to find a subtarget of `ActiveSelection`\n      (activeObject !== target || isAS) &&\n      //  make sure `activeObject` and `target` aren't ancestors of each other in case `activeObject` is not `ActiveSelection`\n      // if it is then we want to remove `target` from it\n      (isAS ||\n        (!target.isDescendantOf(activeObject) &&\n          !activeObject.isDescendantOf(target))) &&\n      //  target accepts selection\n      !target.onSelect({ e }) &&\n      // make sure we are not on top of a control\n      !activeObject.getActiveControl()\n    ) {\n      if (isAS) {\n        const prevActiveObjects = activeObject.getObjects();\n        if (target === activeObject) {\n          const pointer = this.getViewportPoint(e);\n          target =\n            // first search active objects for a target to remove\n            this.searchPossibleTargets(prevActiveObjects, pointer) ||\n            //  if not found, search under active selection for a target to add\n            // `prevActiveObjects` will be searched but we already know they will not be found\n            this.searchPossibleTargets(this._objects, pointer);\n          // if nothing is found bail out\n          if (!target || !target.selectable) {\n            return false;\n          }\n        }\n        if (target.group === activeObject) {\n          // `target` is part of active selection => remove it\n          activeObject.remove(target);\n          this._hoveredTarget = target;\n          this._hoveredTargets = [...this.targets];\n          // if after removing an object we are left with one only...\n          if (activeObject.size() === 1) {\n            // activate last remaining object\n            // deselecting the active selection will remove the remaining object from it\n            this._setActiveObject(activeObject.item(0), e);\n          }\n        } else {\n          // `target` isn't part of active selection => add it\n          activeObject.multiSelectAdd(target);\n          this._hoveredTarget = activeObject;\n          this._hoveredTargets = [...this.targets];\n        }\n        this._fireSelectionEvents(prevActiveObjects, e);\n      } else {\n        (activeObject as IText).exitEditing &&\n          (activeObject as IText).exitEditing();\n        // add the active object and the target to the active selection and set it as the active object\n        const klass =\n          classRegistry.getClass<typeof ActiveSelection>('ActiveSelection');\n        const newActiveSelection = new klass([], {\n          /**\n           * it is crucial to pass the canvas ref before calling {@link ActiveSelection#multiSelectAdd}\n           * since it uses {@link FabricObject#isInFrontOf} which relies on the canvas ref\n           */\n          canvas: this,\n        });\n        newActiveSelection.multiSelectAdd(activeObject, target);\n        this._hoveredTarget = newActiveSelection;\n        // ISSUE 4115: should we consider subTargets here?\n        // this._hoveredTargets = [];\n        // this._hoveredTargets = this.targets.concat();\n        this._setActiveObject(newActiveSelection, e);\n        this._fireSelectionEvents([activeObject], e);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * ## Handles selection\n   * - selects objects that are contained in (and possibly intersecting) the selection bounding box\n   * - sets the active object\n   * ---\n   * runs on mouse up after a mouse move\n   */\n  protected handleSelection(e: TPointerEvent) {\n    if (!this.selection || !this._groupSelector) {\n      return false;\n    }\n    const { x, y, deltaX, deltaY } = this._groupSelector,\n      point1 = new Point(x, y),\n      point2 = point1.add(new Point(deltaX, deltaY)),\n      tl = point1.min(point2),\n      br = point1.max(point2),\n      size = br.subtract(tl);\n\n    const collectedObjects = this.collectObjects(\n      {\n        left: tl.x,\n        top: tl.y,\n        width: size.x,\n        height: size.y,\n      },\n      { includeIntersecting: !this.selectionFullyContained }\n    ) as FabricObject[];\n\n    const objects =\n      // though this method runs only after mouse move the pointer could do a mouse up on the same position as mouse down\n      // should it be handled as is?\n      point1.eq(point2)\n        ? collectedObjects[0]\n          ? [collectedObjects[0]]\n          : []\n        : collectedObjects.length > 1\n        ? collectedObjects.filter((object) => !object.onSelect({ e })).reverse()\n        : // `setActiveObject` will call `onSelect(collectedObjects[0])` in this case\n          collectedObjects;\n\n    // set active object\n    if (objects.length === 1) {\n      // set as active object\n      this.setActiveObject(objects[0], e);\n    } else if (objects.length > 1) {\n      // add to active selection and make it the active object\n      const klass =\n        classRegistry.getClass<typeof ActiveSelection>('ActiveSelection');\n      this.setActiveObject(new klass(objects, { canvas: this }), e);\n    }\n\n    // cleanup\n    this._groupSelector = null;\n    return true;\n  }\n\n  /**\n   * @override clear {@link textEditingManager}\n   */\n  clear() {\n    this.textEditingManager.clear();\n    super.clear();\n  }\n\n  /**\n   * @override clear {@link textEditingManager}\n   */\n  destroy() {\n    this.removeListeners();\n    this.textEditingManager.dispose();\n    super.destroy();\n  }\n}\n","export const linearDefaultCoords = {\n  x1: 0,\n  y1: 0,\n  x2: 0,\n  y2: 0,\n};\n\nexport const radialDefaultCoords = {\n  ...linearDefaultCoords,\n  r1: 0,\n  r2: 0,\n};\n","import { ifNaN } from '../util/internals';\nimport { capValue } from '../util/misc/capValue';\n\nconst RE_PERCENT = /^(\\d+\\.\\d+)%|(\\d+)%$/;\n\nexport function isPercent(value: string | null) {\n  return value && RE_PERCENT.test(value);\n}\n\n/**\n *\n * @param value\n * @param valueIfNaN\n * @returns ∈ [0, 1]\n */\nexport function parsePercent(\n  value: string | number | null | undefined,\n  valueIfNaN?: number\n) {\n  const parsed =\n    typeof value === 'number'\n      ? value\n      : typeof value === 'string'\n      ? parseFloat(value) / (isPercent(value) ? 100 : 1)\n      : NaN;\n  return capValue(0, ifNaN(parsed, valueIfNaN), 1);\n}\n","import { Color } from '../../color/Color';\nimport { parsePercent } from '../../parser/percent';\nimport { ifNaN } from '../../util/internals';\nimport type { ColorStop } from '../typedefs';\n\nconst RE_KEY_VALUE_PAIRS = /\\s*;\\s*/;\nconst RE_KEY_VALUE = /\\s*:\\s*/;\n\nfunction parseColorStop(el: SVGStopElement, multiplier: number) {\n  let colorValue, opacity;\n  const style = el.getAttribute('style');\n  if (style) {\n    const keyValuePairs = style.split(RE_KEY_VALUE_PAIRS);\n\n    if (keyValuePairs[keyValuePairs.length - 1] === '') {\n      keyValuePairs.pop();\n    }\n\n    for (let i = keyValuePairs.length; i--; ) {\n      const [key, value] = keyValuePairs[i]\n        .split(RE_KEY_VALUE)\n        .map((s) => s.trim());\n      if (key === 'stop-color') {\n        colorValue = value;\n      } else if (key === 'stop-opacity') {\n        opacity = value;\n      }\n    }\n  }\n\n  const color = new Color(\n    colorValue || el.getAttribute('stop-color') || 'rgb(0,0,0)'\n  );\n\n  return {\n    offset: parsePercent(el.getAttribute('offset'), 0),\n    color: color.toRgb(),\n    opacity:\n      ifNaN(parseFloat(opacity || el.getAttribute('stop-opacity') || ''), 1) *\n      color.getAlpha() *\n      multiplier,\n  };\n}\n\nexport function parseColorStops(\n  el: SVGGradientElement,\n  opacityAttr: string | null\n) {\n  const colorStops: ColorStop[] = [],\n    colorStopEls = el.getElementsByTagName('stop'),\n    multiplier = parsePercent(opacityAttr, 1);\n  for (let i = colorStopEls.length; i--; ) {\n    colorStops.push(parseColorStop(colorStopEls[i], multiplier));\n  }\n  return colorStops;\n}\n","import type { GradientType, GradientUnits } from '../typedefs';\n\nexport function parseType(el: SVGGradientElement): GradientType {\n  return el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT'\n    ? 'linear'\n    : 'radial';\n}\n\nexport function parseGradientUnits(el: SVGGradientElement): GradientUnits {\n  return el.getAttribute('gradientUnits') === 'userSpaceOnUse'\n    ? 'pixels'\n    : 'percentage';\n}\n","import { isPercent } from '../../parser/percent';\nimport type { TSize } from '../../typedefs';\nimport type { GradientCoords, GradientType, GradientUnits } from '../typedefs';\nimport { parseGradientUnits, parseType } from './misc';\n\nfunction convertPercentUnitsToValues<\n  T extends GradientType,\n  K extends keyof GradientCoords<T>\n>(\n  valuesToConvert: Record<K, string | number>,\n  { width, height, gradientUnits }: TSize & { gradientUnits: GradientUnits }\n) {\n  let finalValue;\n  return (Object.keys(valuesToConvert) as K[]).reduce((acc, prop) => {\n    const propValue = valuesToConvert[prop];\n    if (propValue === 'Infinity') {\n      finalValue = 1;\n    } else if (propValue === '-Infinity') {\n      finalValue = 0;\n    } else {\n      finalValue =\n        typeof propValue === 'string' ? parseFloat(propValue) : propValue;\n      if (typeof propValue === 'string' && isPercent(propValue)) {\n        finalValue *= 0.01;\n        if (gradientUnits === 'pixels') {\n          // then we need to fix those percentages here in svg parsing\n          if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n            finalValue *= width;\n          }\n          if (prop === 'y1' || prop === 'y2') {\n            finalValue *= height;\n          }\n        }\n      }\n    }\n    acc[prop] = finalValue;\n    return acc;\n  }, {} as Record<K, number>);\n}\n\nfunction getValue(el: SVGGradientElement, key: string) {\n  return el.getAttribute(key);\n}\n\nexport function parseLinearCoords(el: SVGGradientElement) {\n  return {\n    x1: getValue(el, 'x1') || 0,\n    y1: getValue(el, 'y1') || 0,\n    x2: getValue(el, 'x2') || '100%',\n    y2: getValue(el, 'y2') || 0,\n  };\n}\n\nexport function parseRadialCoords(el: SVGGradientElement) {\n  return {\n    x1: getValue(el, 'fx') || getValue(el, 'cx') || '50%',\n    y1: getValue(el, 'fy') || getValue(el, 'cy') || '50%',\n    r1: 0,\n    x2: getValue(el, 'cx') || '50%',\n    y2: getValue(el, 'cy') || '50%',\n    r2: getValue(el, 'r') || '50%',\n  };\n}\n\nexport function parseCoords(el: SVGGradientElement, size: TSize) {\n  return convertPercentUnitsToValues(\n    parseType(el) === 'linear' ? parseLinearCoords(el) : parseRadialCoords(el),\n    {\n      ...size,\n      gradientUnits: parseGradientUnits(el),\n    }\n  );\n}\n","import { Color } from '../color/Color';\nimport { iMatrix } from '../constants';\nimport { parseTransformAttribute } from '../parser/parseTransformAttribute';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport type { TMat2D } from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { pick } from '../util/misc/pick';\nimport { matrixToSVG } from '../util/misc/svgParsing';\nimport { linearDefaultCoords, radialDefaultCoords } from './constants';\nimport { parseColorStops } from './parser/parseColorStops';\nimport { parseCoords } from './parser/parseCoords';\nimport { parseType, parseGradientUnits } from './parser/misc';\nimport type {\n  ColorStop,\n  GradientCoords,\n  GradientOptions,\n  GradientType,\n  GradientUnits,\n  SVGOptions,\n} from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { isPath } from '../util/typeAssertions';\n\n/**\n * Gradient class\n * @class Gradient\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n */\nexport class Gradient<\n  S,\n  T extends GradientType = S extends GradientType ? S : 'linear'\n> {\n  /**\n   * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetX: number;\n\n  /**\n   * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n   * @type Number\n   * @default 0\n   */\n  declare offsetY: number;\n\n  /**\n   * A transform matrix to apply to the gradient before painting.\n   * Imported from svg gradients, is not applied with the current transform in the center.\n   * Before this transform is applied, the origin point is at the top left corner of the object\n   * plus the addition of offsetY and offsetX.\n   * @type Number[]\n   * @default null\n   */\n  declare gradientTransform?: TMat2D;\n\n  /**\n   * coordinates units for coords.\n   * If `pixels`, the number of coords are in the same unit of width / height.\n   * If set as `percentage` the coords are still a number, but 1 means 100% of width\n   * for the X and 100% of the height for the y. It can be bigger than 1 and negative.\n   * allowed values pixels or percentage.\n   * @type GradientUnits\n   * @default 'pixels'\n   */\n  declare gradientUnits: GradientUnits;\n\n  /**\n   * Gradient type linear or radial\n   * @type GradientType\n   * @default 'linear'\n   */\n  declare type: T;\n\n  /**\n   * Defines how the gradient is located in space and spread\n   * @type GradientCoords\n   */\n  declare coords: GradientCoords<T>;\n\n  /**\n   * Defines how many colors a gradient has and how they are located on the axis\n   * defined by coords\n   * @type GradientCoords\n   */\n  declare colorStops: ColorStop[];\n\n  /**\n   * If true, this object will not be exported during the serialization of a canvas\n   * @type boolean\n   */\n  declare excludeFromExport?: boolean;\n\n  /**\n   * ID used for SVG export functionalities\n   * @type number | string\n   */\n  declare readonly id: string | number;\n\n  static type = 'Gradient';\n\n  constructor({\n    type = 'linear' as T,\n    gradientUnits = 'pixels',\n    coords = {},\n    colorStops = [],\n    offsetX = 0,\n    offsetY = 0,\n    gradientTransform,\n    id,\n  }: GradientOptions<T>) {\n    this.id = id ? `${id}_${uid()}` : uid();\n    this.type = type;\n    this.gradientUnits = gradientUnits;\n    this.gradientTransform = gradientTransform;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    this.coords = {\n      ...(this.type === 'radial' ? radialDefaultCoords : linearDefaultCoords),\n      ...coords,\n    } as GradientCoords<T>;\n    this.colorStops = colorStops.slice();\n  }\n\n  // isType<S extends GradientType>(type: S): this is Gradient<S> {\n  //   return (this.type as GradientType) === type;\n  // }\n\n  /**\n   * Adds another colorStop\n   * @param {Record<string, string>} colorStop Object with offset and color\n   * @return {Gradient} thisArg\n   */\n  addColorStop(colorStops: Record<string, string>) {\n    for (const position in colorStops) {\n      const color = new Color(colorStops[position]);\n      this.colorStops.push({\n        offset: parseFloat(position),\n        color: color.toRgb(),\n        opacity: color.getAlpha(),\n      });\n    }\n    return this;\n  }\n\n  /**\n   * Returns object representation of a gradient\n   * @param {string[]} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {object}\n   */\n  toObject(propertiesToInclude?: (keyof this | string)[]) {\n    return {\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      type: this.type,\n      coords: this.coords,\n      colorStops: this.colorStops,\n      offsetX: this.offsetX,\n      offsetY: this.offsetY,\n      gradientUnits: this.gradientUnits,\n      gradientTransform: this.gradientTransform\n        ? [...this.gradientTransform]\n        : undefined,\n    };\n  }\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of an gradient\n   * @param {FabricObject} object Object to create a gradient for\n   * @return {String} SVG representation of an gradient (linear/radial)\n   */\n  toSVG(\n    object: FabricObject,\n    { additionalTransform: preTransform }: { additionalTransform?: string } = {}\n  ) {\n    const markup = [],\n      transform = (\n        this.gradientTransform\n          ? this.gradientTransform.concat()\n          : iMatrix.concat()\n      ) as TMat2D,\n      gradientUnits =\n        this.gradientUnits === 'pixels'\n          ? 'userSpaceOnUse'\n          : 'objectBoundingBox';\n    // colorStops must be sorted ascending, and guarded against deep mutations\n    const colorStops = this.colorStops\n      .map((colorStop) => ({ ...colorStop }))\n      .sort((a, b) => {\n        return a.offset - b.offset;\n      });\n\n    let offsetX = -this.offsetX,\n      offsetY = -this.offsetY;\n    if (gradientUnits === 'objectBoundingBox') {\n      offsetX /= object.width;\n      offsetY /= object.height;\n    } else {\n      offsetX += object.width / 2;\n      offsetY += object.height / 2;\n    }\n    // todo what about polygon/polyline?\n    if (isPath(object) && this.gradientUnits !== 'percentage') {\n      offsetX -= object.pathOffset.x;\n      offsetY -= object.pathOffset.y;\n    }\n    transform[4] -= offsetX;\n    transform[5] -= offsetY;\n\n    const commonAttributes = [\n      `id=\"SVGID_${this.id}\"`,\n      `gradientUnits=\"${gradientUnits}\"`,\n      `gradientTransform=\"${\n        preTransform ? preTransform + ' ' : ''\n      }${matrixToSVG(transform)}\"`,\n      '',\n    ].join(' ');\n\n    if (this.type === 'linear') {\n      const { x1, y1, x2, y2 } = this.coords;\n      markup.push(\n        '<linearGradient ',\n        commonAttributes,\n        ' x1=\"',\n        x1,\n        '\" y1=\"',\n        y1,\n        '\" x2=\"',\n        x2,\n        '\" y2=\"',\n        y2,\n        '\">\\n'\n      );\n    } else if (this.type === 'radial') {\n      const { x1, y1, x2, y2, r1, r2 } = this\n        .coords as GradientCoords<'radial'>;\n      const needsSwap = r1 > r2;\n      // svg radial gradient has just 1 radius. the biggest.\n      markup.push(\n        '<radialGradient ',\n        commonAttributes,\n        ' cx=\"',\n        needsSwap ? x1 : x2,\n        '\" cy=\"',\n        needsSwap ? y1 : y2,\n        '\" r=\"',\n        needsSwap ? r1 : r2,\n        '\" fx=\"',\n        needsSwap ? x2 : x1,\n        '\" fy=\"',\n        needsSwap ? y2 : y1,\n        '\">\\n'\n      );\n      if (needsSwap) {\n        // svg goes from internal to external radius. if radius are inverted, swap color stops.\n        colorStops.reverse(); //  mutates array\n        colorStops.forEach((colorStop) => {\n          colorStop.offset = 1 - colorStop.offset;\n        });\n      }\n      const minRadius = Math.min(r1, r2);\n      if (minRadius > 0) {\n        // i have to shift all colorStops and add new one in 0.\n        const maxRadius = Math.max(r1, r2),\n          percentageShift = minRadius / maxRadius;\n        colorStops.forEach((colorStop) => {\n          colorStop.offset += percentageShift * (1 - colorStop.offset);\n        });\n      }\n    }\n\n    colorStops.forEach(({ color, offset, opacity }) => {\n      markup.push(\n        '<stop ',\n        'offset=\"',\n        offset * 100 + '%',\n        '\" style=\"stop-color:',\n        color,\n        typeof opacity !== 'undefined' ? ';stop-opacity: ' + opacity : ';',\n        '\"/>\\n'\n      );\n    });\n\n    markup.push(\n      this.type === 'linear' ? '</linearGradient>' : '</radialGradient>',\n      '\\n'\n    );\n\n    return markup.join('');\n  }\n  /* _TO_SVG_END_ */\n\n  /**\n   * Returns an instance of CanvasGradient\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @return {CanvasGradient}\n   */\n  toLive(ctx: CanvasRenderingContext2D): CanvasGradient {\n    const coords = this.coords as GradientCoords<'radial'>;\n    const gradient =\n      this.type === 'linear'\n        ? ctx.createLinearGradient(coords.x1, coords.y1, coords.x2, coords.y2)\n        : ctx.createRadialGradient(\n            coords.x1,\n            coords.y1,\n            coords.r1,\n            coords.x2,\n            coords.y2,\n            coords.r2\n          );\n\n    this.colorStops.forEach(({ color, opacity, offset }) => {\n      gradient.addColorStop(\n        offset,\n        typeof opacity !== 'undefined'\n          ? new Color(color).setAlpha(opacity).toRgba()\n          : color\n      );\n    });\n\n    return gradient;\n  }\n\n  static async fromObject(\n    options: GradientOptions<'linear'>\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'radial'>\n  ): Promise<Gradient<'radial'>>;\n  static async fromObject(\n    options: GradientOptions<'linear'> | GradientOptions<'radial'>\n  ) {\n    return new this(options);\n  }\n\n  /* _FROM_SVG_START_ */\n  /**\n   * Returns {@link Gradient} instance from an SVG element\n   * @static\n   * @memberOf Gradient\n   * @param {SVGGradientElement} el SVG gradient element\n   * @param {FabricObject} instance\n   * @param {String} opacity A fill-opacity or stroke-opacity attribute to multiply to each stop's opacity.\n   * @param {SVGOptions} svgOptions an object containing the size of the SVG in order to parse correctly gradients\n   * that uses gradientUnits as 'userSpaceOnUse' and percentages.\n   * @return {Gradient} Gradient instance\n   * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n   * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n   *\n   *  @example\n   *\n   *  <linearGradient id=\"linearGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\"/>\n   *    <stop offset=\"100%\" stop-color=\"black\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <linearGradient id=\"linearGrad2\">\n   *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n   *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n   *  </linearGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad1\">\n   *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n   *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n   *  </radialGradient>\n   *\n   *  OR\n   *\n   *  <radialGradient id=\"radialGrad2\">\n   *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n   *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n   *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n   *  </radialGradient>\n   *\n   */\n  static fromElement(\n    el: SVGGradientElement,\n    instance: FabricObject,\n    svgOptions: SVGOptions\n  ): Gradient<GradientType> {\n    const gradientUnits = parseGradientUnits(el);\n    const center = instance._findCenterFromElement();\n    return new this({\n      id: el.getAttribute('id') || undefined,\n      type: parseType(el),\n      coords: parseCoords(el, {\n        width: svgOptions.viewBoxWidth || svgOptions.width,\n        height: svgOptions.viewBoxHeight || svgOptions.height,\n      }),\n      colorStops: parseColorStops(el, svgOptions.opacity),\n      gradientUnits,\n      gradientTransform: parseTransformAttribute(\n        el.getAttribute('gradientTransform') || ''\n      ),\n      ...(gradientUnits === 'pixels'\n        ? {\n            offsetX: instance.width / 2 - center.x,\n            offsetY: instance.height / 2 - center.y,\n          }\n        : {\n            offsetX: 0,\n            offsetY: 0,\n          }),\n    });\n  }\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Gradient, 'gradient');\nclassRegistry.setClass(Gradient, 'linear');\nclassRegistry.setClass(Gradient, 'radial');\n","import { config } from '../config';\nimport type { Abortable, TCrossOrigin, TMat2D, TSize } from '../typedefs';\nimport { ifNaN } from '../util/internals';\nimport { uid } from '../util/internals/uid';\nimport { loadImage } from '../util/misc/objectEnlive';\nimport { pick } from '../util/misc/pick';\nimport { toFixed } from '../util/misc/toFixed';\nimport { classRegistry } from '../ClassRegistry';\nimport type {\n  PatternRepeat,\n  PatternOptions,\n  SerializedPatternOptions,\n} from './types';\nimport { log } from '../util/internals/console';\n\n/**\n * @see {@link http://fabricjs.com/patterns demo}\n * @see {@link http://fabricjs.com/dynamic-patterns demo}\n */\nexport class Pattern {\n  static type = 'Pattern';\n\n  /**\n   * Legacy identifier of the class. Prefer using this.constructor.type 'Pattern'\n   * or utils like isPattern, or instance of to indentify a pattern in your code.\n   * Will be removed in future versiones\n   * @TODO add sustainable warning message\n   * @type string\n   * @deprecated\n   */\n  get type() {\n    return 'pattern';\n  }\n\n  set type(value) {\n    log('warn', 'Setting type has no effect', value);\n  }\n\n  /**\n   * @type PatternRepeat\n   * @defaults\n   */\n  repeat: PatternRepeat = 'repeat';\n\n  /**\n   * Pattern horizontal offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetX = 0;\n\n  /**\n   * Pattern vertical offset from object's left/top corner\n   * @type Number\n   * @default\n   */\n  offsetY = 0;\n\n  /**\n   * @type TCrossOrigin\n   * @default\n   */\n  crossOrigin: TCrossOrigin = '';\n\n  /**\n   * transform matrix to change the pattern, imported from svgs.\n   * @todo verify if using the identity matrix as default makes the rest of the code more easy\n   * @type Array\n   * @default\n   */\n  patternTransform: TMat2D | null = null;\n\n  /**\n   * The actual pixel source of the pattern\n   */\n  declare source: CanvasImageSource;\n\n  /**\n   * If true, this object will not be exported during the serialization of a canvas\n   * @type boolean\n   */\n  declare excludeFromExport?: boolean;\n\n  /**\n   * ID used for SVG export functionalities\n   * @type number\n   */\n  declare readonly id: number;\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   * @param {option.source} [source] the pattern source, eventually empty or a drawable\n   */\n  constructor(options: PatternOptions) {\n    this.id = uid();\n    Object.assign(this, options);\n  }\n\n  /**\n   * @returns true if {@link source} is an <img> element\n   */\n  isImageSource(): this is { source: HTMLImageElement } {\n    return (\n      !!this.source && typeof (this.source as HTMLImageElement).src === 'string'\n    );\n  }\n\n  /**\n   * @returns true if {@link source} is a <canvas> element\n   */\n  isCanvasSource(): this is { source: HTMLCanvasElement } {\n    return !!this.source && !!(this.source as HTMLCanvasElement).toDataURL;\n  }\n\n  sourceToString(): string {\n    return this.isImageSource()\n      ? this.source.src\n      : this.isCanvasSource()\n      ? this.source.toDataURL()\n      : '';\n  }\n\n  /**\n   * Returns an instance of CanvasPattern\n   * @param {CanvasRenderingContext2D} ctx Context to create pattern\n   * @return {CanvasPattern}\n   */\n  toLive(ctx: CanvasRenderingContext2D): CanvasPattern | null {\n    if (\n      // if the image failed to load, return, and allow rest to continue loading\n      !this.source ||\n      // if an image\n      (this.isImageSource() &&\n        (!this.source.complete ||\n          this.source.naturalWidth === 0 ||\n          this.source.naturalHeight === 0))\n    ) {\n      return null;\n    }\n\n    return ctx.createPattern(this.source, this.repeat)!;\n  }\n\n  /**\n   * Returns object representation of a pattern\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {object} Object representation of a pattern instance\n   */\n  toObject(propertiesToInclude: string[] = []): Record<string, any> {\n    const { repeat, crossOrigin } = this;\n    return {\n      ...pick(this, propertiesToInclude as (keyof this)[]),\n      type: 'pattern',\n      source: this.sourceToString(),\n      repeat,\n      crossOrigin,\n      offsetX: toFixed(this.offsetX, config.NUM_FRACTION_DIGITS),\n      offsetY: toFixed(this.offsetY, config.NUM_FRACTION_DIGITS),\n      patternTransform: this.patternTransform\n        ? [...this.patternTransform]\n        : null,\n    };\n  }\n\n  /* _TO_SVG_START_ */\n  /**\n   * Returns SVG representation of a pattern\n   */\n  toSVG({ width, height }: TSize): string {\n    const { source: patternSource, repeat, id } = this,\n      patternOffsetX = ifNaN(this.offsetX / width, 0),\n      patternOffsetY = ifNaN(this.offsetY / height, 0),\n      patternWidth =\n        repeat === 'repeat-y' || repeat === 'no-repeat'\n          ? 1 + Math.abs(patternOffsetX || 0)\n          : ifNaN(\n              ((patternSource as HTMLImageElement).width as number) / width,\n              0\n            ),\n      patternHeight =\n        repeat === 'repeat-x' || repeat === 'no-repeat'\n          ? 1 + Math.abs(patternOffsetY || 0)\n          : ifNaN(\n              ((patternSource as HTMLImageElement).height as number) / height,\n              0\n            );\n\n    return [\n      `<pattern id=\"SVGID_${id}\" x=\"${patternOffsetX}\" y=\"${patternOffsetY}\" width=\"${patternWidth}\" height=\"${patternHeight}\">`,\n      `<image x=\"0\" y=\"0\" width=\"${\n        (patternSource as HTMLImageElement).width\n      }\" height=\"${\n        (patternSource as HTMLImageElement).height\n      }\" xlink:href=\"${this.sourceToString()}\"></image>`,\n      `</pattern>`,\n      '',\n    ].join('\\n');\n  }\n  /* _TO_SVG_END_ */\n\n  static async fromObject(\n    { type, source, ...serialized }: SerializedPatternOptions,\n    options: Abortable\n  ): Promise<Pattern> {\n    const img = await loadImage(source, {\n      ...options,\n      crossOrigin: serialized.crossOrigin,\n    });\n    return new this({ ...serialized, source: img });\n  }\n}\n\nclassRegistry.setClass(Pattern);\n// kept for compatibility reason\nclassRegistry.setClass(Pattern, 'pattern');\n","import { Color } from '../color/Color';\nimport type { Point } from '../Point';\nimport type { Shadow } from '../Shadow';\nimport type { Canvas } from '../canvas/Canvas';\nimport type { TBrushEventData } from './typedefs';\n\n/**\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nexport abstract class BaseBrush {\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color = 'rgb(0, 0, 0)';\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width = 1;\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type Shadow\n   * @default\n   */\n  shadow: Shadow | null = null;\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: CanvasLineCap = 'round';\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: CanvasLineJoin = 'round';\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit = 10;\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: number[] | null = null;\n\n  /**\n   * When `true`, the free drawing is limited to the whiteboard size. Default to false.\n   * @type Boolean\n   * @default false\n   */\n\n  limitedToCanvasSize = false;\n\n  /**\n   * @todo add type\n   */\n  declare canvas: Canvas;\n\n  constructor(canvas: Canvas) {\n    this.canvas = canvas;\n  }\n\n  abstract _render(): void;\n  abstract onMouseDown(pointer: Point, ev: TBrushEventData): void;\n  abstract onMouseMove(pointer: Point, ev: TBrushEventData): void;\n  /**\n   * @returns true if brush should continue blocking interaction\n   */\n  abstract onMouseUp(ev: TBrushEventData): boolean | void;\n\n  /**\n   * Sets brush styles\n   * @private\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles(ctx: CanvasRenderingContext2D) {\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    ctx.setLineDash(this.strokeDashArray || []);\n  }\n\n  /**\n   * Sets the transformation on given context\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   * @private\n   */\n  protected _saveAndTransform(ctx: CanvasRenderingContext2D) {\n    const v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  }\n\n  protected needsFullRender() {\n    const color = new Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  }\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  protected _setShadow() {\n    if (!this.shadow || !this.canvas) {\n      return;\n    }\n\n    const canvas = this.canvas,\n      shadow = this.shadow,\n      ctx = canvas.contextTop,\n      zoom = canvas.getZoom() * canvas.getRetinaScaling();\n\n    ctx.shadowColor = shadow.color;\n    ctx.shadowBlur = shadow.blur * zoom;\n    ctx.shadowOffsetX = shadow.offsetX * zoom;\n    ctx.shadowOffsetY = shadow.offsetY * zoom;\n  }\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  protected _resetShadow() {\n    const ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n\n  /**\n   * Check is pointer is outside canvas boundaries\n   * @param {Object} pointer\n   * @private\n   */\n  protected _isOutSideCanvas(pointer: Point) {\n    return (\n      pointer.x < 0 ||\n      pointer.x > this.canvas.getWidth() ||\n      pointer.y < 0 ||\n      pointer.y > this.canvas.getHeight()\n    );\n  }\n}\n","import { config } from '../config';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { XY } from '../Point';\nimport { Point } from '../Point';\nimport { makeBoundingBoxFromPoints } from '../util/misc/boundingBoxFromPoints';\nimport { toFixed } from '../util/misc/toFixed';\nimport {\n  getBoundsOfCurve,\n  joinPath,\n  makePathSimpler,\n  parsePath,\n} from '../util/path';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type {\n  TComplexPathData,\n  TPathSegmentInfo,\n  TSimplePathData,\n} from '../util/path/typedefs';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type {\n  TBBox,\n  TClassProperties,\n  TSVGReviver,\n  TOptions,\n} from '../typedefs';\nimport { CENTER, LEFT, TOP } from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\ninterface UniquePathProps {\n  sourcePath?: string;\n  path?: TSimplePathData;\n}\n\nexport interface SerializedPathProps\n  extends SerializedObjectProps,\n    UniquePathProps {}\n\nexport interface PathProps extends FabricObjectProps, UniquePathProps {}\n\nexport interface IPathBBox extends TBBox {\n  left: number;\n  top: number;\n  pathOffset: Point;\n}\n\nexport class Path<\n  Props extends TOptions<PathProps> = Partial<PathProps>,\n  SProps extends SerializedPathProps = SerializedPathProps,\n  EventSpec extends ObjectEvents = ObjectEvents\n> extends FabricObject<Props, SProps, EventSpec> {\n  /**\n   * Array of path points\n   * @type Array\n   * @default\n   */\n  declare path: TSimplePathData;\n\n  declare pathOffset: Point;\n\n  declare sourcePath?: string;\n\n  declare segmentsInfo?: TPathSegmentInfo[];\n\n  static type = 'Path';\n\n  static cacheProperties = [...cacheProperties, 'path', 'fillRule'];\n\n  /**\n   * Constructor\n   * @param {TComplexPathData} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n   * @param {Partial<PathProps>} [options] Options object\n   * @return {Path} thisArg\n   */\n  constructor(\n    path: TComplexPathData | string,\n    { path: _, left, top, ...options }: Partial<Props> = {}\n  ) {\n    super(options as Props);\n    this._setPath(path || [], true);\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  /**\n   * @private\n   * @param {TComplexPathData | string} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n   * @param {boolean} [adjustPosition] pass true to reposition the object according to the bounding box\n   * @returns {Point} top left position of the bounding box, useful for complementary positioning\n   */\n  _setPath(path: TComplexPathData | string, adjustPosition?: boolean) {\n    this.path = makePathSimpler(Array.isArray(path) ? path : parsePath(path));\n    this.setBoundingBox(adjustPosition);\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates, by look at the polyline/polygon points.\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    const bbox = this._calcBoundsFromPath();\n    return new Point(bbox.left + bbox.width / 2, bbox.top + bbox.height / 2);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render path on\n   */\n  _renderPathCommands(ctx: CanvasRenderingContext2D) {\n    const l = -this.pathOffset.x,\n      t = -this.pathOffset.y;\n\n    ctx.beginPath();\n\n    for (const command of this.path) {\n      switch (\n        command[0] // first letter\n      ) {\n        case 'L': // lineto, absolute\n          ctx.lineTo(command[1] + l, command[2] + t);\n          break;\n\n        case 'M': // moveTo, absolute\n          ctx.moveTo(command[1] + l, command[2] + t);\n          break;\n\n        case 'C': // bezierCurveTo, absolute\n          ctx.bezierCurveTo(\n            command[1] + l,\n            command[2] + t,\n            command[3] + l,\n            command[4] + t,\n            command[5] + l,\n            command[6] + t\n          );\n          break;\n\n        case 'Q': // quadraticCurveTo, absolute\n          ctx.quadraticCurveTo(\n            command[1] + l,\n            command[2] + t,\n            command[3] + l,\n            command[4] + t\n          );\n          break;\n\n        case 'Z':\n          ctx.closePath();\n          break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render path on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    this._renderPathCommands(ctx);\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {string} string representation of an instance\n   */\n  toString() {\n    return `#<Path (${this.complexity()}): { \"top\": ${this.top}, \"left\": ${\n      this.left\n    } }>`;\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      path: this.path.map((pathCmd) => pathCmd.slice()),\n    };\n  }\n\n  /**\n   * Returns dataless object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toDatalessObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    const o = this.toObject<T, K>(propertiesToInclude);\n    if (this.sourcePath) {\n      delete o.path;\n      o.sourcePath = this.sourcePath;\n    }\n    return o;\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const path = joinPath(this.path, config.NUM_FRACTION_DIGITS);\n    return [\n      '<path ',\n      'COMMON_PARTS',\n      `d=\"${path}\" stroke-linecap=\"round\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @return the path command's translate transform attribute\n   */\n  _getOffsetTransform() {\n    const digits = config.NUM_FRACTION_DIGITS;\n    return ` translate(${toFixed(-this.pathOffset.x, digits)}, ${toFixed(\n      -this.pathOffset.y,\n      digits\n    )})`;\n  }\n\n  /**\n   * Returns svg clipPath representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {string} svg representation of an instance\n   */\n  toClipPathSVG(reviver: TSVGReviver): string {\n    const additionalTransform = this._getOffsetTransform();\n    return (\n      '\\t' +\n      this._createBaseClipPathSVGMarkup(this._toSVG(), {\n        reviver: reviver,\n        additionalTransform: additionalTransform,\n      })\n    );\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @param {Function} [reviver] Method for further parsing of svg representation.\n   * @return {string} svg representation of an instance\n   */\n  toSVG(reviver: TSVGReviver): string {\n    const additionalTransform = this._getOffsetTransform();\n    return this._createBaseSVGMarkup(this._toSVG(), {\n      reviver: reviver,\n      additionalTransform: additionalTransform,\n    });\n  }\n\n  /**\n   * Returns number representation of an instance complexity\n   * @return {number} complexity of this instance\n   */\n  complexity() {\n    return this.path.length;\n  }\n\n  setDimensions() {\n    this.setBoundingBox();\n  }\n\n  setBoundingBox(adjustPosition?: boolean) {\n    const { width, height, pathOffset } = this._calcDimensions();\n    this.set({ width, height, pathOffset });\n    // using pathOffset because it match the use case.\n    // if pathOffset change here we need to use left + width/2 , top + height/2\n    adjustPosition && this.setPositionByOrigin(pathOffset, CENTER, CENTER);\n  }\n\n  _calcBoundsFromPath(): TBBox {\n    const bounds: XY[] = [];\n    let subpathStartX = 0,\n      subpathStartY = 0,\n      x = 0, // current x\n      y = 0; // current y\n\n    for (const command of this.path) {\n      // current instruction\n      switch (\n        command[0] // first letter\n      ) {\n        case 'L': // lineto, absolute\n          x = command[1];\n          y = command[2];\n          bounds.push(new Point(subpathStartX, subpathStartY), new Point(x, y));\n          break;\n\n        case 'M': // moveTo, absolute\n          x = command[1];\n          y = command[2];\n          subpathStartX = x;\n          subpathStartY = y;\n          break;\n\n        case 'C': // bezierCurveTo, absolute\n          bounds.push(\n            ...getBoundsOfCurve(\n              x,\n              y,\n              command[1],\n              command[2],\n              command[3],\n              command[4],\n              command[5],\n              command[6]\n            )\n          );\n          x = command[5];\n          y = command[6];\n          break;\n\n        case 'Q': // quadraticCurveTo, absolute\n          bounds.push(\n            ...getBoundsOfCurve(\n              x,\n              y,\n              command[1],\n              command[2],\n              command[1],\n              command[2],\n              command[3],\n              command[4]\n            )\n          );\n          x = command[3];\n          y = command[4];\n          break;\n\n        case 'Z':\n          x = subpathStartX;\n          y = subpathStartY;\n          break;\n      }\n    }\n    return makeBoundingBoxFromPoints(bounds);\n  }\n\n  /**\n   * @private\n   */\n  _calcDimensions(): IPathBBox {\n    const bbox = this._calcBoundsFromPath();\n\n    return {\n      ...bbox,\n      pathOffset: new Point(\n        bbox.left + bbox.width / 2,\n        bbox.top + bbox.height / 2\n      ),\n    };\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `Path.fromElement`)\n   * @static\n   * @memberOf Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES, 'd'];\n\n  /**\n   * Creates an instance of Path from an object\n   * @static\n   * @memberOf Path\n   * @param {Object} object\n   * @returns {Promise<Path>}\n   */\n  static fromObject<T extends TOptions<SerializedPathProps>>(object: T) {\n    return this._fromObject<Path>(object, {\n      extraParam: 'path',\n    });\n  }\n\n  /**\n   * Creates an instance of Path from an SVG <path> element\n   * @static\n   * @memberOf Path\n   * @param {HTMLElement} element to parse\n   * @param {Partial<PathProps>} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Partial<PathProps>,\n    cssRules?: CSSRules\n  ) {\n    const { d, ...parsedAttributes } = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules\n    );\n    return new this(d, {\n      ...parsedAttributes,\n      ...options,\n      // we pass undefined to instruct the constructor to position the object using the bbox\n      left: undefined,\n      top: undefined,\n    });\n  }\n}\n\nclassRegistry.setClass(Path);\nclassRegistry.setSVGClass(Path);\n\n/* _FROM_SVG_START_ */\n","import type { ModifierKey, TEvent } from '../EventTypeDefs';\nimport type { Point } from '../Point';\nimport { Shadow } from '../Shadow';\nimport { Path } from '../shapes/Path';\nimport { getSmoothPathFromPoints, joinPath } from '../util/path';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { TSimplePathData } from '../util/path/typedefs';\n\n/**\n * @private\n * @param {TSimplePathData} pathData SVG path commands\n * @returns {boolean}\n */\nfunction isEmptySVGPath(pathData: TSimplePathData): boolean {\n  return joinPath(pathData) === 'M 0 0 Q 0 0 0 0 L 0 0';\n}\n\nexport class PencilBrush extends BaseBrush {\n  /**\n   * Discard points that are less than `decimate` pixel distant from each other\n   * @type Number\n   * @default 0.4\n   */\n  decimate = 0.4;\n\n  /**\n   * Draws a straight line between last recorded point to current pointer\n   * Used for `shift` functionality\n   *\n   * @type boolean\n   * @default false\n   */\n  drawStraightLine = false;\n\n  /**\n   * The event modifier key that makes the brush draw a straight line.\n   * If `null` or 'none' or any other string that is not a modifier key the feature is disabled.\n   * @type {ModifierKey | undefined | null}\n   */\n  straightLineKey: ModifierKey | undefined | null = 'shiftKey';\n\n  private declare _points: Point[];\n  private declare _hasStraightLine: boolean;\n  private declare oldEnd?: Point;\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this._points = [];\n    this._hasStraightLine = false;\n  }\n\n  needsFullRender() {\n    return super.needsFullRender() || this._hasStraightLine;\n  }\n\n  static drawSegment(ctx: CanvasRenderingContext2D, p1: Point, p2: Point) {\n    const midPoint = p1.midPointFrom(p2);\n    ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n    return midPoint;\n  }\n\n  /**\n   * Invoked on mouse down\n   * @param {Point} pointer\n   */\n  onMouseDown(pointer: Point, { e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return;\n    }\n    this.drawStraightLine = !!this.straightLineKey && e[this.straightLineKey];\n    this._prepareForDrawing(pointer);\n    // capture coordinates immediately\n    // this allows to draw dots (when movement never occurs)\n    this._addPoint(pointer);\n    this._render();\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point, { e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return;\n    }\n    this.drawStraightLine = !!this.straightLineKey && e[this.straightLineKey];\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    if (this._addPoint(pointer) && this._points.length > 1) {\n      if (this.needsFullRender()) {\n        // redraw curve\n        // clear top canvas\n        this.canvas.clearContext(this.canvas.contextTop);\n        this._render();\n      } else {\n        const points = this._points,\n          length = points.length,\n          ctx = this.canvas.contextTop;\n        // draw the curve update\n        this._saveAndTransform(ctx);\n        if (this.oldEnd) {\n          ctx.beginPath();\n          ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n        }\n        this.oldEnd = PencilBrush.drawSegment(\n          ctx,\n          points[length - 2],\n          points[length - 1]\n        );\n        ctx.stroke();\n        ctx.restore();\n      }\n    }\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp({ e }: TEvent) {\n    if (!this.canvas._isMainEvent(e)) {\n      return true;\n    }\n    this.drawStraightLine = false;\n    this.oldEnd = undefined;\n    this._finalizeAndAddPath();\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {Point} pointer Actual mouse position related to the canvas.\n   */\n  _prepareForDrawing(pointer: Point) {\n    this._reset();\n    this._addPoint(pointer);\n    this.canvas.contextTop.moveTo(pointer.x, pointer.y);\n  }\n\n  /**\n   * @private\n   * @param {Point} point Point to be added to points array\n   */\n  _addPoint(point: Point) {\n    if (\n      this._points.length > 1 &&\n      point.eq(this._points[this._points.length - 1])\n    ) {\n      return false;\n    }\n    if (this.drawStraightLine && this._points.length > 1) {\n      this._hasStraightLine = true;\n      this._points.pop();\n    }\n    this._points.push(point);\n    return true;\n  }\n\n  /**\n   * Clear points array and set contextTop canvas style.\n   * @private\n   */\n  _reset() {\n    this._points = [];\n    this._setBrushStyles(this.canvas.contextTop);\n    this._setShadow();\n    this._hasStraightLine = false;\n  }\n\n  /**\n   * Draw a smooth path on the topCanvas using quadraticCurveTo\n   * @private\n   * @param {CanvasRenderingContext2D} [ctx]\n   */\n  _render(ctx: CanvasRenderingContext2D = this.canvas.contextTop) {\n    let p1 = this._points[0],\n      p2 = this._points[1];\n    this._saveAndTransform(ctx);\n    ctx.beginPath();\n    //if we only have 2 points in the path and they are the same\n    //it means that the user only clicked the canvas without moving the mouse\n    //then we should be drawing a dot. A path isn't drawn between two identical dots\n    //that's why we set them apart a bit\n    if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n      const width = this.width / 1000;\n      p1.x -= width;\n      p2.x += width;\n    }\n    ctx.moveTo(p1.x, p1.y);\n\n    for (let i = 1; i < this._points.length; i++) {\n      // we pick the point between pi + 1 & pi + 2 as the\n      // end point and p1 as our control point.\n      PencilBrush.drawSegment(ctx, p1, p2);\n      p1 = this._points[i];\n      p2 = this._points[i + 1];\n    }\n    // Draw last line as a straight line while\n    // we wait for the next point to be able to calculate\n    // the bezier control point\n    ctx.lineTo(p1.x, p1.y);\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  /**\n   * Converts points to SVG path\n   * @param {Point[]} points Array of points\n   * @return {TSimplePathData} SVG path commands\n   */\n  convertPointsToSVGPath(points: Point[]): TSimplePathData {\n    const correction = this.width / 1000;\n    return getSmoothPathFromPoints(points, correction);\n  }\n\n  /**\n   * Creates a Path object to add on canvas\n   * @param {TSimplePathData} pathData Path data\n   * @return {Path} Path to add on canvas\n   */\n  createPath(pathData: TSimplePathData): Path {\n    const path = new Path(pathData, {\n      fill: null,\n      stroke: this.color,\n      strokeWidth: this.width,\n      strokeLineCap: this.strokeLineCap,\n      strokeMiterLimit: this.strokeMiterLimit,\n      strokeLineJoin: this.strokeLineJoin,\n      strokeDashArray: this.strokeDashArray,\n    });\n    if (this.shadow) {\n      this.shadow.affectStroke = true;\n      path.shadow = new Shadow(this.shadow);\n    }\n\n    return path;\n  }\n\n  /**\n   * Decimate points array with the decimate value\n   */\n  decimatePoints(points: Point[], distance: number) {\n    if (points.length <= 2) {\n      return points;\n    }\n    let lastPoint = points[0],\n      cDistance;\n    const zoom = this.canvas.getZoom(),\n      adjustedDistance = Math.pow(distance / zoom, 2),\n      l = points.length - 1,\n      newPoints = [lastPoint];\n    for (let i = 1; i < l - 1; i++) {\n      cDistance =\n        Math.pow(lastPoint.x - points[i].x, 2) +\n        Math.pow(lastPoint.y - points[i].y, 2);\n      if (cDistance >= adjustedDistance) {\n        lastPoint = points[i];\n        newPoints.push(lastPoint);\n      }\n    }\n    // Add the last point from the original line to the end of the array.\n    // This ensures decimate doesn't delete the last point on the line, and ensures the line is > 1 point.\n    newPoints.push(points[l]);\n    return newPoints;\n  }\n\n  /**\n   * On mouseup after drawing the path on contextTop canvas\n   * we use the points captured to create an new Path object\n   * and add it to the canvas.\n   */\n  _finalizeAndAddPath() {\n    const ctx = this.canvas.contextTop;\n    ctx.closePath();\n    if (this.decimate) {\n      this._points = this.decimatePoints(this._points, this.decimate);\n    }\n    const pathData = this.convertPointsToSVGPath(this._points);\n    if (isEmptySVGPath(pathData)) {\n      // do not create 0 width/height paths, as they are\n      // rendered inconsistently across browsers\n      // Firefox 4, for example, renders a dot,\n      // whereas Chrome 10 renders nothing\n      this.canvas.requestRenderAll();\n      return;\n    }\n\n    const path = this.createPath(pathData);\n    this.canvas.clearContext(this.canvas.contextTop);\n    this.canvas.fire('before:path:created', { path: path });\n    this.canvas.add(path);\n    this.canvas.requestRenderAll();\n    path.setCoords();\n    this._resetShadow();\n\n    // fire event 'path' created\n    this.canvas.fire('path:created', { path: path });\n  }\n}\n","import type { ObjectEvents } from '../EventTypeDefs';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport { cos } from '../util/misc/cos';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { sin } from '../util/misc/sin';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { CSSRules } from '../parser/typedefs';\n\ninterface UniqueCircleProps {\n  /**\n   * Radius of this circle\n   * @type Number\n   * @default 0\n   */\n  radius: number;\n\n  /**\n   * Angle for the start of the circle, in degrees.\n   * @type TDegree 0 - 359\n   * @default 0\n   */\n  startAngle: number;\n\n  /**\n   * Angle for the end of the circle, in degrees\n   * @type TDegree 1 - 360\n   * @default 360\n   */\n  endAngle: number;\n\n  /**\n   * Orientation for the direction of the circle.\n   * Setting to true will switch the arc of the circle to traverse from startAngle to endAngle in a counter-clockwise direction.\n   * Note: this will only change how the circle is drawn, and does not affect rotational transformation.\n   * @default false\n   */\n  counterClockwise: boolean;\n}\n\nexport interface SerializedCircleProps\n  extends SerializedObjectProps,\n    UniqueCircleProps {}\n\nexport interface CircleProps extends FabricObjectProps, UniqueCircleProps {}\n\nconst CIRCLE_PROPS = [\n  'radius',\n  'startAngle',\n  'endAngle',\n  'counterClockwise',\n] as const;\n\nexport const circleDefaultValues: Partial<TClassProperties<Circle>> = {\n  radius: 0,\n  startAngle: 0,\n  endAngle: 360,\n  counterClockwise: false,\n};\n\nexport class Circle<\n    Props extends TOptions<CircleProps> = Partial<CircleProps>,\n    SProps extends SerializedCircleProps = SerializedCircleProps,\n    EventSpec extends ObjectEvents = ObjectEvents\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements UniqueCircleProps\n{\n  declare radius: number;\n  declare startAngle: number;\n  declare endAngle: number;\n  declare counterClockwise: boolean;\n\n  static type = 'Circle';\n\n  static cacheProperties = [...cacheProperties, ...CIRCLE_PROPS];\n\n  static ownDefaults = circleDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Circle.ownDefaults,\n    };\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n\n    if (key === 'radius') {\n      this.setRadius(value);\n    }\n\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.arc(\n      0,\n      0,\n      this.radius,\n      degreesToRadians(this.startAngle),\n      degreesToRadians(this.endAngle),\n      this.counterClockwise\n    );\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns horizontal radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRadiusX(): number {\n    return this.get('radius') * this.get('scaleX');\n  }\n\n  /**\n   * Returns vertical radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRadiusY(): number {\n    return this.get('radius') * this.get('scaleY');\n  }\n\n  /**\n   * Sets radius of an object (and updates width accordingly)\n   */\n  setRadius(value: number) {\n    this.radius = value;\n    this.set({ width: value * 2, height: value * 2 });\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...CIRCLE_PROPS, ...propertiesToInclude]);\n  }\n\n  /* _TO_SVG_START_ */\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(): string[] {\n    const angle = (this.endAngle - this.startAngle) % 360;\n\n    if (angle === 0) {\n      return [\n        '<circle ',\n        'COMMON_PARTS',\n        'cx=\"0\" cy=\"0\" ',\n        'r=\"',\n        `${this.radius}`,\n        '\" />\\n',\n      ];\n    } else {\n      const { radius } = this;\n      const start = degreesToRadians(this.startAngle),\n        end = degreesToRadians(this.endAngle),\n        startX = cos(start) * radius,\n        startY = sin(start) * radius,\n        endX = cos(end) * radius,\n        endY = sin(end) * radius,\n        largeFlag = angle > 180 ? 1 : 0,\n        sweepFlag = this.counterClockwise ? 0 : 1;\n      return [\n        `<path d=\"M ${startX} ${startY} A ${radius} ${radius} 0 ${largeFlag} ${sweepFlag} ${endX} ${endY}\" `,\n        'COMMON_PARTS',\n        ' />\\n',\n      ];\n    }\n  }\n  /* _TO_SVG_END_ */\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Circle.fromElement})\n   * @static\n   * @memberOf Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  static ATTRIBUTE_NAMES = ['cx', 'cy', 'r', ...SHARED_ATTRIBUTES];\n\n  /**\n   * Returns {@link Circle} instance from an SVG element\n   * @static\n   * @memberOf Circle\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Partial Circle object to default missing properties on the element.\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules\n  ): Promise<Circle> {\n    const {\n      left = 0,\n      top = 0,\n      radius = 0,\n      ...otherParsedAttributes\n    } = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules\n    ) as Partial<CircleProps>;\n\n    // this probably requires to be fixed for default origins not being top/left.\n\n    return new this({\n      ...otherParsedAttributes,\n      radius,\n      left: left - radius,\n      top: top - radius,\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * @todo how do we declare this??\n   */\n  static fromObject<T extends TOptions<SerializedCircleProps>>(object: T) {\n    return super._fromObject<Circle>(object);\n  }\n}\n\nclassRegistry.setClass(Circle);\nclassRegistry.setSVGClass(Circle);\n","import { Color } from '../color/Color';\nimport type { Point } from '../Point';\nimport { Shadow } from '../Shadow';\nimport { Circle } from '../shapes/Circle';\nimport { Group } from '../shapes/Group';\nimport { getRandomInt } from '../util/internals';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { CircleBrushPoint } from './typedefs';\nimport { CENTER } from '../constants';\n\nexport class CircleBrush extends BaseBrush {\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width = 10;\n\n  declare points: CircleBrushPoint[];\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this.points = [];\n  }\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Point} pointer\n   */\n  drawDot(pointer: Point) {\n    const point = this.addPoint(pointer),\n      ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    this.dot(ctx, point);\n    ctx.restore();\n  }\n\n  dot(ctx: CanvasRenderingContext2D, point: CircleBrushPoint) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  }\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown(pointer: Point) {\n    this.points = [];\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  }\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render() {\n    const ctx = this.canvas.contextTop,\n      points = this.points;\n    this._saveAndTransform(ctx);\n    for (let i = 0; i < points.length; i++) {\n      this.dot(ctx, points[i]);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point) {\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n      this._render();\n    } else {\n      this.drawDot(pointer);\n    }\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp() {\n    const originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    const circles: Circle[] = [];\n\n    for (let i = 0; i < this.points.length; i++) {\n      const point = this.points[i],\n        circle = new Circle({\n          radius: point.radius,\n          left: point.x,\n          top: point.y,\n          originX: CENTER,\n          originY: CENTER,\n          fill: point.fill,\n        });\n\n      this.shadow && (circle.shadow = new Shadow(this.shadow));\n\n      circles.push(circle);\n    }\n    const group = new Group(circles, { canvas: this.canvas });\n\n    this.canvas.fire('before:path:created', { path: group });\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  }\n\n  /**\n   * @param {Object} pointer\n   * @return {Point} Just added pointer point\n   */\n  addPoint({ x, y }: Point) {\n    const pointerPoint: CircleBrushPoint = {\n      x,\n      y,\n      radius: getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2,\n      fill: new Color(this.color).setAlpha(getRandomInt(0, 100) / 100).toRgba(),\n    };\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n}\n","import type { Point } from '../Point';\nimport { Group } from '../shapes/Group';\nimport { Shadow } from '../Shadow';\nimport { Rect } from '../shapes/Rect';\nimport { getRandomInt } from '../util/internals';\nimport type { Canvas } from '../canvas/Canvas';\nimport { BaseBrush } from './BaseBrush';\nimport type { SprayBrushPoint } from './typedefs';\nimport { CENTER } from '../constants';\n\n/**\n *\n * @param rects\n * @returns\n */\nfunction getUniqueRects(rects: Rect[]) {\n  const uniqueRects: Record<string, boolean> = {};\n  const uniqueRectsArray: Rect[] = [];\n\n  for (let i = 0, key: string; i < rects.length; i++) {\n    key = `${rects[i].left}${rects[i].top}`;\n    if (!uniqueRects[key]) {\n      uniqueRects[key] = true;\n      uniqueRectsArray.push(rects[i]);\n    }\n  }\n\n  return uniqueRectsArray;\n}\n\nexport class SprayBrush extends BaseBrush {\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width = 10;\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density = 20;\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth = 1;\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance = 1;\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity = false;\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping = true;\n\n  private declare sprayChunks: SprayBrushPoint[][];\n\n  private declare sprayChunk: SprayBrushPoint[];\n\n  /**\n   * Constructor\n   * @param {Canvas} canvas\n   * @return {SprayBrush} Instance of a spray brush\n   */\n  constructor(canvas: Canvas) {\n    super(canvas);\n    this.sprayChunks = [];\n    this.sprayChunk = [];\n  }\n\n  /**\n   * Invoked on mouse down\n   * @param {Point} pointer\n   */\n  onMouseDown(pointer: Point) {\n    this.sprayChunks = [];\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.renderChunck(this.sprayChunk);\n  }\n\n  /**\n   * Invoked on mouse move\n   * @param {Point} pointer\n   */\n  onMouseMove(pointer: Point) {\n    if (this.limitedToCanvasSize === true && this._isOutSideCanvas(pointer)) {\n      return;\n    }\n    this.addSprayChunk(pointer);\n    this.renderChunck(this.sprayChunk);\n  }\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp() {\n    const originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    const rects: Rect[] = [];\n\n    for (let i = 0; i < this.sprayChunks.length; i++) {\n      const sprayChunk = this.sprayChunks[i];\n      for (let j = 0; j < sprayChunk.length; j++) {\n        const chunck = sprayChunk[j];\n        const rect = new Rect({\n          width: chunck.width,\n          height: chunck.width,\n          left: chunck.x + 1,\n          top: chunck.y + 1,\n          originX: CENTER,\n          originY: CENTER,\n          fill: this.color,\n        });\n        rects.push(rect);\n      }\n    }\n\n    const group = new Group(\n      this.optimizeOverlapping ? getUniqueRects(rects) : rects,\n      {\n        objectCaching: true,\n        subTargetCheck: false,\n        interactive: false,\n      }\n    );\n    this.shadow && group.set('shadow', new Shadow(this.shadow));\n    this.canvas.fire('before:path:created', { path: group });\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  }\n\n  renderChunck(sprayChunck: SprayBrushPoint[]) {\n    const ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (let i = 0; i < sprayChunck.length; i++) {\n      const point = sprayChunck[i];\n      ctx.globalAlpha = point.opacity;\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n\n    ctx.restore();\n  }\n\n  /**\n   * Render all spray chunks\n   */\n  _render() {\n    const ctx = this.canvas.contextTop;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (let i = 0; i < this.sprayChunks.length; i++) {\n      this.renderChunck(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @param {Point} pointer\n   */\n  addSprayChunk(pointer: Point) {\n    this.sprayChunk = [];\n    const radius = this.width / 2;\n\n    for (let i = 0; i < this.density; i++) {\n      this.sprayChunk.push({\n        x: getRandomInt(pointer.x - radius, pointer.x + radius),\n        y: getRandomInt(pointer.y - radius, pointer.y + radius),\n        width: this.dotWidthVariance\n          ? getRandomInt(\n              // bottom clamp width to 1\n              Math.max(1, this.dotWidth - this.dotWidthVariance),\n              this.dotWidth + this.dotWidthVariance\n            )\n          : this.dotWidth,\n        opacity: this.randomOpacity ? getRandomInt(0, 100) / 100 : 1,\n      });\n    }\n\n    this.sprayChunks.push(this.sprayChunk);\n  }\n}\n","import { Pattern } from '../Pattern';\nimport { createCanvasElement } from '../util/misc/dom';\nimport type { Canvas } from '../canvas/Canvas';\nimport { PencilBrush } from './PencilBrush';\nimport type { TSimplePathData } from '../util/path/typedefs';\n\nexport class PatternBrush extends PencilBrush {\n  declare source?: CanvasImageSource;\n\n  constructor(canvas: Canvas) {\n    super(canvas);\n  }\n\n  getPatternSrc() {\n    const dotWidth = 20,\n      dotDistance = 5,\n      patternCanvas = createCanvasElement(),\n      patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n    if (patternCtx) {\n      patternCtx.fillStyle = this.color;\n      patternCtx.beginPath();\n      patternCtx.arc(\n        dotWidth / 2,\n        dotWidth / 2,\n        dotWidth / 2,\n        0,\n        Math.PI * 2,\n        false\n      );\n      patternCtx.closePath();\n      patternCtx.fill();\n    }\n    return patternCanvas;\n  }\n\n  /**\n   * Creates \"pattern\" instance property\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  getPattern(ctx: CanvasRenderingContext2D) {\n    return ctx.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  }\n\n  /**\n   * Sets brush styles\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  _setBrushStyles(ctx: CanvasRenderingContext2D) {\n    super._setBrushStyles(ctx);\n    const pattern = this.getPattern(ctx);\n    pattern && (ctx.strokeStyle = pattern);\n  }\n\n  /**\n   * Creates path\n   */\n  createPath(pathData: TSimplePathData) {\n    const path = super.createPath(pathData),\n      topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new Pattern({\n      source: this.source || this.getPatternSrc(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y,\n    });\n    return path;\n  }\n}\n","import { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport { Point } from '../Point';\nimport { isFiller } from '../util/typeAssertions';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport { makeBoundingBoxFromPoints } from '../util';\nimport { CENTER, LEFT, TOP } from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\n// @TODO this code is terrible and Line should be a special case of polyline.\n\nconst coordProps = ['x1', 'x2', 'y1', 'y2'] as const;\n\ninterface UniqueLineProps {\n  x1: number;\n  x2: number;\n  y1: number;\n  y2: number;\n}\n\nexport interface SerializedLineProps\n  extends SerializedObjectProps,\n    UniqueLineProps {}\n\nexport class Line<\n    Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n    SProps extends SerializedLineProps = SerializedLineProps,\n    EventSpec extends ObjectEvents = ObjectEvents\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements UniqueLineProps\n{\n  /**\n   * x value or first line edge\n   * @type number\n   * @default\n   */\n  declare x1: number;\n\n  /**\n   * y value or first line edge\n   * @type number\n   * @default\n   */\n  declare y1: number;\n\n  /**\n   * x value or second line edge\n   * @type number\n   * @default\n   */\n  declare x2: number;\n\n  /**\n   * y value or second line edge\n   * @type number\n   * @default\n   */\n  declare y2: number;\n\n  static type = 'Line';\n\n  static cacheProperties = [...cacheProperties, ...coordProps];\n  /**\n   * Constructor\n   * @param {Array} [points] Array of points\n   * @param {Object} [options] Options object\n   * @return {Line} thisArg\n   */\n  constructor([x1, y1, x2, y2] = [0, 0, 0, 0], options: Props = {} as Props) {\n    super({ ...options, x1, y1, x2, y2 });\n    this._setWidthHeight();\n    const { left, top } = options;\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  /**\n   * @private\n   * @param {Object} [options] Options\n   */\n  _setWidthHeight() {\n    const { x1, y1, x2, y2 } = this;\n    this.width = Math.abs(x2 - x1);\n    this.height = Math.abs(y2 - y1);\n    const { left, top, width, height } = makeBoundingBoxFromPoints([\n      { x: x1, y: y1 },\n      { x: x2, y: y2 },\n    ]);\n    const position = new Point(left + width / 2, top + height / 2);\n    this.setPositionByOrigin(position, CENTER, CENTER);\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n    if (coordProps.includes(key as keyof UniqueLineProps)) {\n      // this doesn't make sense very much, since setting x1 when top or left\n      // are already set, is just going to show a strange result since the\n      // line will move way more than the developer expect.\n      // in fabric5 it worked only when the line didn't have extra transformations,\n      // in fabric6 too. With extra transform they behave bad in different ways.\n      // This needs probably a good rework or a tutorial if you have to create a dynamic line\n      this._setWidthHeight();\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n\n    const p = this.calcLinePoints();\n    ctx.moveTo(p.x1, p.y1);\n    ctx.lineTo(p.x2, p.y2);\n\n    ctx.lineWidth = this.strokeWidth;\n\n    // TODO: test this\n    // make sure setting \"fill\" changes color of a line\n    // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n    const origStrokeStyle = ctx.strokeStyle;\n    if (isFiller(this.stroke)) {\n      ctx.strokeStyle = this.stroke.toLive(ctx)!;\n    } else {\n      ctx.strokeStyle = this.stroke ?? ctx.fillStyle;\n    }\n    this.stroke && this._renderStroke(ctx);\n    ctx.strokeStyle = origStrokeStyle;\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    return new Point((this.x1 + this.x2) / 2, (this.y1 + this.y2) / 2);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @method toObject\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      ...this.calcLinePoints(),\n    };\n  }\n\n  /*\n   * Calculate object dimensions from its properties\n   * @private\n   */\n  _getNonTransformedDimensions(): Point {\n    const dim = super._getNonTransformedDimensions();\n    if (this.strokeLineCap === 'butt') {\n      if (this.width === 0) {\n        dim.y -= this.strokeWidth;\n      }\n      if (this.height === 0) {\n        dim.x -= this.strokeWidth;\n      }\n    }\n    return dim;\n  }\n\n  /**\n   * Recalculates line points given width and height\n   * Those points are simply placed around the center,\n   * This is not useful outside internal render functions and svg output\n   * Is not meant to be for the developer.\n   * @private\n   */\n  calcLinePoints(): UniqueLineProps {\n    const { x1: _x1, x2: _x2, y1: _y1, y2: _y2, width, height } = this;\n    const xMult = _x1 <= _x2 ? -1 : 1,\n      yMult = _y1 <= _y2 ? -1 : 1,\n      x1 = (xMult * width) / 2,\n      y1 = (yMult * height) / 2,\n      x2 = (xMult * -width) / 2,\n      y2 = (yMult * -height) / 2;\n\n    return {\n      x1,\n      x2,\n      y1,\n      y2,\n    };\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const { x1, x2, y1, y2 } = this.calcLinePoints();\n    return [\n      '<line ',\n      'COMMON_PARTS',\n      `x1=\"${x1}\" y1=\"${y1}\" x2=\"${x2}\" y2=\"${y2}\" />\\n`,\n    ];\n  }\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Line.fromElement})\n   * @static\n   * @memberOf Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  static ATTRIBUTE_NAMES = SHARED_ATTRIBUTES.concat(coordProps);\n\n  /**\n   * Returns Line instance from an SVG element\n   * @static\n   * @memberOf Line\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules\n  ) {\n    const {\n      x1 = 0,\n      y1 = 0,\n      x2 = 0,\n      y2 = 0,\n      ...parsedAttributes\n    } = parseAttributes(element, this.ATTRIBUTE_NAMES, cssRules);\n    return new this([x1, y1, x2, y2], parsedAttributes);\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns Line instance from an object representation\n   * @static\n   * @memberOf Line\n   * @param {Object} object Object to create an instance from\n   * @returns {Promise<Line>}\n   */\n  static fromObject<T extends TOptions<SerializedLineProps>>({\n    x1,\n    y1,\n    x2,\n    y2,\n    ...object\n  }: T) {\n    return this._fromObject<Line>(\n      {\n        ...object,\n        points: [x1, y1, x2, y2],\n      },\n      {\n        extraParam: 'points',\n      }\n    );\n  }\n}\n\nclassRegistry.setClass(Line);\nclassRegistry.setSVGClass(Line);\n","import { classRegistry } from '../ClassRegistry';\nimport { FabricObject } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { TClassProperties, TOptions } from '../typedefs';\nimport type { ObjectEvents } from '../EventTypeDefs';\n\nexport const triangleDefaultValues: Partial<TClassProperties<Triangle>> = {\n  width: 100,\n  height: 100,\n};\n\nexport class Triangle<\n    Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n    SProps extends SerializedObjectProps = SerializedObjectProps,\n    EventSpec extends ObjectEvents = ObjectEvents\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements FabricObjectProps\n{\n  static type = 'Triangle';\n\n  static ownDefaults = triangleDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...Triangle.ownDefaults };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const widthBy2 = this.width / 2,\n      heightBy2 = this.height / 2;\n\n    ctx.beginPath();\n    ctx.moveTo(-widthBy2, heightBy2);\n    ctx.lineTo(0, -heightBy2);\n    ctx.lineTo(widthBy2, heightBy2);\n    ctx.closePath();\n\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const widthBy2 = this.width / 2,\n      heightBy2 = this.height / 2,\n      points = `${-widthBy2} ${heightBy2},0 ${-heightBy2},${widthBy2} ${heightBy2}`;\n    return ['<polygon ', 'COMMON_PARTS', 'points=\"', points, '\" />'];\n  }\n}\n\nclassRegistry.setClass(Triangle);\nclassRegistry.setSVGClass(Triangle);\n","import { twoMathPi } from '../constants';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const ellipseDefaultValues: Partial<TClassProperties<Ellipse>> = {\n  rx: 0,\n  ry: 0,\n};\n\ninterface UniqueEllipseProps {\n  rx: number;\n  ry: number;\n}\n\nexport interface SerializedEllipseProps\n  extends SerializedObjectProps,\n    UniqueEllipseProps {}\n\nexport interface EllipseProps extends FabricObjectProps, UniqueEllipseProps {}\n\nconst ELLIPSE_PROPS = ['rx', 'ry'] as const;\n\nexport class Ellipse<\n    Props extends TOptions<EllipseProps> = Partial<EllipseProps>,\n    SProps extends SerializedEllipseProps = SerializedEllipseProps,\n    EventSpec extends ObjectEvents = ObjectEvents\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements EllipseProps\n{\n  /**\n   * Horizontal radius\n   * @type Number\n   * @default\n   */\n  declare rx: number;\n\n  /**\n   * Vertical radius\n   * @type Number\n   * @default\n   */\n  declare ry: number;\n\n  static type = 'Ellipse';\n\n  static cacheProperties = [...cacheProperties, ...ELLIPSE_PROPS];\n\n  static ownDefaults = ellipseDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Ellipse.ownDefaults,\n    };\n  }\n\n  /**\n   * @private\n   * @param {String} key\n   * @param {*} value\n   * @return {Ellipse} thisArg\n   */\n  _set(key: string, value: any) {\n    super._set(key, value);\n    switch (key) {\n      case 'rx':\n        this.rx = value;\n        this.set('width', value * 2);\n        break;\n\n      case 'ry':\n        this.ry = value;\n        this.set('height', value * 2);\n        break;\n    }\n    return this;\n  }\n\n  /**\n   * Returns horizontal radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRx() {\n    return this.get('rx') * this.get('scaleX');\n  }\n\n  /**\n   * Returns Vertical radius of an object (according to how an object is scaled)\n   * @return {Number}\n   */\n  getRy() {\n    return this.get('ry') * this.get('scaleY');\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject([...ELLIPSE_PROPS, ...propertiesToInclude]);\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG(): string[] {\n    return [\n      '<ellipse ',\n      'COMMON_PARTS',\n      `cx=\"0\" cy=\"0\" rx=\"${this.rx}\" ry=\"${this.ry}\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.save();\n    ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n    ctx.arc(0, 0, this.rx, 0, twoMathPi, false);\n    ctx.restore();\n    this._renderPaintInOrder(ctx);\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Ellipse.fromElement})\n   * @static\n   * @memberOf Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES, 'cx', 'cy', 'rx', 'ry'];\n\n  /**\n   * Returns {@link Ellipse} instance from an SVG element\n   * @static\n   * @memberOf Ellipse\n   * @param {HTMLElement} element Element to parse\n   * @return {Ellipse}\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules\n    );\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    return new this(parsedAttributes);\n  }\n\n  /* _FROM_SVG_END_ */\n}\n\nclassRegistry.setClass(Ellipse);\nclassRegistry.setSVGClass(Ellipse);\n","import type { XY } from '../Point';\n\n/**\n * Parses \"points\" attribute, returning an array of values\n * @static\n * @memberOf fabric\n * @param {String} points points attribute string\n * @return {Array} array of points\n */\nexport function parsePointsAttribute(points: string | null): XY[] {\n  // points attribute is required and must not be empty\n  if (!points) {\n    return [];\n  }\n\n  // replace commas with whitespace and remove bookending whitespace\n  const pointsSplit: string[] = points.replace(/,/g, ' ').trim().split(/\\s+/);\n\n  const parsedPoints = [];\n\n  for (let i = 0; i < pointsSplit.length; i += 2) {\n    parsedPoints.push({\n      x: parseFloat(pointsSplit[i]),\n      y: parseFloat(pointsSplit[i + 1]),\n    });\n  }\n\n  // odd number of points is an error\n  // if (parsedPoints.length % 2 !== 0) {\n  //   return null;\n  // }\n  return parsedPoints;\n}\n","import { config } from '../config';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport { parsePointsAttribute } from '../parser/parsePointsAttribute';\nimport type { XY } from '../Point';\nimport { Point } from '../Point';\nimport type { Abortable, TClassProperties, TOptions } from '../typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { makeBoundingBoxFromPoints } from '../util/misc/boundingBoxFromPoints';\nimport { calcDimensionsMatrix, transformPoint } from '../util/misc/matrix';\nimport { projectStrokeOnPoints } from '../util/misc/projectStroke';\nimport type { TProjectStrokeOnPointsOptions } from '../util/misc/projectStroke/types';\nimport { degreesToRadians } from '../util/misc/radiansDegreesConversion';\nimport { toFixed } from '../util/misc/toFixed';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport { cloneDeep } from '../util/internals/cloneDeep';\nimport { CENTER, LEFT, TOP } from '../constants';\nimport type { CSSRules } from '../parser/typedefs';\n\nexport const polylineDefaultValues: Partial<TClassProperties<Polyline>> = {\n  /**\n   * @deprecated transient option soon to be removed in favor of a different design\n   */\n  exactBoundingBox: false,\n};\n\nexport interface SerializedPolylineProps extends SerializedObjectProps {\n  points: XY[];\n}\n\nexport class Polyline<\n  Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n  SProps extends SerializedPolylineProps = SerializedPolylineProps,\n  EventSpec extends ObjectEvents = ObjectEvents\n> extends FabricObject<Props, SProps, EventSpec> {\n  /**\n   * Points array\n   * @type Array\n   * @default\n   */\n  declare points: XY[];\n\n  /**\n   * WARNING: Feature in progress\n   * Calculate the exact bounding box taking in account strokeWidth on acute angles\n   * this will be turned to true by default on fabric 6.0\n   * maybe will be left in as an optimization since calculations may be slow\n   * @deprecated transient option soon to be removed in favor of a different design\n   * @type Boolean\n   * @default false\n   */\n  declare exactBoundingBox: boolean;\n\n  private declare initialized: true | undefined;\n\n  static ownDefaults = polylineDefaultValues;\n\n  static type = 'Polyline';\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Polyline.ownDefaults,\n    };\n  }\n  /**\n   * A list of properties that if changed trigger a recalculation of dimensions\n   * @todo check if you really need to recalculate for all cases\n   */\n  static layoutProperties: (keyof Polyline)[] = [\n    'skewX',\n    'skewY',\n    'strokeLineCap',\n    'strokeLineJoin',\n    'strokeMiterLimit',\n    'strokeWidth',\n    'strokeUniform',\n    'points',\n  ];\n\n  declare pathOffset: Point;\n\n  declare strokeOffset: Point;\n\n  static cacheProperties = [...cacheProperties, 'points'];\n\n  strokeDiff: Point;\n\n  /**\n   * Constructor\n   * @param {Array} points Array of points (where each point is an object with x and y)\n   * @param {Object} [options] Options object\n   * @return {Polyline} thisArg\n   * @example\n   * var poly = new Polyline([\n   *     { x: 10, y: 10 },\n   *     { x: 50, y: 30 },\n   *     { x: 40, y: 70 },\n   *     { x: 60, y: 50 },\n   *     { x: 100, y: 150 },\n   *     { x: 40, y: 100 }\n   *   ], {\n   *   stroke: 'red',\n   *   left: 100,\n   *   top: 100\n   * });\n   */\n  constructor(points: XY[] = [], options: Props = {} as Props) {\n    super({ points, ...options });\n    const { left, top } = options;\n    this.initialized = true;\n    this.setBoundingBox(true);\n    typeof left === 'number' && this.set(LEFT, left);\n    typeof top === 'number' && this.set(TOP, top);\n  }\n\n  protected isOpen() {\n    return true;\n  }\n\n  private _projectStrokeOnPoints(options: TProjectStrokeOnPointsOptions) {\n    return projectStrokeOnPoints(this.points, options, this.isOpen());\n  }\n\n  /**\n   * Calculate the polygon bounding box\n   * @private\n   */\n  _calcDimensions(options?: Partial<TProjectStrokeOnPointsOptions>) {\n    options = {\n      scaleX: this.scaleX,\n      scaleY: this.scaleY,\n      skewX: this.skewX,\n      skewY: this.skewY,\n      strokeLineCap: this.strokeLineCap,\n      strokeLineJoin: this.strokeLineJoin,\n      strokeMiterLimit: this.strokeMiterLimit,\n      strokeUniform: this.strokeUniform,\n      strokeWidth: this.strokeWidth,\n      ...(options || {}),\n    };\n    const points = this.exactBoundingBox\n      ? this._projectStrokeOnPoints(\n          options as TProjectStrokeOnPointsOptions\n        ).map((projection) => projection.projectedPoint)\n      : this.points;\n    if (points.length === 0) {\n      return {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0,\n        pathOffset: new Point(),\n        strokeOffset: new Point(),\n        strokeDiff: new Point(),\n      };\n    }\n    const bbox = makeBoundingBoxFromPoints(points),\n      // Remove scale effect, since it's applied after\n      matrix = calcDimensionsMatrix({ ...options, scaleX: 1, scaleY: 1 }),\n      bboxNoStroke = makeBoundingBoxFromPoints(\n        this.points.map((p) => transformPoint(p, matrix, true))\n      ),\n      scale = new Point(this.scaleX, this.scaleY);\n    let offsetX = bbox.left + bbox.width / 2,\n      offsetY = bbox.top + bbox.height / 2;\n    if (this.exactBoundingBox) {\n      offsetX = offsetX - offsetY * Math.tan(degreesToRadians(this.skewX));\n      // Order of those assignments is important.\n      // offsetY relies on offsetX being already changed by the line above\n      offsetY = offsetY - offsetX * Math.tan(degreesToRadians(this.skewY));\n    }\n\n    return {\n      ...bbox,\n      pathOffset: new Point(offsetX, offsetY),\n      strokeOffset: new Point(bboxNoStroke.left, bboxNoStroke.top)\n        .subtract(new Point(bbox.left, bbox.top))\n        .multiply(scale),\n      strokeDiff: new Point(bbox.width, bbox.height)\n        .subtract(new Point(bboxNoStroke.width, bboxNoStroke.height))\n        .multiply(scale),\n    };\n  }\n\n  /**\n   * This function is an helper for svg import. it returns the center of the object in the svg\n   * untransformed coordinates, by look at the polyline/polygon points.\n   * @private\n   * @return {Point} center point from element coordinates\n   */\n  _findCenterFromElement(): Point {\n    const bbox = makeBoundingBoxFromPoints(this.points);\n    return new Point(bbox.left + bbox.width / 2, bbox.top + bbox.height / 2);\n  }\n\n  setDimensions() {\n    this.setBoundingBox();\n  }\n\n  setBoundingBox(adjustPosition?: boolean) {\n    const { left, top, width, height, pathOffset, strokeOffset, strokeDiff } =\n      this._calcDimensions();\n    this.set({ width, height, pathOffset, strokeOffset, strokeDiff });\n    adjustPosition &&\n      this.setPositionByOrigin(\n        new Point(left + width / 2, top + height / 2),\n        CENTER,\n        CENTER\n      );\n  }\n\n  /**\n   * @deprecated intermidiate method to be removed, do not use\n   */\n  protected isStrokeAccountedForInDimensions() {\n    return this.exactBoundingBox;\n  }\n\n  /**\n   * @override stroke is taken in account in size\n   */\n  _getNonTransformedDimensions() {\n    return this.exactBoundingBox\n      ? // TODO: fix this\n        new Point(this.width, this.height)\n      : super._getNonTransformedDimensions();\n  }\n\n  /**\n   * @override stroke and skewing are taken into account when projecting stroke on points,\n   * therefore we don't want the default calculation to account for skewing as well.\n   * Though it is possible to pass `width` and `height` in `options`, doing so is very strange, use with discretion.\n   *\n   * @private\n   */\n  _getTransformedDimensions(options: any = {}) {\n    if (this.exactBoundingBox) {\n      let size: Point;\n      /* When `strokeUniform = true`, any changes to the properties require recalculating the `width` and `height` because\n        the stroke projections are affected.\n        When `strokeUniform = false`, we don't need to recalculate for scale transformations, as the effect of scale on\n        projections follows a linear function (e.g. scaleX of 2 just multiply width by 2)*/\n      if (\n        Object.keys(options).some(\n          (key) =>\n            this.strokeUniform ||\n            (this.constructor as typeof Polyline).layoutProperties.includes(\n              key as keyof TProjectStrokeOnPointsOptions\n            )\n        )\n      ) {\n        const { width, height } = this._calcDimensions(options);\n        size = new Point(options.width ?? width, options.height ?? height);\n      } else {\n        size = new Point(\n          options.width ?? this.width,\n          options.height ?? this.height\n        );\n      }\n      return size.multiply(\n        new Point(options.scaleX || this.scaleX, options.scaleY || this.scaleY)\n      );\n    } else {\n      return super._getTransformedDimensions(options);\n    }\n  }\n\n  /**\n   * Recalculates dimensions when changing skew and scale\n   * @private\n   */\n  _set(key: string, value: any) {\n    const changed = this.initialized && this[key as keyof this] !== value;\n    const output = super._set(key, value);\n    if (\n      this.exactBoundingBox &&\n      changed &&\n      (((key === 'scaleX' || key === 'scaleY') &&\n        this.strokeUniform &&\n        (this.constructor as typeof Polyline).layoutProperties.includes(\n          'strokeUniform'\n        )) ||\n        (this.constructor as typeof Polyline).layoutProperties.includes(\n          key as keyof Polyline\n        ))\n    ) {\n      this.setDimensions();\n    }\n    return output;\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject(propertiesToInclude),\n      points: cloneDeep(this.points),\n    };\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {Array} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const points = [],\n      diffX = this.pathOffset.x,\n      diffY = this.pathOffset.y,\n      NUM_FRACTION_DIGITS = config.NUM_FRACTION_DIGITS;\n\n    for (let i = 0, len = this.points.length; i < len; i++) {\n      points.push(\n        toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS),\n        ',',\n        toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS),\n        ' '\n      );\n    }\n    return [\n      `<${\n        (this.constructor as typeof Polyline).type.toLowerCase() as\n          | 'polyline'\n          | 'polygon'\n      } `,\n      'COMMON_PARTS',\n      `points=\"${points.join('')}\" />\\n`,\n    ];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const len = this.points.length,\n      x = this.pathOffset.x,\n      y = this.pathOffset.y;\n\n    if (!len || isNaN(this.points[len - 1].y)) {\n      // do not draw if no points or odd points\n      // NaN comes from parseFloat of a empty string in parser\n      return;\n    }\n    ctx.beginPath();\n    ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n    for (let i = 0; i < len; i++) {\n      const point = this.points[i];\n      ctx.lineTo(point.x - x, point.y - y);\n    }\n    !this.isOpen() && ctx.closePath();\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity of this instance\n   */\n  complexity(): number {\n    return this.points.length;\n  }\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link Polyline.fromElement})\n   * @static\n   * @memberOf Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  static ATTRIBUTE_NAMES = [...SHARED_ATTRIBUTES];\n\n  /**\n   * Returns Polyline instance from an SVG element\n   * @static\n   * @memberOf Polyline\n   * @param {HTMLElement} element Element to parser\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules\n  ) {\n    const points = parsePointsAttribute(element.getAttribute('points')),\n      // we omit left and top to instruct the constructor to position the object using the bbox\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      { left, top, ...parsedAttributes } = parseAttributes(\n        element,\n        this.ATTRIBUTE_NAMES,\n        cssRules\n      );\n    return new this(points, {\n      ...parsedAttributes,\n      ...options,\n    });\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns Polyline instance from an object representation\n   * @static\n   * @memberOf Polyline\n   * @param {Object} object Object to create an instance from\n   * @returns {Promise<Polyline>}\n   */\n  static fromObject<T extends TOptions<SerializedPolylineProps>>(object: T) {\n    return this._fromObject<Polyline>(object, {\n      extraParam: 'points',\n    });\n  }\n}\n\nclassRegistry.setClass(Polyline);\nclassRegistry.setSVGClass(Polyline);\n","import { classRegistry } from '../ClassRegistry';\nimport { Polyline, polylineDefaultValues } from './Polyline';\n\nexport class Polygon extends Polyline {\n  static ownDefaults = polylineDefaultValues;\n\n  static type = 'Polygon';\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...Polyline.ownDefaults,\n    };\n  }\n\n  protected isOpen() {\n    return false;\n  }\n}\n\nclassRegistry.setClass(Polygon);\nclassRegistry.setSVGClass(Polygon);\n","import { LEFT, reNewline } from '../../constants';\nimport type { TClassProperties } from '../../typedefs';\nimport type { FabricText } from './Text';\n\nconst fontProperties = [\n  'fontSize',\n  'fontWeight',\n  'fontFamily',\n  'fontStyle',\n] as const;\n\nexport const textDecorationProperties = [\n  'underline',\n  'overline',\n  'linethrough',\n] as const;\n\nexport const textLayoutProperties: string[] = [\n  ...fontProperties,\n  'lineHeight',\n  'text',\n  'charSpacing',\n  'textAlign',\n  'styles',\n  'path',\n  'pathStartOffset',\n  'pathSide',\n  'pathAlign',\n];\n\nexport const additionalProps = [\n  ...textLayoutProperties,\n  ...textDecorationProperties,\n  'textBackgroundColor',\n  'direction',\n] as const;\n\nexport type StylePropertiesType =\n  | 'fill'\n  | 'stroke'\n  | 'strokeWidth'\n  | 'fontSize'\n  | 'fontFamily'\n  | 'fontWeight'\n  | 'fontStyle'\n  | 'textBackgroundColor'\n  | 'deltaY'\n  | 'overline'\n  | 'underline'\n  | 'linethrough';\n\nexport const styleProperties: Readonly<StylePropertiesType[]> = [\n  ...fontProperties,\n  ...textDecorationProperties,\n  'stroke',\n  'strokeWidth',\n  'fill',\n  'deltaY',\n  'textBackgroundColor',\n] as const;\n\n// @TODO: Many things here are configuration related and shouldn't be on the class nor prototype\n// regexes, list of properties that are not suppose to change by instances, magic consts.\n// this will be a separated effort\nexport const textDefaultValues: Partial<TClassProperties<FabricText>> = {\n  _reNewline: reNewline,\n  _reSpacesAndTabs: /[ \\t\\r]/g,\n  _reSpaceAndTab: /[ \\t\\r]/,\n  _reWords: /\\S+/g,\n  fontSize: 40,\n  fontWeight: 'normal',\n  fontFamily: 'Times New Roman',\n  underline: false,\n  overline: false,\n  linethrough: false,\n  textAlign: LEFT,\n  fontStyle: 'normal',\n  lineHeight: 1.16,\n  superscript: {\n    size: 0.6, // fontSize factor\n    baseline: -0.35, // baseline-shift factor (upwards)\n  },\n  subscript: {\n    size: 0.6, // fontSize factor\n    baseline: 0.11, // baseline-shift factor (downwards)\n  },\n  textBackgroundColor: '',\n  stroke: null,\n  shadow: null,\n  path: undefined,\n  pathStartOffset: 0,\n  pathSide: LEFT,\n  pathAlign: 'baseline',\n  _fontSizeFraction: 0.222,\n  offsets: {\n    underline: 0.1,\n    linethrough: -0.315,\n    overline: -0.88,\n  },\n  _fontSizeMult: 1.13,\n  charSpacing: 0,\n  deltaY: 0,\n  direction: 'ltr',\n  CACHE_FONT_SIZE: 400,\n  MIN_TEXT_WIDTH: 2,\n};\n\nexport const JUSTIFY = 'justify';\nexport const JUSTIFY_LEFT = 'justify-left';\nexport const JUSTIFY_RIGHT = 'justify-right';\nexport const JUSTIFY_CENTER = 'justify-center';\n","import type { ObjectEvents } from '../../EventTypeDefs';\nimport type { FabricObjectProps, SerializedObjectProps } from '../Object/types';\nimport type { TOptions } from '../../typedefs';\nimport { FabricObject } from '../Object/FabricObject';\nimport { styleProperties } from './constants';\nimport type { StylePropertiesType } from './constants';\nimport type { FabricText } from './Text';\nimport { pick } from '../../util';\nimport { pickBy } from '../../util/misc/pick';\n\nexport type CompleteTextStyleDeclaration = Pick<\n  FabricText,\n  StylePropertiesType\n>;\n\nexport type TextStyleDeclaration = Partial<CompleteTextStyleDeclaration>;\n\nexport type TextStyle = {\n  [line: number | string]: { [char: number | string]: TextStyleDeclaration };\n};\n\nexport abstract class StyledText<\n  Props extends TOptions<FabricObjectProps> = Partial<FabricObjectProps>,\n  SProps extends SerializedObjectProps = SerializedObjectProps,\n  EventSpec extends ObjectEvents = ObjectEvents\n> extends FabricObject<Props, SProps, EventSpec> {\n  declare abstract styles: TextStyle;\n  protected declare abstract _textLines: string[][];\n  protected declare _forceClearCache: boolean;\n  static _styleProperties: Readonly<StylePropertiesType[]> = styleProperties;\n  abstract get2DCursorLocation(\n    selectionStart: number,\n    skipWrapping?: boolean\n  ): { charIndex: number; lineIndex: number };\n\n  /**\n   * Returns true if object has no styling or no styling in a line\n   * @param {Number} lineIndex , lineIndex is on wrapped lines.\n   * @return {Boolean}\n   */\n  isEmptyStyles(lineIndex?: number): boolean {\n    if (!this.styles) {\n      return true;\n    }\n    if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n      return true;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { line: this.styles[lineIndex] };\n    for (const p1 in obj) {\n      for (const p2 in obj[p1]) {\n        // eslint-disable-next-line no-unused-vars\n        for (const p3 in obj[p1][p2]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Returns true if object has a style property or has it ina specified line\n   * This function is used to detect if a text will use a particular property or not.\n   * @param {String} property to check for\n   * @param {Number} lineIndex to check the style on\n   * @return {Boolean}\n   */\n  styleHas(property: keyof TextStyleDeclaration, lineIndex?: number): boolean {\n    if (!this.styles) {\n      return false;\n    }\n    if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n      return false;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { 0: this.styles[lineIndex] };\n    // eslint-disable-next-line\n    for (const p1 in obj) {\n      // eslint-disable-next-line\n      for (const p2 in obj[p1]) {\n        if (typeof obj[p1][p2][property] !== 'undefined') {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Check if characters in a text have a value for a property\n   * whose value matches the textbox's value for that property.  If so,\n   * the character-level property is deleted.  If the character\n   * has no other properties, then it is also deleted.  Finally,\n   * if the line containing that character has no other characters\n   * then it also is deleted.\n   *\n   * @param {string} property The property to compare between characters and text.\n   */\n  cleanStyle(property: keyof TextStyleDeclaration) {\n    if (!this.styles) {\n      return false;\n    }\n    const obj = this.styles;\n    let stylesCount = 0,\n      letterCount,\n      stylePropertyValue,\n      allStyleObjectPropertiesMatch = true,\n      graphemeCount = 0;\n    for (const p1 in obj) {\n      letterCount = 0;\n      for (const p2 in obj[p1]) {\n        const styleObject = obj[p1][p2] || {},\n          stylePropertyHasBeenSet = styleObject[property] !== undefined;\n\n        stylesCount++;\n\n        if (stylePropertyHasBeenSet) {\n          if (!stylePropertyValue) {\n            stylePropertyValue = styleObject[property];\n          } else if (styleObject[property] !== stylePropertyValue) {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (styleObject[property] === this[property as keyof this]) {\n            delete styleObject[property];\n          }\n        } else {\n          allStyleObjectPropertiesMatch = false;\n        }\n\n        if (Object.keys(styleObject).length !== 0) {\n          letterCount++;\n        } else {\n          delete obj[p1][p2];\n        }\n      }\n\n      if (letterCount === 0) {\n        delete obj[p1];\n      }\n    }\n    // if every grapheme has the same style set then\n    // delete those styles and set it on the parent\n    for (let i = 0; i < this._textLines.length; i++) {\n      graphemeCount += this._textLines[i].length;\n    }\n    if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n      // @ts-expect-error conspiracy theory of TS\n      this[property as keyof this] = stylePropertyValue;\n      this.removeStyle(property);\n    }\n  }\n\n  /**\n   * Remove a style property or properties from all individual character styles\n   * in a text object.  Deletes the character style object if it contains no other style\n   * props.  Deletes a line style object if it contains no other character styles.\n   *\n   * @param {String} props The property to remove from character styles.\n   */\n  removeStyle(property: keyof TextStyleDeclaration) {\n    if (!this.styles) {\n      return;\n    }\n    const obj = this.styles;\n    let line, lineNum, charNum;\n    for (lineNum in obj) {\n      line = obj[lineNum];\n      for (charNum in line) {\n        delete line[charNum][property];\n        if (Object.keys(line[charNum]).length === 0) {\n          delete line[charNum];\n        }\n      }\n      if (Object.keys(line).length === 0) {\n        delete obj[lineNum];\n      }\n    }\n  }\n\n  private _extendStyles(index: number, style: TextStyleDeclaration): void {\n    const { lineIndex, charIndex } = this.get2DCursorLocation(index);\n\n    if (!this._getLineStyle(lineIndex)) {\n      this._setLineStyle(lineIndex);\n    }\n\n    const newStyle = pickBy(\n      {\n        // first create a new object that is a merge of existing and new\n        ...this._getStyleDeclaration(lineIndex, charIndex),\n        ...style,\n        // use the predicate to discard undefined values\n      },\n      (value) => value !== undefined\n    );\n\n    // finally assign to the old position the new style\n    this._setStyleDeclaration(lineIndex, charIndex, newStyle);\n  }\n\n  /**\n   * Gets style of a current selection/cursor (at the start position)\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} endIndex End index to get styles at, if not specified startIndex + 1\n   * @param {Boolean} [complete] get full style or not\n   * @return {Array} styles an array with one, zero or more Style objects\n   */\n  getSelectionStyles(\n    startIndex: number,\n    endIndex?: number,\n    complete?: boolean\n  ): TextStyleDeclaration[] {\n    const styles: TextStyleDeclaration[] = [];\n    for (let i = startIndex; i < (endIndex || startIndex); i++) {\n      styles.push(this.getStyleAtPosition(i, complete));\n    }\n    return styles;\n  }\n\n  /**\n   * Gets style of a current selection/cursor position\n   * @param {Number} position  to get styles at\n   * @param {Boolean} [complete] full style if true\n   * @return {Object} style Style object at a specified index\n   * @private\n   */\n  getStyleAtPosition(position: number, complete?: boolean) {\n    const { lineIndex, charIndex } = this.get2DCursorLocation(position);\n    return complete\n      ? this.getCompleteStyleDeclaration(lineIndex, charIndex)\n      : this._getStyleDeclaration(lineIndex, charIndex);\n  }\n\n  /**\n   * Sets style of a current selection, if no selection exist, do not set anything.\n   * @param {Object} styles Styles object\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} [endIndex] End index to get styles at, if not specified startIndex + 1\n   */\n  setSelectionStyles(styles: object, startIndex: number, endIndex?: number) {\n    for (let i = startIndex; i < (endIndex || startIndex); i++) {\n      this._extendStyles(i, styles);\n    }\n    /* not included in _extendStyles to avoid clearing cache more than once */\n    this._forceClearCache = true;\n  }\n\n  /**\n   * Get a reference, not a clone, to the style object for a given character,\n   * if no style is set for a line or char, return a new empty object.\n   * This is tricky and confusing because when you get an empty object you can't\n   * determine if it is a reference or a new one.\n   * @TODO this should always return a reference or always a clone or undefined when necessary.\n   * @protected\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {TextStyleDeclaration} a style object reference to the existing one or a new empty object when undefined\n   */\n  _getStyleDeclaration(\n    lineIndex: number,\n    charIndex: number\n  ): TextStyleDeclaration {\n    const lineStyle = this.styles && this.styles[lineIndex];\n    return lineStyle ? lineStyle[charIndex] ?? {} : {};\n  }\n\n  /**\n   * return a new object that contains all the style property for a character\n   * the object returned is newly created\n   * @param {Number} lineIndex of the line where the character is\n   * @param {Number} charIndex position of the character on the line\n   * @return {Object} style object\n   */\n  getCompleteStyleDeclaration(\n    lineIndex: number,\n    charIndex: number\n  ): CompleteTextStyleDeclaration {\n    return {\n      // @ts-expect-error readonly\n      ...pick(this, (this.constructor as typeof StyledText)._styleProperties),\n      ...this._getStyleDeclaration(lineIndex, charIndex),\n    } as CompleteTextStyleDeclaration;\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n    style: object\n  ) {\n    this.styles[lineIndex][charIndex] = style;\n  }\n\n  /**\n   *\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @private\n   */\n  protected _deleteStyleDeclaration(lineIndex: number, charIndex: number) {\n    delete this.styles[lineIndex][charIndex];\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @return {Boolean} if the line exists or not\n   * @private\n   */\n  protected _getLineStyle(lineIndex: number): boolean {\n    return !!this.styles[lineIndex];\n  }\n\n  /**\n   * Set the line style to an empty object so that is initialized\n   * @param {Number} lineIndex\n   * @private\n   */\n  protected _setLineStyle(lineIndex: number) {\n    this.styles[lineIndex] = {};\n  }\n\n  protected _deleteLineStyle(lineIndex: number) {\n    delete this.styles[lineIndex];\n  }\n}\n","import { config } from '../../config';\nimport type { TSVGReviver } from '../../typedefs';\nimport { escapeXml } from '../../util/lang_string';\nimport { colorPropToSVG, createSVGRect } from '../../util/misc/svgParsing';\nimport { hasStyleChanged } from '../../util/misc/textStyles';\nimport { toFixed } from '../../util/misc/toFixed';\nimport { FabricObjectSVGExportMixin } from '../Object/FabricObjectSVGExportMixin';\nimport { type TextStyleDeclaration } from './StyledText';\nimport { JUSTIFY } from '../Text/constants';\nimport type { FabricText } from './Text';\n\nconst multipleSpacesRegex = /  +/g;\nconst dblQuoteRegex = /\"/g;\n\nfunction createSVGInlineRect(\n  color: string,\n  left: number,\n  top: number,\n  width: number,\n  height: number\n) {\n  return `\\t\\t${createSVGRect(color, { left, top, width, height })}\\n`;\n}\n\nexport class TextSVGExportMixin extends FabricObjectSVGExportMixin {\n  _toSVG(this: TextSVGExportMixin & FabricText): string[] {\n    const offsets = this._getSVGLeftTopOffsets(),\n      textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n    return this._wrapSVGTextAndBg(textAndBg);\n  }\n\n  toSVG(this: TextSVGExportMixin & FabricText, reviver: TSVGReviver): string {\n    return this._createBaseSVGMarkup(this._toSVG(), {\n      reviver,\n      noStyle: true,\n      withShadow: true,\n    });\n  }\n\n  private _getSVGLeftTopOffsets(this: TextSVGExportMixin & FabricText) {\n    return {\n      textLeft: -this.width / 2,\n      textTop: -this.height / 2,\n      lineTop: this.getHeightOfLine(0),\n    };\n  }\n\n  private _wrapSVGTextAndBg(\n    this: TextSVGExportMixin & FabricText,\n    {\n      textBgRects,\n      textSpans,\n    }: {\n      textSpans: string[];\n      textBgRects: string[];\n    }\n  ) {\n    const noShadow = true,\n      textDecoration = this.getSvgTextDecoration(this);\n    return [\n      textBgRects.join(''),\n      '\\t\\t<text xml:space=\"preserve\" ',\n      this.fontFamily\n        ? `font-family=\"${this.fontFamily.replace(dblQuoteRegex, \"'\")}\" `\n        : '',\n      this.fontSize ? `font-size=\"${this.fontSize}\" ` : '',\n      this.fontStyle ? `font-style=\"${this.fontStyle}\" ` : '',\n      this.fontWeight ? `font-weight=\"${this.fontWeight}\" ` : '',\n      textDecoration ? `text-decoration=\"${textDecoration}\" ` : '',\n      this.direction === 'rtl' ? `direction=\"${this.direction}\" ` : '',\n      'style=\"',\n      this.getSvgStyles(noShadow),\n      '\"',\n      this.addPaintOrder(),\n      ' >',\n      textSpans.join(''),\n      '</text>\\n',\n    ];\n  }\n\n  /**\n   * @private\n   * @param {Number} textTopOffset Text top offset\n   * @param {Number} textLeftOffset Text left offset\n   * @return {Object}\n   */\n  private _getSVGTextAndBg(\n    this: TextSVGExportMixin & FabricText,\n    textTopOffset: number,\n    textLeftOffset: number\n  ) {\n    const textSpans: string[] = [],\n      textBgRects: string[] = [];\n    let height = textTopOffset,\n      lineOffset;\n\n    // bounding-box background\n    this.backgroundColor &&\n      textBgRects.push(\n        ...createSVGInlineRect(\n          this.backgroundColor,\n          -this.width / 2,\n          -this.height / 2,\n          this.width,\n          this.height\n        )\n      );\n\n    // text and text-background\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      lineOffset = this._getLineLeftOffset(i);\n      if (this.direction === 'rtl') {\n        lineOffset += this.width;\n      }\n      if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n        this._setSVGTextLineBg(\n          textBgRects,\n          i,\n          textLeftOffset + lineOffset,\n          height\n        );\n      }\n      this._setSVGTextLineText(\n        textSpans,\n        i,\n        textLeftOffset + lineOffset,\n        height\n      );\n      height += this.getHeightOfLine(i);\n    }\n\n    return {\n      textSpans,\n      textBgRects,\n    };\n  }\n\n  private _createTextCharSpan(\n    this: TextSVGExportMixin & FabricText,\n    char: string,\n    styleDecl: TextStyleDeclaration,\n    left: number,\n    top: number\n  ) {\n    const styleProps = this.getSvgSpanStyles(\n        styleDecl,\n        char !== char.trim() || !!char.match(multipleSpacesRegex)\n      ),\n      fillStyles = styleProps ? `style=\"${styleProps}\"` : '',\n      dy = styleDecl.deltaY,\n      dySpan = dy ? ` dy=\"${toFixed(dy, config.NUM_FRACTION_DIGITS)}\" ` : '';\n\n    return `<tspan x=\"${toFixed(\n      left,\n      config.NUM_FRACTION_DIGITS\n    )}\" y=\"${toFixed(\n      top,\n      config.NUM_FRACTION_DIGITS\n    )}\" ${dySpan}${fillStyles}>${escapeXml(char)}</tspan>`;\n  }\n\n  private _setSVGTextLineText(\n    this: TextSVGExportMixin & FabricText,\n    textSpans: string[],\n    lineIndex: number,\n    textLeftOffset: number,\n    textTopOffset: number\n  ) {\n    const lineHeight = this.getHeightOfLine(lineIndex),\n      isJustify = this.textAlign.includes(JUSTIFY),\n      line = this._textLines[lineIndex];\n    let actualStyle,\n      nextStyle,\n      charsToRender = '',\n      charBox,\n      style,\n      boxWidth = 0,\n      timeToRender;\n\n    textTopOffset +=\n      (lineHeight * (1 - this._fontSizeFraction)) / this.lineHeight;\n    for (let i = 0, len = line.length - 1; i <= len; i++) {\n      timeToRender = i === len || this.charSpacing;\n      charsToRender += line[i];\n      charBox = this.__charBounds[lineIndex][i];\n      if (boxWidth === 0) {\n        textLeftOffset += charBox.kernedWidth - charBox.width;\n        boxWidth += charBox.width;\n      } else {\n        boxWidth += charBox.kernedWidth;\n      }\n      if (isJustify && !timeToRender) {\n        if (this._reSpaceAndTab.test(line[i])) {\n          timeToRender = true;\n        }\n      }\n      if (!timeToRender) {\n        // if we have charSpacing, we render char by char\n        actualStyle =\n          actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n        nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n        timeToRender = hasStyleChanged(actualStyle, nextStyle, true);\n      }\n      if (timeToRender) {\n        style = this._getStyleDeclaration(lineIndex, i);\n        textSpans.push(\n          this._createTextCharSpan(\n            charsToRender,\n            style,\n            textLeftOffset,\n            textTopOffset\n          )\n        );\n        charsToRender = '';\n        actualStyle = nextStyle;\n        if (this.direction === 'rtl') {\n          textLeftOffset -= boxWidth;\n        } else {\n          textLeftOffset += boxWidth;\n        }\n        boxWidth = 0;\n      }\n    }\n  }\n\n  private _setSVGTextLineBg(\n    this: TextSVGExportMixin & FabricText,\n    textBgRects: (string | number)[],\n    i: number,\n    leftOffset: number,\n    textTopOffset: number\n  ) {\n    const line = this._textLines[i],\n      heightOfLine = this.getHeightOfLine(i) / this.lineHeight;\n    let boxWidth = 0,\n      boxStart = 0,\n      currentColor,\n      lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n    for (let j = 0; j < line.length; j++) {\n      const { left, width, kernedWidth } = this.__charBounds[i][j];\n      currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n      if (currentColor !== lastColor) {\n        lastColor &&\n          textBgRects.push(\n            ...createSVGInlineRect(\n              lastColor,\n              leftOffset + boxStart,\n              textTopOffset,\n              boxWidth,\n              heightOfLine\n            )\n          );\n        boxStart = left;\n        boxWidth = width;\n        lastColor = currentColor;\n      } else {\n        boxWidth += kernedWidth;\n      }\n    }\n    currentColor &&\n      textBgRects.push(\n        ...createSVGInlineRect(\n          lastColor,\n          leftOffset + boxStart,\n          textTopOffset,\n          boxWidth,\n          heightOfLine\n        )\n      );\n  }\n\n  /**\n   * @deprecated unused\n   */\n  _getSVGLineTopOffset(\n    this: TextSVGExportMixin & FabricText,\n    lineIndex: number\n  ) {\n    let lineTopOffset = 0,\n      j;\n    for (j = 0; j < lineIndex; j++) {\n      lineTopOffset += this.getHeightOfLine(j);\n    }\n    const lastHeight = this.getHeightOfLine(j);\n    return {\n      lineTop: lineTopOffset,\n      offset:\n        ((this._fontSizeMult - this._fontSizeFraction) * lastHeight) /\n        (this.lineHeight * this._fontSizeMult),\n    };\n  }\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Boolean} skipShadow a boolean to skip shadow filter output\n   * @return {String}\n   */\n  getSvgStyles(this: TextSVGExportMixin & FabricText, skipShadow?: boolean) {\n    // cant use ts-expect-error because of ts 5.3 cross check\n    // @ts-ignore TS doesn't respect this type casting\n    return `${super.getSvgStyles(skipShadow)} white-space: pre;`;\n  }\n\n  /**\n   * Returns styles-string for svg-export\n   * @param {Object} style the object from which to retrieve style properties\n   * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n   * @return {String}\n   */\n  getSvgSpanStyles(\n    this: TextSVGExportMixin & FabricText,\n    style: TextStyleDeclaration,\n    useWhiteSpace?: boolean\n  ) {\n    const {\n      fontFamily,\n      strokeWidth,\n      stroke,\n      fill,\n      fontSize,\n      fontStyle,\n      fontWeight,\n      deltaY,\n    } = style;\n\n    const textDecoration = this.getSvgTextDecoration(style);\n\n    return [\n      stroke ? colorPropToSVG('stroke', stroke) : '',\n      strokeWidth ? `stroke-width: ${strokeWidth}; ` : '',\n      fontFamily\n        ? `font-family: ${\n            !fontFamily.includes(\"'\") && !fontFamily.includes('\"')\n              ? `'${fontFamily}'`\n              : fontFamily\n          }; `\n        : '',\n      fontSize ? `font-size: ${fontSize}px; ` : '',\n      fontStyle ? `font-style: ${fontStyle}; ` : '',\n      fontWeight ? `font-weight: ${fontWeight}; ` : '',\n      textDecoration ? `text-decoration: ${textDecoration}; ` : textDecoration,\n      fill ? colorPropToSVG('fill', fill) : '',\n      deltaY ? `baseline-shift: ${-deltaY}; ` : '',\n      useWhiteSpace ? 'white-space: pre; ' : '',\n    ].join('');\n  }\n\n  /**\n   * Returns text-decoration property for svg-export\n   * @param {Object} style the object from which to retrieve style properties\n   * @return {String}\n   */\n  getSvgTextDecoration(\n    this: TextSVGExportMixin & FabricText,\n    style: TextStyleDeclaration\n  ) {\n    return (['overline', 'underline', 'line-through'] as const)\n      .filter(\n        (decoration) =>\n          style[\n            decoration.replace('-', '') as\n              | 'overline'\n              | 'underline'\n              | 'linethrough'\n          ]\n      )\n      .join(' ');\n  }\n}\n","import { cache } from '../../cache';\nimport { DEFAULT_SVG_FONT_SIZE } from '../../constants';\nimport type { ObjectEvents } from '../../EventTypeDefs';\nimport type {\n  CompleteTextStyleDeclaration,\n  TextStyle,\n  TextStyleDeclaration,\n} from './StyledText';\nimport { StyledText } from './StyledText';\nimport { SHARED_ATTRIBUTES } from '../../parser/attributes';\nimport { parseAttributes } from '../../parser/parseAttributes';\nimport type {\n  Abortable,\n  TCacheCanvasDimensions,\n  TClassProperties,\n  TFiller,\n  TOptions,\n} from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport { graphemeSplit } from '../../util/lang_string';\nimport { createCanvasElement } from '../../util/misc/dom';\nimport type { TextStyleArray } from '../../util/misc/textStyles';\nimport {\n  hasStyleChanged,\n  stylesFromArray,\n  stylesToArray,\n} from '../../util/misc/textStyles';\nimport { getPathSegmentsInfo, getPointOnPath } from '../../util/path';\nimport { cacheProperties } from '../Object/FabricObject';\nimport type { Path } from '../Path';\nimport { TextSVGExportMixin } from './TextSVGExportMixin';\nimport { applyMixins } from '../../util/applyMixins';\nimport type { FabricObjectProps, SerializedObjectProps } from '../Object/types';\nimport type { StylePropertiesType } from './constants';\nimport {\n  additionalProps,\n  textDefaultValues,\n  textLayoutProperties,\n  JUSTIFY,\n  JUSTIFY_CENTER,\n  JUSTIFY_LEFT,\n  JUSTIFY_RIGHT,\n} from './constants';\nimport { CENTER, LEFT, RIGHT, TOP, BOTTOM } from '../../constants';\nimport { isFiller } from '../../util/typeAssertions';\nimport type { Gradient } from '../../gradient/Gradient';\nimport type { Pattern } from '../../Pattern';\nimport type { CSSRules } from '../../parser/typedefs';\n\nlet measuringContext: CanvasRenderingContext2D | null;\n\n/**\n * Return a context for measurement of text string.\n * if created it gets stored for reuse\n */\nfunction getMeasuringContext() {\n  if (!measuringContext) {\n    const canvas = createCanvasElement();\n    canvas.width = canvas.height = 0;\n    measuringContext = canvas.getContext('2d');\n  }\n  return measuringContext;\n}\n\nexport type TPathSide = 'left' | 'right';\n\nexport type TPathAlign = 'baseline' | 'center' | 'ascender' | 'descender';\n\nexport type TextLinesInfo = {\n  lines: string[];\n  graphemeLines: string[][];\n  graphemeText: string[];\n  _unwrappedLines: string[][];\n};\n\n/**\n * Measure and return the info of a single grapheme.\n * needs the the info of previous graphemes already filled\n * Override to customize measuring\n */\nexport type GraphemeBBox = {\n  width: number;\n  height: number;\n  kernedWidth: number;\n  left: number;\n  deltaY: number;\n  renderLeft?: number;\n  renderTop?: number;\n  angle?: number;\n};\n\n// @TODO this is not complete\ninterface UniqueTextProps {\n  charSpacing: number;\n  lineHeight: number;\n  fontSize: number;\n  fontWeight: string;\n  fontFamily: string;\n  fontStyle: string;\n  pathSide: TPathSide;\n  pathAlign: TPathAlign;\n  underline: boolean;\n  overline: boolean;\n  linethrough: boolean;\n  textAlign: string;\n  direction: CanvasDirection;\n  path?: Path;\n}\n\nexport interface SerializedTextProps\n  extends SerializedObjectProps,\n    UniqueTextProps {\n  styles: TextStyleArray | TextStyle;\n}\n\nexport interface TextProps extends FabricObjectProps, UniqueTextProps {\n  styles: TextStyle;\n}\n\n/**\n * Text class\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n */\nexport class FabricText<\n    Props extends TOptions<TextProps> = Partial<TextProps>,\n    SProps extends SerializedTextProps = SerializedTextProps,\n    EventSpec extends ObjectEvents = ObjectEvents\n  >\n  extends StyledText<Props, SProps, EventSpec>\n  implements UniqueTextProps\n{\n  /**\n   * Properties that requires a text layout recalculation when changed\n   * @type string[]\n   * @protected\n   */\n  static textLayoutProperties: string[] = textLayoutProperties;\n\n  /**\n   * @private\n   */\n  declare _reNewline: RegExp;\n\n  /**\n   * Use this regular expression to filter for whitespaces that is not a new line.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reSpacesAndTabs: RegExp;\n\n  /**\n   * Use this regular expression to filter for whitespace that is not a new line.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reSpaceAndTab: RegExp;\n\n  /**\n   * Use this regular expression to filter consecutive groups of non spaces.\n   * Mostly used when text is 'justify' aligned.\n   * @private\n   */\n  declare _reWords: RegExp;\n\n  declare text: string;\n\n  /**\n   * Font size (in pixels)\n   * @type Number\n   * @default\n   */\n  declare fontSize: number;\n\n  /**\n   * Font weight (e.g. bold, normal, 400, 600, 800)\n   * @type {(Number|String)}\n   * @default\n   */\n  declare fontWeight: string;\n\n  /**\n   * Font family\n   * @type String\n   * @default\n   */\n  declare fontFamily: string;\n\n  /**\n   * Text decoration underline.\n   * @type Boolean\n   * @default\n   */\n  declare underline: boolean;\n\n  /**\n   * Text decoration overline.\n   * @type Boolean\n   * @default\n   */\n  declare overline: boolean;\n\n  /**\n   * Text decoration linethrough.\n   * @type Boolean\n   * @default\n   */\n  declare linethrough: boolean;\n\n  /**\n   * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n   * \"justify-left\", \"justify-center\" or \"justify-right\".\n   * @type String\n   * @default\n   */\n  declare textAlign: string;\n\n  /**\n   * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n   * @type String\n   * @default\n   */\n  declare fontStyle: string;\n\n  /**\n   * Line height\n   * @type Number\n   * @default\n   */\n  declare lineHeight: number;\n\n  /**\n   * Superscript schema object (minimum overlap)\n   */\n  declare superscript: {\n    /**\n     * fontSize factor\n     * @default 0.6\n     */\n    size: number;\n    /**\n     * baseline-shift factor (upwards)\n     * @default -0.35\n     */\n    baseline: number;\n  };\n\n  /**\n   * Subscript schema object (minimum overlap)\n   */\n  declare subscript: {\n    /**\n     * fontSize factor\n     * @default 0.6\n     */\n    size: number;\n    /**\n     * baseline-shift factor (downwards)\n     * @default 0.11\n     */\n    baseline: number;\n  };\n\n  /**\n   * Background color of text lines\n   * @type String\n   * @default\n   */\n  declare textBackgroundColor: string;\n\n  declare styles: TextStyle;\n\n  /**\n   * Path that the text should follow.\n   * since 4.6.0 the path will be drawn automatically.\n   * if you want to make the path visible, give it a stroke and strokeWidth or fill value\n   * if you want it to be hidden, assign visible = false to the path.\n   * This feature is in BETA, and SVG import/export is not yet supported.\n   * @type Path\n   * @example\n   * const textPath = new Text('Text on a path', {\n   *     top: 150,\n   *     left: 150,\n   *     textAlign: 'center',\n   *     charSpacing: -50,\n   *     path: new Path('M 0 0 C 50 -100 150 -100 200 0', {\n   *         strokeWidth: 1,\n   *         visible: false\n   *     }),\n   *     pathSide: 'left',\n   *     pathStartOffset: 0\n   * });\n   * @default\n   */\n  declare path?: Path;\n\n  /**\n   * Offset amount for text path starting position\n   * Only used when text has a path\n   * @type Number\n   * @default\n   */\n  declare pathStartOffset: number;\n\n  /**\n   * Which side of the path the text should be drawn on.\n   * Only used when text has a path\n   * @type {TPathSide} 'left|right'\n   * @default\n   */\n  declare pathSide: TPathSide;\n\n  /**\n   * How text is aligned to the path. This property determines\n   * the perpendicular position of each character relative to the path.\n   * (one of \"baseline\", \"center\", \"ascender\", \"descender\")\n   * This feature is in BETA, and its behavior may change\n   * @type TPathAlign\n   * @default\n   */\n  declare pathAlign: TPathAlign;\n\n  /**\n   * @private\n   */\n  declare _fontSizeFraction: number;\n\n  /**\n   * @private\n   */\n  declare offsets: { underline: number; linethrough: number; overline: number };\n\n  /**\n   * Text Line proportion to font Size (in pixels)\n   * @type Number\n   * @default\n   */\n  declare _fontSizeMult: number;\n\n  /**\n   * additional space between characters\n   * expressed in thousands of em unit\n   * @type Number\n   * @default\n   */\n  declare charSpacing: number;\n\n  /**\n   * Baseline shift, styles only, keep at 0 for the main text object\n   * @type {Number}\n   * @default\n   */\n  declare deltaY: number;\n\n  /**\n   * WARNING: EXPERIMENTAL. NOT SUPPORTED YET\n   * determine the direction of the text.\n   * This has to be set manually together with textAlign and originX for proper\n   * experience.\n   * some interesting link for the future\n   * https://www.w3.org/International/questions/qa-bidi-unicode-controls\n   * @since 4.5.0\n   * @type {CanvasDirection} 'ltr|rtl'\n   * @default\n   */\n  declare direction: CanvasDirection;\n\n  /**\n   * contains characters bounding boxes\n   * This variable is considered to be protected.\n   * But for how mixins are implemented right now, we can't leave it private\n   * @protected\n   */\n  __charBounds: GraphemeBBox[][] = [];\n\n  /**\n   * use this size when measuring text. To avoid IE11 rounding errors\n   * @type {Number}\n   * @default\n   * @readonly\n   * @private\n   */\n  declare CACHE_FONT_SIZE: number;\n\n  /**\n   * contains the min text width to avoid getting 0\n   * @type {Number}\n   * @default\n   */\n  declare MIN_TEXT_WIDTH: number;\n\n  /**\n   * contains the the text of the object, divided in lines as they are displayed\n   * on screen. Wrapping will divide the text independently of line breaks\n   * @type {string[]}\n   * @default\n   */\n  declare textLines: string[];\n\n  /**\n   * same as textlines, but each line is an array of graphemes as split by splitByGrapheme\n   * @type {string[]}\n   * @default\n   */\n  declare _textLines: string[][];\n\n  declare _unwrappedTextLines: string[][];\n  declare _text: string[];\n  declare cursorWidth: number;\n  declare __lineHeights: number[];\n  declare __lineWidths: number[];\n  declare initialized?: true;\n\n  static cacheProperties = [...cacheProperties, ...additionalProps];\n\n  static ownDefaults = textDefaultValues;\n\n  static type = 'Text';\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...FabricText.ownDefaults };\n  }\n\n  constructor(text: string, options: Props = {} as Props) {\n    super({ ...options, text, styles: options?.styles || {} });\n    this.initialized = true;\n    if (this.path) {\n      this.setPathInfo();\n    }\n    this.initDimensions();\n    this.setCoords();\n  }\n\n  /**\n   * If text has a path, it will add the extra information needed\n   * for path and text calculations\n   */\n  setPathInfo() {\n    const path = this.path;\n    if (path) {\n      path.segmentsInfo = getPathSegmentsInfo(path.path);\n    }\n  }\n\n  /**\n   * @private\n   * Divides text into lines of text and lines of graphemes.\n   */\n  _splitText(): TextLinesInfo {\n    const newLines = this._splitTextIntoLines(this.text);\n    this.textLines = newLines.lines;\n    this._textLines = newLines.graphemeLines;\n    this._unwrappedTextLines = newLines._unwrappedLines;\n    this._text = newLines.graphemeText;\n    return newLines;\n  }\n\n  /**\n   * Initialize or update text dimensions.\n   * Updates this.width and this.height with the proper values.\n   * Does not return dimensions.\n   */\n  initDimensions() {\n    this._splitText();\n    this._clearCache();\n    this.dirty = true;\n    if (this.path) {\n      this.width = this.path.width;\n      this.height = this.path.height;\n    } else {\n      this.width =\n        this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      this.height = this.calcTextHeight();\n    }\n    if (this.textAlign.includes(JUSTIFY)) {\n      // once text is measured we need to make space fatter to make justified text.\n      this.enlargeSpaces();\n    }\n  }\n\n  /**\n   * Enlarge space boxes and shift the others\n   */\n  enlargeSpaces() {\n    let diffSpace,\n      currentLineWidth,\n      numberOfSpaces,\n      accumulatedSpace,\n      line,\n      charBound,\n      spaces;\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      if (\n        this.textAlign !== JUSTIFY &&\n        (i === len - 1 || this.isEndOfWrapping(i))\n      ) {\n        continue;\n      }\n      accumulatedSpace = 0;\n      line = this._textLines[i];\n      currentLineWidth = this.getLineWidth(i);\n      if (\n        currentLineWidth < this.width &&\n        (spaces = this.textLines[i].match(this._reSpacesAndTabs))\n      ) {\n        numberOfSpaces = spaces.length;\n        diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n        for (let j = 0; j <= line.length; j++) {\n          charBound = this.__charBounds[i][j];\n          if (this._reSpaceAndTab.test(line[j])) {\n            charBound.width += diffSpace;\n            charBound.kernedWidth += diffSpace;\n            charBound.left += accumulatedSpace;\n            accumulatedSpace += diffSpace;\n          } else {\n            charBound.left += accumulatedSpace;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Detect if the text line is ended with an hard break\n   * text and itext do not have wrapping, return false\n   * @return {Boolean}\n   */\n  isEndOfWrapping(lineIndex: number): boolean {\n    return lineIndex === this._textLines.length - 1;\n  }\n\n  /**\n   * Detect if a line has a linebreak and so we need to account for it when moving\n   * and counting style.\n   * It return always 1 for text and Itext. Textbox has its own implementation\n   * @return Number\n   */\n  missingNewlineOffset(lineIndex: number, skipWrapping?: boolean): 0 | 1;\n  missingNewlineOffset(lineIndex: number): 1 {\n    return 1;\n  }\n\n  /**\n   * Returns 2d representation (lineIndex and charIndex) of cursor\n   * @param {Number} selectionStart\n   * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\n   */\n  get2DCursorLocation(selectionStart: number, skipWrapping?: boolean) {\n    const lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n    let i: number;\n    for (i = 0; i < lines.length; i++) {\n      if (selectionStart <= lines[i].length) {\n        return {\n          lineIndex: i,\n          charIndex: selectionStart,\n        };\n      }\n      selectionStart -=\n        lines[i].length + this.missingNewlineOffset(i, skipWrapping);\n    }\n    return {\n      lineIndex: i - 1,\n      charIndex:\n        lines[i - 1].length < selectionStart\n          ? lines[i - 1].length\n          : selectionStart,\n    };\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {String} String representation of text object\n   */\n  toString(): string {\n    return `#<Text (${this.complexity()}): { \"text\": \"${\n      this.text\n    }\", \"fontFamily\": \"${this.fontFamily}\" }>`;\n  }\n\n  /**\n   * Return the dimension and the zoom level needed to create a cache canvas\n   * big enough to host the object to be cached.\n   * @private\n   * @param {Object} dim.x width of object to be cached\n   * @param {Object} dim.y height of object to be cached\n   * @return {Object}.width width of canvas\n   * @return {Object}.height height of canvas\n   * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n   * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n   */\n  _getCacheCanvasDimensions(): TCacheCanvasDimensions {\n    const dims = super._getCacheCanvasDimensions();\n    const fontSize = this.fontSize;\n    dims.width += fontSize * dims.zoomX;\n    dims.height += fontSize * dims.zoomY;\n    return dims;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    const path = this.path;\n    path && !path.isNotVisible() && path._render(ctx);\n    this._setTextStyles(ctx);\n    this._renderTextLinesBackground(ctx);\n    this._renderTextDecoration(ctx, 'underline');\n    this._renderText(ctx);\n    this._renderTextDecoration(ctx, 'overline');\n    this._renderTextDecoration(ctx, 'linethrough');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderText(ctx: CanvasRenderingContext2D) {\n    if (this.paintFirst === 'stroke') {\n      this._renderTextStroke(ctx);\n      this._renderTextFill(ctx);\n    } else {\n      this._renderTextFill(ctx);\n      this._renderTextStroke(ctx);\n    }\n  }\n\n  /**\n   * Set the font parameter of the context with the object properties or with charStyle\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Object} [charStyle] object with font style properties\n   * @param {String} [charStyle.fontFamily] Font Family\n   * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n   * @param {String} [charStyle.fontWeight] Font weight\n   * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n   */\n  _setTextStyles(\n    ctx: CanvasRenderingContext2D,\n    charStyle?: any,\n    forMeasuring?: boolean\n  ) {\n    ctx.textBaseline = 'alphabetic';\n    if (this.path) {\n      switch (this.pathAlign) {\n        case CENTER:\n          ctx.textBaseline = 'middle';\n          break;\n        case 'ascender':\n          ctx.textBaseline = TOP;\n          break;\n        case 'descender':\n          ctx.textBaseline = BOTTOM;\n          break;\n      }\n    }\n    ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n  }\n\n  /**\n   * calculate and return the text Width measuring each line.\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @return {Number} Maximum width of Text object\n   */\n  calcTextWidth(): number {\n    let maxWidth = this.getLineWidth(0);\n\n    for (let i = 1, len = this._textLines.length; i < len; i++) {\n      const currentLineWidth = this.getLineWidth(i);\n      if (currentLineWidth > maxWidth) {\n        maxWidth = currentLineWidth;\n      }\n    }\n    return maxWidth;\n  }\n\n  /**\n   * @private\n   * @param {String} method Method name (\"fillText\" or \"strokeText\")\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {String} line Text to render\n   * @param {Number} left Left position of text\n   * @param {Number} top Top position of text\n   * @param {Number} lineIndex Index of a line in a text\n   */\n  _renderTextLine(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    line: string[],\n    left: number,\n    top: number,\n    lineIndex: number\n  ) {\n    this._renderChars(method, ctx, line, left, top, lineIndex);\n  }\n\n  /**\n   * Renders the text background for lines, taking care of style\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextLinesBackground(ctx: CanvasRenderingContext2D) {\n    if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n      return;\n    }\n    const originalFill = ctx.fillStyle,\n      leftOffset = this._getLeftOffset();\n    let lineTopOffset = this._getTopOffset();\n\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i);\n      if (\n        !this.textBackgroundColor &&\n        !this.styleHas('textBackgroundColor', i)\n      ) {\n        lineTopOffset += heightOfLine;\n        continue;\n      }\n      const jlen = this._textLines[i].length;\n      const lineLeftOffset = this._getLineLeftOffset(i);\n      let boxWidth = 0;\n      let boxStart = 0;\n      let drawStart;\n      let currentColor;\n      let lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (let j = 0; j < jlen; j++) {\n        // at this point charbox are either standard or full with pathInfo if there is a path.\n        const charBox = this.__charBounds[i][j] as Required<GraphemeBBox>;\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (this.path) {\n          ctx.save();\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          ctx.fillStyle = currentColor;\n          currentColor &&\n            ctx.fillRect(\n              -charBox.width / 2,\n              (-heightOfLine / this.lineHeight) * (1 - this._fontSizeFraction),\n              charBox.width,\n              heightOfLine / this.lineHeight\n            );\n          ctx.restore();\n        } else if (currentColor !== lastColor) {\n          drawStart = leftOffset + lineLeftOffset + boxStart;\n          if (this.direction === 'rtl') {\n            drawStart = this.width - drawStart - boxWidth;\n          }\n          ctx.fillStyle = lastColor;\n          lastColor &&\n            ctx.fillRect(\n              drawStart,\n              lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      if (currentColor && !this.path) {\n        drawStart = leftOffset + lineLeftOffset + boxStart;\n        if (this.direction === 'rtl') {\n          drawStart = this.width - drawStart - boxWidth;\n        }\n        ctx.fillStyle = currentColor;\n        ctx.fillRect(\n          drawStart,\n          lineTopOffset,\n          boxWidth,\n          heightOfLine / this.lineHeight\n        );\n      }\n      lineTopOffset += heightOfLine;\n    }\n    ctx.fillStyle = originalFill;\n    // if there is text background color no\n    // other shadows should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * measure and return the width of a single character.\n   * possibly overridden to accommodate different measure logic or\n   * to hook some external lib for character measurement\n   * @private\n   * @param {String} _char, char to be measured\n   * @param {Object} charStyle style of char to be measured\n   * @param {String} [previousChar] previous char\n   * @param {Object} [prevCharStyle] style of previous char\n   */\n  _measureChar(\n    _char: string,\n    charStyle: CompleteTextStyleDeclaration,\n    previousChar: string | undefined,\n    prevCharStyle: CompleteTextStyleDeclaration | Record<string, never>\n  ) {\n    const fontCache = cache.getFontCache(charStyle),\n      fontDeclaration = this._getFontDeclaration(charStyle),\n      couple = previousChar + _char,\n      stylesAreEqual =\n        previousChar &&\n        fontDeclaration === this._getFontDeclaration(prevCharStyle),\n      fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE;\n    let width: number | undefined,\n      coupleWidth: number | undefined,\n      previousWidth: number | undefined,\n      kernedWidth: number | undefined;\n\n    if (previousChar && fontCache[previousChar] !== undefined) {\n      previousWidth = fontCache[previousChar];\n    }\n    if (fontCache[_char] !== undefined) {\n      kernedWidth = width = fontCache[_char];\n    }\n    if (stylesAreEqual && fontCache[couple] !== undefined) {\n      coupleWidth = fontCache[couple];\n      kernedWidth = coupleWidth - previousWidth!;\n    }\n    if (\n      width === undefined ||\n      previousWidth === undefined ||\n      coupleWidth === undefined\n    ) {\n      const ctx = getMeasuringContext()!;\n      // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n      this._setTextStyles(ctx, charStyle, true);\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        // safe to use the non-null since if undefined we defined it before.\n        kernedWidth = coupleWidth - previousWidth!;\n      }\n    }\n    return {\n      width: width * fontMultiplier,\n      kernedWidth: kernedWidth! * fontMultiplier,\n    };\n  }\n\n  /**\n   * Computes height of character at given position\n   * @param {Number} line the line index number\n   * @param {Number} _char the character index number\n   * @return {Number} fontSize of the character\n   */\n  getHeightOfChar(line: number, _char: number): number {\n    return this.getValueOfPropertyAt(line, _char, 'fontSize');\n  }\n\n  /**\n   * measure a text line measuring all characters.\n   * @param {Number} lineIndex line number\n   */\n  measureLine(lineIndex: number) {\n    const lineInfo = this._measureLine(lineIndex);\n    if (this.charSpacing !== 0) {\n      lineInfo.width -= this._getWidthOfCharSpacing();\n    }\n    if (lineInfo.width < 0) {\n      lineInfo.width = 0;\n    }\n    return lineInfo;\n  }\n\n  /**\n   * measure every grapheme of a line, populating __charBounds\n   * @param {Number} lineIndex\n   * @return {Object} object.width total width of characters\n   * @return {Object} object.numOfSpaces length of chars that match this._reSpacesAndTabs\n   */\n  _measureLine(lineIndex: number) {\n    let width = 0,\n      prevGrapheme: string | undefined,\n      graphemeInfo: GraphemeBBox | undefined;\n\n    const reverse = this.pathSide === RIGHT,\n      path = this.path,\n      line = this._textLines[lineIndex],\n      llength = line.length,\n      lineBounds = new Array<GraphemeBBox>(llength);\n\n    this.__charBounds[lineIndex] = lineBounds;\n    for (let i = 0; i < llength; i++) {\n      const grapheme = line[i];\n      graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n      lineBounds[i] = graphemeInfo;\n      width += graphemeInfo.kernedWidth;\n      prevGrapheme = grapheme;\n    }\n    // this latest bound box represent the last character of the line\n    // to simplify cursor handling in interactive mode.\n    lineBounds[llength] = {\n      left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n      width: 0,\n      kernedWidth: 0,\n      height: this.fontSize,\n      deltaY: 0,\n    } as GraphemeBBox;\n    if (path && path.segmentsInfo) {\n      let positionInPath = 0;\n      const totalPathLength =\n        path.segmentsInfo[path.segmentsInfo.length - 1].length;\n      switch (this.textAlign) {\n        case LEFT:\n          positionInPath = reverse ? totalPathLength - width : 0;\n          break;\n        case CENTER:\n          positionInPath = (totalPathLength - width) / 2;\n          break;\n        case RIGHT:\n          positionInPath = reverse ? 0 : totalPathLength - width;\n          break;\n        //todo - add support for justify\n      }\n      positionInPath += this.pathStartOffset * (reverse ? -1 : 1);\n      for (\n        let i = reverse ? llength - 1 : 0;\n        reverse ? i >= 0 : i < llength;\n        reverse ? i-- : i++\n      ) {\n        graphemeInfo = lineBounds[i];\n        if (positionInPath > totalPathLength) {\n          positionInPath %= totalPathLength;\n        } else if (positionInPath < 0) {\n          positionInPath += totalPathLength;\n        }\n        // it would probably much faster to send all the grapheme position for a line\n        // and calculate path position/angle at once.\n        this._setGraphemeOnPath(positionInPath, graphemeInfo);\n        positionInPath += graphemeInfo.kernedWidth;\n      }\n    }\n    return { width: width, numOfSpaces: 0 };\n  }\n\n  /**\n   * Calculate the angle  and the left,top position of the char that follow a path.\n   * It appends it to graphemeInfo to be reused later at rendering\n   * @private\n   * @param {Number} positionInPath to be measured\n   * @param {GraphemeBBox} graphemeInfo current grapheme box information\n   * @param {Object} startingPoint position of the point\n   */\n  _setGraphemeOnPath(positionInPath: number, graphemeInfo: GraphemeBBox) {\n    const centerPosition = positionInPath + graphemeInfo.kernedWidth / 2,\n      path = this.path!;\n\n    // we are at currentPositionOnPath. we want to know what point on the path is.\n    const info = getPointOnPath(path.path, centerPosition, path.segmentsInfo)!;\n    graphemeInfo.renderLeft = info.x - path.pathOffset.x;\n    graphemeInfo.renderTop = info.y - path.pathOffset.y;\n    graphemeInfo.angle = info.angle + (this.pathSide === RIGHT ? Math.PI : 0);\n  }\n\n  /**\n   *\n   * @param {String} grapheme to be measured\n   * @param {Number} lineIndex index of the line where the char is\n   * @param {Number} charIndex position in the line\n   * @param {String} [prevGrapheme] character preceding the one to be measured\n   * @returns {GraphemeBBox} grapheme bbox\n   */\n  _getGraphemeBox(\n    grapheme: string,\n    lineIndex: number,\n    charIndex: number,\n    prevGrapheme?: string,\n    skipLeft?: boolean\n  ): GraphemeBBox {\n    const style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n      prevStyle = prevGrapheme\n        ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1)\n        : {},\n      info = this._measureChar(grapheme, style, prevGrapheme, prevStyle);\n    let kernedWidth = info.kernedWidth,\n      width = info.width,\n      charSpacing;\n\n    if (this.charSpacing !== 0) {\n      charSpacing = this._getWidthOfCharSpacing();\n      width += charSpacing;\n      kernedWidth += charSpacing;\n    }\n\n    const box: GraphemeBBox = {\n      width,\n      left: 0,\n      height: style.fontSize,\n      kernedWidth,\n      deltaY: style.deltaY,\n    };\n    if (charIndex > 0 && !skipLeft) {\n      const previousBox = this.__charBounds[lineIndex][charIndex - 1];\n      box.left =\n        previousBox.left + previousBox.width + info.kernedWidth - info.width;\n    }\n    return box;\n  }\n\n  /**\n   * Calculate height of line at 'lineIndex'\n   * @param {Number} lineIndex index of line to calculate\n   * @return {Number}\n   */\n  getHeightOfLine(lineIndex: number): number {\n    if (this.__lineHeights[lineIndex]) {\n      return this.__lineHeights[lineIndex];\n    }\n\n    // char 0 is measured before the line cycle because it needs to char\n    // emptylines\n    let maxHeight = this.getHeightOfChar(lineIndex, 0);\n    for (let i = 1, len = this._textLines[lineIndex].length; i < len; i++) {\n      maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n    }\n\n    return (this.__lineHeights[lineIndex] =\n      maxHeight * this.lineHeight * this._fontSizeMult);\n  }\n\n  /**\n   * Calculate text box height\n   */\n  calcTextHeight() {\n    let lineHeight,\n      height = 0;\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      lineHeight = this.getHeightOfLine(i);\n      height += i === len - 1 ? lineHeight / this.lineHeight : lineHeight;\n    }\n    return height;\n  }\n\n  /**\n   * @private\n   * @return {Number} Left offset\n   */\n  _getLeftOffset(): number {\n    return this.direction === 'ltr' ? -this.width / 2 : this.width / 2;\n  }\n\n  /**\n   * @private\n   * @return {Number} Top offset\n   */\n  _getTopOffset(): number {\n    return -this.height / 2;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {String} method Method name (\"fillText\" or \"strokeText\")\n   */\n  _renderTextCommon(\n    ctx: CanvasRenderingContext2D,\n    method: 'fillText' | 'strokeText'\n  ) {\n    ctx.save();\n    let lineHeights = 0;\n    const left = this._getLeftOffset(),\n      top = this._getTopOffset();\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i),\n        maxHeight = heightOfLine / this.lineHeight,\n        leftOffset = this._getLineLeftOffset(i);\n      this._renderTextLine(\n        method,\n        ctx,\n        this._textLines[i],\n        left + leftOffset,\n        top + lineHeights + maxHeight,\n        i\n      );\n      lineHeights += heightOfLine;\n    }\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextFill(ctx: CanvasRenderingContext2D) {\n    if (!this.fill && !this.styleHas('fill')) {\n      return;\n    }\n\n    this._renderTextCommon(ctx, 'fillText');\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextStroke(ctx: CanvasRenderingContext2D) {\n    if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n      return;\n    }\n\n    if (this.shadow && !this.shadow.affectStroke) {\n      this._removeShadow(ctx);\n    }\n\n    ctx.save();\n    this._setLineDash(ctx, this.strokeDashArray);\n    ctx.beginPath();\n    this._renderTextCommon(ctx, 'strokeText');\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  /**\n   * @private\n   * @param {String} method fillText or strokeText.\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Array} line Content of the line, splitted in an array by grapheme\n   * @param {Number} left\n   * @param {Number} top\n   * @param {Number} lineIndex\n   */\n  _renderChars(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    line: Array<any>,\n    left: number,\n    top: number,\n    lineIndex: number\n  ) {\n    const lineHeight = this.getHeightOfLine(lineIndex),\n      isJustify = this.textAlign.includes(JUSTIFY),\n      path = this.path,\n      shortCut =\n        !isJustify &&\n        this.charSpacing === 0 &&\n        this.isEmptyStyles(lineIndex) &&\n        !path,\n      isLtr = this.direction === 'ltr',\n      sign = this.direction === 'ltr' ? 1 : -1,\n      // this was changed in the PR #7674\n      // currentDirection = ctx.canvas.getAttribute('dir');\n      currentDirection = ctx.direction;\n\n    let actualStyle,\n      nextStyle,\n      charsToRender = '',\n      charBox,\n      boxWidth = 0,\n      timeToRender,\n      drawingLeft;\n\n    ctx.save();\n    if (currentDirection !== this.direction) {\n      ctx.canvas.setAttribute('dir', isLtr ? 'ltr' : 'rtl');\n      ctx.direction = isLtr ? 'ltr' : 'rtl';\n      ctx.textAlign = isLtr ? LEFT : RIGHT;\n    }\n    top -= (lineHeight * this._fontSizeFraction) / this.lineHeight;\n    if (shortCut) {\n      // render all the line in one pass without checking\n      // drawingLeft = isLtr ? left : left - this.getLineWidth(lineIndex);\n      this._renderChar(method, ctx, lineIndex, 0, line.join(''), left, top);\n      ctx.restore();\n      return;\n    }\n    for (let i = 0, len = line.length - 1; i <= len; i++) {\n      timeToRender = i === len || this.charSpacing || path;\n      charsToRender += line[i];\n      charBox = this.__charBounds[lineIndex][i] as Required<GraphemeBBox>;\n      if (boxWidth === 0) {\n        left += sign * (charBox.kernedWidth - charBox.width);\n        boxWidth += charBox.width;\n      } else {\n        boxWidth += charBox.kernedWidth;\n      }\n      if (isJustify && !timeToRender) {\n        if (this._reSpaceAndTab.test(line[i])) {\n          timeToRender = true;\n        }\n      }\n      if (!timeToRender) {\n        // if we have charSpacing, we render char by char\n        actualStyle =\n          actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n        nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n        timeToRender = hasStyleChanged(actualStyle, nextStyle, false);\n      }\n      if (timeToRender) {\n        if (path) {\n          ctx.save();\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          this._renderChar(\n            method,\n            ctx,\n            lineIndex,\n            i,\n            charsToRender,\n            -boxWidth / 2,\n            0\n          );\n          ctx.restore();\n        } else {\n          drawingLeft = left;\n          this._renderChar(\n            method,\n            ctx,\n            lineIndex,\n            i,\n            charsToRender,\n            drawingLeft,\n            top\n          );\n        }\n        charsToRender = '';\n        actualStyle = nextStyle;\n        left += sign * boxWidth;\n        boxWidth = 0;\n      }\n    }\n    ctx.restore();\n  }\n\n  /**\n   * This function try to patch the missing gradientTransform on canvas gradients.\n   * transforming a context to transform the gradient, is going to transform the stroke too.\n   * we want to transform the gradient but not the stroke operation, so we create\n   * a transformed gradient on a pattern and then we use the pattern instead of the gradient.\n   * this method has drawbacks: is slow, is in low resolution, needs a patch for when the size\n   * is limited.\n   * @private\n   * @param {TFiller} filler a fabric gradient instance\n   * @return {CanvasPattern} a pattern to use as fill/stroke style\n   */\n  _applyPatternGradientTransformText(filler: TFiller) {\n    const pCanvas = createCanvasElement(),\n      // TODO: verify compatibility with strokeUniform\n      width = this.width + this.strokeWidth,\n      height = this.height + this.strokeWidth,\n      pCtx = pCanvas.getContext('2d')!;\n    pCanvas.width = width;\n    pCanvas.height = height;\n    pCtx.beginPath();\n    pCtx.moveTo(0, 0);\n    pCtx.lineTo(width, 0);\n    pCtx.lineTo(width, height);\n    pCtx.lineTo(0, height);\n    pCtx.closePath();\n    pCtx.translate(width / 2, height / 2);\n    pCtx.fillStyle = filler.toLive(pCtx)!;\n    this._applyPatternGradientTransform(pCtx, filler);\n    pCtx.fill();\n    return pCtx.createPattern(pCanvas, 'no-repeat')!;\n  }\n\n  handleFiller<T extends 'fill' | 'stroke'>(\n    ctx: CanvasRenderingContext2D,\n    property: `${T}Style`,\n    filler: TFiller | string\n  ): { offsetX: number; offsetY: number } {\n    let offsetX: number, offsetY: number;\n    if (isFiller(filler)) {\n      if (\n        (filler as Gradient<'linear'>).gradientUnits === 'percentage' ||\n        (filler as Gradient<'linear'>).gradientTransform ||\n        (filler as Pattern).patternTransform\n      ) {\n        // need to transform gradient in a pattern.\n        // this is a slow process. If you are hitting this codepath, and the object\n        // is not using caching, you should consider switching it on.\n        // we need a canvas as big as the current object caching canvas.\n        offsetX = -this.width / 2;\n        offsetY = -this.height / 2;\n        ctx.translate(offsetX, offsetY);\n        ctx[property] = this._applyPatternGradientTransformText(filler);\n        return { offsetX, offsetY };\n      } else {\n        // is a simple gradient or pattern\n        ctx[property] = filler.toLive(ctx)!;\n        return this._applyPatternGradientTransform(ctx, filler);\n      }\n    } else {\n      // is a color\n      ctx[property] = filler;\n    }\n    return { offsetX: 0, offsetY: 0 };\n  }\n\n  /**\n   * This function prepare the canvas for a stroke style, and stroke and strokeWidth\n   * need to be sent in as defined\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {CompleteTextStyleDeclaration} style with stroke and strokeWidth defined\n   * @returns\n   */\n  _setStrokeStyles(\n    ctx: CanvasRenderingContext2D,\n    {\n      stroke,\n      strokeWidth,\n    }: Pick<CompleteTextStyleDeclaration, 'stroke' | 'strokeWidth'>\n  ) {\n    ctx.lineWidth = strokeWidth;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.lineDashOffset = this.strokeDashOffset;\n    ctx.lineJoin = this.strokeLineJoin;\n    ctx.miterLimit = this.strokeMiterLimit;\n    return this.handleFiller(ctx, 'strokeStyle', stroke!);\n  }\n\n  /**\n   * This function prepare the canvas for a ill style, and fill\n   * need to be sent in as defined\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {CompleteTextStyleDeclaration} style with ill defined\n   * @returns\n   */\n  _setFillStyles(ctx: CanvasRenderingContext2D, { fill }: Pick<this, 'fill'>) {\n    return this.handleFiller(ctx, 'fillStyle', fill!);\n  }\n\n  /**\n   * @private\n   * @param {String} method\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {String} _char\n   * @param {Number} left Left coordinate\n   * @param {Number} top Top coordinate\n   * @param {Number} lineHeight Height of the line\n   */\n  _renderChar(\n    method: 'fillText' | 'strokeText',\n    ctx: CanvasRenderingContext2D,\n    lineIndex: number,\n    charIndex: number,\n    _char: string,\n    left: number,\n    top: number\n  ) {\n    const decl = this._getStyleDeclaration(lineIndex, charIndex),\n      fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n      shouldFill = method === 'fillText' && fullDecl.fill,\n      shouldStroke =\n        method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n    if (!shouldStroke && !shouldFill) {\n      return;\n    }\n    ctx.save();\n\n    ctx.font = this._getFontDeclaration(fullDecl);\n\n    if (decl.textBackgroundColor) {\n      this._removeShadow(ctx);\n    }\n    if (decl.deltaY) {\n      top += decl.deltaY;\n    }\n\n    if (shouldFill) {\n      const fillOffsets = this._setFillStyles(ctx, fullDecl);\n      ctx.fillText(\n        _char,\n        left - fillOffsets.offsetX,\n        top - fillOffsets.offsetY\n      );\n    }\n\n    if (shouldStroke) {\n      const strokeOffsets = this._setStrokeStyles(ctx, fullDecl);\n      ctx.strokeText(\n        _char,\n        left - strokeOffsets.offsetX,\n        top - strokeOffsets.offsetY\n      );\n    }\n\n    ctx.restore();\n  }\n\n  /**\n   * Turns the character into a 'superior figure' (i.e. 'superscript')\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   */\n  setSuperscript(start: number, end: number) {\n    this._setScript(start, end, this.superscript);\n  }\n\n  /**\n   * Turns the character into an 'inferior figure' (i.e. 'subscript')\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   */\n  setSubscript(start: number, end: number) {\n    this._setScript(start, end, this.subscript);\n  }\n\n  /**\n   * Applies 'schema' at given position\n   * @private\n   * @param {Number} start selection start\n   * @param {Number} end selection end\n   * @param {Number} schema\n   */\n  protected _setScript(\n    start: number,\n    end: number,\n    schema: {\n      size: number;\n      baseline: number;\n    }\n  ) {\n    const loc = this.get2DCursorLocation(start, true),\n      fontSize = this.getValueOfPropertyAt(\n        loc.lineIndex,\n        loc.charIndex,\n        'fontSize'\n      ),\n      dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n      style = {\n        fontSize: fontSize * schema.size,\n        deltaY: dy + fontSize * schema.baseline,\n      };\n    this.setSelectionStyles(style, start, end);\n  }\n\n  /**\n   * @private\n   * @param {Number} lineIndex index text line\n   * @return {Number} Line left offset\n   */\n  _getLineLeftOffset(lineIndex: number): number {\n    const lineWidth = this.getLineWidth(lineIndex),\n      lineDiff = this.width - lineWidth,\n      textAlign = this.textAlign,\n      direction = this.direction,\n      isEndOfWrapping = this.isEndOfWrapping(lineIndex);\n    let leftOffset = 0;\n    if (\n      textAlign === JUSTIFY ||\n      (textAlign === JUSTIFY_CENTER && !isEndOfWrapping) ||\n      (textAlign === JUSTIFY_RIGHT && !isEndOfWrapping) ||\n      (textAlign === JUSTIFY_LEFT && !isEndOfWrapping)\n    ) {\n      return 0;\n    }\n    if (textAlign === CENTER) {\n      leftOffset = lineDiff / 2;\n    }\n    if (textAlign === RIGHT) {\n      leftOffset = lineDiff;\n    }\n    if (textAlign === JUSTIFY_CENTER) {\n      leftOffset = lineDiff / 2;\n    }\n    if (textAlign === JUSTIFY_RIGHT) {\n      leftOffset = lineDiff;\n    }\n    if (direction === 'rtl') {\n      if (\n        textAlign === RIGHT ||\n        textAlign === JUSTIFY ||\n        textAlign === JUSTIFY_RIGHT\n      ) {\n        leftOffset = 0;\n      } else if (textAlign === LEFT || textAlign === JUSTIFY_LEFT) {\n        leftOffset = -lineDiff;\n      } else if (textAlign === CENTER || textAlign === JUSTIFY_CENTER) {\n        leftOffset = -lineDiff / 2;\n      }\n    }\n    return leftOffset;\n  }\n\n  /**\n   * @private\n   */\n  _clearCache() {\n    this._forceClearCache = false;\n    this.__lineWidths = [];\n    this.__lineHeights = [];\n    this.__charBounds = [];\n  }\n\n  /**\n   * Measure a single line given its index. Used to calculate the initial\n   * text bounding box. The values are calculated and stored in __lineWidths cache.\n   * @private\n   * @param {Number} lineIndex line number\n   * @return {Number} Line width\n   */\n  getLineWidth(lineIndex: number): number {\n    if (this.__lineWidths[lineIndex] !== undefined) {\n      return this.__lineWidths[lineIndex];\n    }\n\n    const { width } = this.measureLine(lineIndex);\n    this.__lineWidths[lineIndex] = width;\n    return width;\n  }\n\n  _getWidthOfCharSpacing() {\n    if (this.charSpacing !== 0) {\n      return (this.fontSize * this.charSpacing) / 1000;\n    }\n    return 0;\n  }\n\n  /**\n   * Retrieves the value of property at given character position\n   * @param {Number} lineIndex the line number\n   * @param {Number} charIndex the character number\n   * @param {String} property the property name\n   * @returns the value of 'property'\n   */\n  getValueOfPropertyAt<T extends StylePropertiesType>(\n    lineIndex: number,\n    charIndex: number,\n    property: T\n  ): this[T] {\n    const charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n    return (charStyle[property] ?? this[property]) as this[T];\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _renderTextDecoration(\n    ctx: CanvasRenderingContext2D,\n    type: 'underline' | 'linethrough' | 'overline'\n  ) {\n    if (!this[type] && !this.styleHas(type)) {\n      return;\n    }\n    let topOffset = this._getTopOffset();\n    const leftOffset = this._getLeftOffset(),\n      path = this.path,\n      charSpacing = this._getWidthOfCharSpacing(),\n      offsetY = this.offsets[type];\n\n    for (let i = 0, len = this._textLines.length; i < len; i++) {\n      const heightOfLine = this.getHeightOfLine(i);\n      if (!this[type] && !this.styleHas(type, i)) {\n        topOffset += heightOfLine;\n        continue;\n      }\n      const line = this._textLines[i];\n      const maxHeight = heightOfLine / this.lineHeight;\n      const lineLeftOffset = this._getLineLeftOffset(i);\n      let boxStart = 0;\n      let boxWidth = 0;\n      let lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n      let lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n      let currentDecoration;\n      let currentFill;\n      const top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n      let size = this.getHeightOfChar(i, 0);\n      let dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n      for (let j = 0, jlen = line.length; j < jlen; j++) {\n        const charBox = this.__charBounds[i][j] as Required<GraphemeBBox>;\n        currentDecoration = this.getValueOfPropertyAt(i, j, type);\n        currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n        const currentSize = this.getHeightOfChar(i, j);\n        const currentDy = this.getValueOfPropertyAt(i, j, 'deltaY');\n        if (path && currentDecoration && currentFill) {\n          ctx.save();\n          // bug? verify lastFill is a valid fill here.\n          ctx.fillStyle = lastFill as string;\n          ctx.translate(charBox.renderLeft, charBox.renderTop);\n          ctx.rotate(charBox.angle);\n          ctx.fillRect(\n            -charBox.kernedWidth / 2,\n            offsetY * currentSize + currentDy,\n            charBox.kernedWidth,\n            this.fontSize / 15\n          );\n          ctx.restore();\n        } else if (\n          (currentDecoration !== lastDecoration ||\n            currentFill !== lastFill ||\n            currentSize !== size ||\n            currentDy !== dy) &&\n          boxWidth > 0\n        ) {\n          let drawStart = leftOffset + lineLeftOffset + boxStart;\n          if (this.direction === 'rtl') {\n            drawStart = this.width - drawStart - boxWidth;\n          }\n          if (lastDecoration && lastFill) {\n            // bug? verify lastFill is a valid fill here.\n            ctx.fillStyle = lastFill as string;\n            ctx.fillRect(\n              drawStart,\n              top + offsetY * size + dy,\n              boxWidth,\n              this.fontSize / 15\n            );\n          }\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastDecoration = currentDecoration;\n          lastFill = currentFill;\n          size = currentSize;\n          dy = currentDy;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      let drawStart = leftOffset + lineLeftOffset + boxStart;\n      if (this.direction === 'rtl') {\n        drawStart = this.width - drawStart - boxWidth;\n      }\n      ctx.fillStyle = currentFill as string;\n      currentDecoration &&\n        currentFill &&\n        ctx.fillRect(\n          drawStart,\n          top + offsetY * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15\n        );\n      topOffset += heightOfLine;\n    }\n    // if there is text background color no\n    // other shadows should be casted\n    this._removeShadow(ctx);\n  }\n\n  /**\n   * return font declaration string for canvas context\n   * @param {Object} [styleObject] object\n   * @returns {String} font declaration formatted for canvas context.\n   */\n  _getFontDeclaration(\n    {\n      fontFamily = this.fontFamily,\n      fontStyle = this.fontStyle,\n      fontWeight = this.fontWeight,\n      fontSize = this.fontSize,\n    }: Partial<\n      Pick<\n        TextStyleDeclaration,\n        'fontFamily' | 'fontStyle' | 'fontWeight' | 'fontSize'\n      >\n    > = {},\n    forMeasuring?: boolean\n  ): string {\n    const parsedFontFamily =\n      fontFamily.includes(\"'\") ||\n      fontFamily.includes('\"') ||\n      fontFamily.includes(',') ||\n      FabricText.genericFonts.includes(fontFamily.toLowerCase())\n        ? fontFamily\n        : `\"${fontFamily}\"`;\n    return [\n      fontStyle,\n      fontWeight,\n      `${forMeasuring ? this.CACHE_FONT_SIZE : fontSize}px`,\n      parsedFontFamily,\n    ].join(' ');\n  }\n\n  /**\n   * Renders text instance on a specified context\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    if (!this.visible) {\n      return;\n    }\n    if (\n      this.canvas &&\n      this.canvas.skipOffscreen &&\n      !this.group &&\n      !this.isOnScreen()\n    ) {\n      return;\n    }\n    if (this._forceClearCache) {\n      this.initDimensions();\n    }\n    super.render(ctx);\n  }\n\n  /**\n   * Override this method to customize grapheme splitting\n   * @todo the util `graphemeSplit` needs to be injectable in some way.\n   * is more comfortable to inject the correct util rather than having to override text\n   * in the middle of the prototype chain\n   * @param {string} value\n   * @returns {string[]} array of graphemes\n   */\n  graphemeSplit(value: string): string[] {\n    return graphemeSplit(value);\n  }\n\n  /**\n   * Returns the text as an array of lines.\n   * @param {String} text text to split\n   * @returns  Lines in the text\n   */\n  _splitTextIntoLines(text: string): TextLinesInfo {\n    const lines = text.split(this._reNewline),\n      newLines = new Array<string[]>(lines.length),\n      newLine = ['\\n'];\n    let newText: string[] = [];\n    for (let i = 0; i < lines.length; i++) {\n      newLines[i] = this.graphemeSplit(lines[i]);\n      newText = newText.concat(newLines[i], newLine);\n    }\n    newText.pop();\n    return {\n      _unwrappedLines: newLines,\n      lines: lines,\n      graphemeText: newText,\n      graphemeLines: newLines,\n    };\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return {\n      ...super.toObject([...additionalProps, ...propertiesToInclude] as K[]),\n      styles: stylesToArray(this.styles, this.text),\n      ...(this.path ? { path: this.path.toObject() } : {}),\n    };\n  }\n\n  set(key: string | any, value?: any) {\n    const { textLayoutProperties } = this.constructor as typeof FabricText;\n    super.set(key, value);\n    let needsDims = false;\n    let isAddingPath = false;\n    if (typeof key === 'object') {\n      for (const _key in key) {\n        if (_key === 'path') {\n          this.setPathInfo();\n        }\n        needsDims = needsDims || textLayoutProperties.includes(_key);\n        isAddingPath = isAddingPath || _key === 'path';\n      }\n    } else {\n      needsDims = textLayoutProperties.includes(key);\n      isAddingPath = key === 'path';\n    }\n    if (isAddingPath) {\n      this.setPathInfo();\n    }\n    if (needsDims && this.initialized) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    return this;\n  }\n\n  /**\n   * Returns complexity of an instance\n   * @return {Number} complexity\n   */\n  complexity(): number {\n    return 1;\n  }\n\n  static genericFonts = [\n    'sans-serif',\n    'serif',\n    'cursive',\n    'fantasy',\n    'monospace',\n  ];\n\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricText.fromElement})\n   * @static\n   * @memberOf Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  static ATTRIBUTE_NAMES = SHARED_ATTRIBUTES.concat(\n    'x',\n    'y',\n    'dx',\n    'dy',\n    'font-family',\n    'font-style',\n    'font-weight',\n    'font-size',\n    'letter-spacing',\n    'text-decoration',\n    'text-anchor'\n  );\n\n  /**\n   * Returns FabricText instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf Text\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable,\n    cssRules?: CSSRules\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      FabricText.ATTRIBUTE_NAMES,\n      cssRules\n    );\n\n    const {\n      textAnchor = LEFT as typeof LEFT | typeof CENTER | typeof RIGHT,\n      textDecoration = '',\n      dx = 0,\n      dy = 0,\n      top = 0,\n      left = 0,\n      fontSize = DEFAULT_SVG_FONT_SIZE,\n      strokeWidth = 1,\n      ...restOfOptions\n    } = { ...options, ...parsedAttributes };\n\n    const textContent = (element.textContent || '')\n      .replace(/^\\s+|\\s+$|\\n+/g, '')\n      .replace(/\\s+/g, ' ');\n\n    // this code here is probably the usual issue for SVG center find\n    // this can later looked at again and probably removed.\n\n    const text = new this(textContent, {\n        left: left + dx,\n        top: top + dy,\n        underline: textDecoration.includes('underline'),\n        overline: textDecoration.includes('overline'),\n        linethrough: textDecoration.includes('line-through'),\n        // we initialize this as 0\n        strokeWidth: 0,\n        fontSize,\n        ...restOfOptions,\n      }),\n      textHeightScaleFactor = text.getScaledHeight() / text.height,\n      lineHeightDiff =\n        (text.height + text.strokeWidth) * text.lineHeight - text.height,\n      scaledDiff = lineHeightDiff * textHeightScaleFactor,\n      textHeight = text.getScaledHeight() + scaledDiff;\n\n    let offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (textAnchor === CENTER) {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (textAnchor === RIGHT) {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top:\n        text.top -\n        (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) /\n          text.lineHeight,\n      strokeWidth,\n    });\n    return text;\n  }\n\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns FabricText instance from an object representation\n   * @param {Object} object plain js Object to create an instance from\n   * @returns {Promise<FabricText>}\n   */\n  static fromObject<\n    T extends TOptions<SerializedTextProps>,\n    S extends FabricText\n  >(object: T) {\n    return this._fromObject<S>(\n      {\n        ...object,\n        styles: stylesFromArray(object.styles || {}, object.text),\n      },\n      {\n        extraParam: 'text',\n      }\n    );\n  }\n}\n\napplyMixins(FabricText, [TextSVGExportMixin]);\nclassRegistry.setClass(FabricText);\nclassRegistry.setSVGClass(FabricText);\n","import type { Canvas } from '../../canvas/Canvas';\nimport type {\n  DragEventData,\n  DropEventData,\n  TPointerEvent,\n} from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport type { IText } from './IText';\nimport { setStyle } from '../../util/dom_style';\nimport { cloneDeep } from '../../util/internals/cloneDeep';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { NONE } from '../../constants';\n\n/**\n * #### Dragging IText/Textbox Lifecycle\n * - {@link start} is called from `mousedown` {@link IText#_mouseDownHandler} and determines if dragging should start by testing {@link isPointerOverSelection}\n * - if true `mousedown` {@link IText#_mouseDownHandler} is blocked to keep selection\n * - if the pointer moves, canvas fires numerous mousemove {@link Canvas#_onMouseMove} that we make sure **aren't** prevented ({@link IText#shouldStartDragging}) in order for the window to start a drag session\n * - once/if the session starts canvas calls {@link onDragStart} on the active object to determine if dragging should occur\n * - canvas fires relevant drag events that are handled by the handlers defined in this scope\n * - {@link end} is called from `mouseup` {@link IText#mouseUpHandler}, blocking IText default click behavior\n * - in case the drag session didn't occur, {@link end} handles a click, since logic to do so was blocked during `mousedown`\n */\nexport class DraggableTextDelegate {\n  readonly target: IText;\n  private __mouseDownInPlace = false;\n  private __dragStartFired = false;\n  private __isDraggingOver = false;\n  private __dragStartSelection?: {\n    selectionStart: number;\n    selectionEnd: number;\n  };\n  private __dragImageDisposer?: VoidFunction;\n  private _dispose?: () => void;\n\n  constructor(target: IText) {\n    this.target = target;\n    const disposers = [\n      this.target.on('dragenter', this.dragEnterHandler.bind(this)),\n      this.target.on('dragover', this.dragOverHandler.bind(this)),\n      this.target.on('dragleave', this.dragLeaveHandler.bind(this)),\n      this.target.on('dragend', this.dragEndHandler.bind(this)),\n      this.target.on('drop', this.dropHandler.bind(this)),\n    ];\n    this._dispose = () => {\n      disposers.forEach((d) => d());\n      this._dispose = undefined;\n    };\n  }\n\n  isPointerOverSelection(e: TPointerEvent) {\n    const target = this.target;\n    const newSelection = target.getSelectionStartFromPointer(e);\n    return (\n      target.isEditing &&\n      newSelection >= target.selectionStart &&\n      newSelection <= target.selectionEnd &&\n      target.selectionStart < target.selectionEnd\n    );\n  }\n\n  /**\n   * @public override this method to disable dragging and default to mousedown logic\n   */\n  start(e: TPointerEvent) {\n    return (this.__mouseDownInPlace = this.isPointerOverSelection(e));\n  }\n\n  /**\n   * @public override this method to disable dragging without discarding selection\n   */\n  isActive() {\n    return this.__mouseDownInPlace;\n  }\n\n  /**\n   * Ends interaction and sets cursor in case of a click\n   * @returns true if was active\n   */\n  end(e: TPointerEvent) {\n    const active = this.isActive();\n    if (active && !this.__dragStartFired) {\n      // mousedown has been blocked since `active` is true => cursor has not been set.\n      // `__dragStartFired` is false => dragging didn't occur, pointer didn't move and is over selection.\n      // meaning this is actually a click, `active` is a false positive.\n      this.target.setCursorByClick(e);\n      this.target.initDelayedCursor(true);\n    }\n    this.__mouseDownInPlace = false;\n    this.__dragStartFired = false;\n    this.__isDraggingOver = false;\n    return active;\n  }\n\n  getDragStartSelection() {\n    return this.__dragStartSelection;\n  }\n\n  /**\n   * Override to customize the drag image\n   * https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/setDragImage\n   */\n  setDragImage(\n    e: DragEvent,\n    {\n      selectionStart,\n      selectionEnd,\n    }: {\n      selectionStart: number;\n      selectionEnd: number;\n    }\n  ) {\n    const target = this.target;\n    const canvas = target.canvas!;\n    const flipFactor = new Point(target.flipX ? -1 : 1, target.flipY ? -1 : 1);\n    const boundaries = target._getCursorBoundaries(selectionStart);\n    const selectionPosition = new Point(\n      boundaries.left + boundaries.leftOffset,\n      boundaries.top + boundaries.topOffset\n    ).multiply(flipFactor);\n    const pos = selectionPosition.transform(target.calcTransformMatrix());\n    const pointer = canvas.getScenePoint(e);\n    const diff = pointer.subtract(pos);\n    const retinaScaling = target.getCanvasRetinaScaling();\n    const bbox = target.getBoundingRect();\n    const correction = pos.subtract(new Point(bbox.left, bbox.top));\n    const vpt = canvas.viewportTransform;\n    const offset = correction.add(diff).transform(vpt, true);\n    //  prepare instance for drag image snapshot by making all non selected text invisible\n    const bgc = target.backgroundColor;\n    const styles = cloneDeep(target.styles);\n    target.backgroundColor = '';\n    const styleOverride = {\n      stroke: 'transparent',\n      fill: 'transparent',\n      textBackgroundColor: 'transparent',\n    };\n    target.setSelectionStyles(styleOverride, 0, selectionStart);\n    target.setSelectionStyles(styleOverride, selectionEnd, target.text.length);\n    target.dirty = true;\n    const dragImage = target.toCanvasElement({\n      enableRetinaScaling: canvas.enableRetinaScaling,\n      viewportTransform: true,\n    });\n    // restore values\n    target.backgroundColor = bgc;\n    target.styles = styles;\n    target.dirty = true;\n    //  position drag image offscreen\n    setStyle(dragImage, {\n      position: 'fixed',\n      left: `${-dragImage.width}px`,\n      border: NONE,\n      width: `${dragImage.width / retinaScaling}px`,\n      height: `${dragImage.height / retinaScaling}px`,\n    });\n    this.__dragImageDisposer && this.__dragImageDisposer();\n    this.__dragImageDisposer = () => {\n      dragImage.remove();\n    };\n    getDocumentFromElement(\n      (e.target || this.target.hiddenTextarea)! as HTMLElement\n    ).body.appendChild(dragImage);\n    e.dataTransfer?.setDragImage(dragImage, offset.x, offset.y);\n  }\n\n  /**\n   * @returns {boolean} determines whether {@link target} should/shouldn't become a drag source\n   */\n  onDragStart(e: DragEvent): boolean {\n    this.__dragStartFired = true;\n    const target = this.target;\n    const active = this.isActive();\n    if (active && e.dataTransfer) {\n      const selection = (this.__dragStartSelection = {\n        selectionStart: target.selectionStart,\n        selectionEnd: target.selectionEnd,\n      });\n      const value = target._text\n        .slice(selection.selectionStart, selection.selectionEnd)\n        .join('');\n      const data = { text: target.text, value, ...selection };\n      e.dataTransfer.setData('text/plain', value);\n      e.dataTransfer.setData(\n        'application/fabric',\n        JSON.stringify({\n          value: value,\n          styles: target.getSelectionStyles(\n            selection.selectionStart,\n            selection.selectionEnd,\n            true\n          ),\n        })\n      );\n      e.dataTransfer.effectAllowed = 'copyMove';\n      this.setDragImage(e, data);\n    }\n    target.abortCursorAnimation();\n    return active;\n  }\n\n  /**\n   * use {@link targetCanDrop} to respect overriding\n   * @returns {boolean} determines whether {@link target} should/shouldn't become a drop target\n   */\n  canDrop(e: DragEvent): boolean {\n    if (\n      this.target.editable &&\n      !this.target.getActiveControl() &&\n      !e.defaultPrevented\n    ) {\n      if (this.isActive() && this.__dragStartSelection) {\n        //  drag source trying to drop over itself\n        //  allow dropping only outside of drag start selection\n        const index = this.target.getSelectionStartFromPointer(e);\n        const dragStartSelection = this.__dragStartSelection;\n        return (\n          index < dragStartSelection.selectionStart ||\n          index > dragStartSelection.selectionEnd\n        );\n      }\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * in order to respect overriding {@link IText#canDrop} we call that instead of calling {@link canDrop} directly\n   */\n  protected targetCanDrop(e: DragEvent) {\n    return this.target.canDrop(e);\n  }\n\n  dragEnterHandler({ e }: DragEventData) {\n    const canDrop = this.targetCanDrop(e);\n    if (!this.__isDraggingOver && canDrop) {\n      this.__isDraggingOver = true;\n    }\n  }\n\n  dragOverHandler(ev: DragEventData) {\n    const { e } = ev;\n    const canDrop = this.targetCanDrop(e);\n    if (!this.__isDraggingOver && canDrop) {\n      this.__isDraggingOver = true;\n    } else if (this.__isDraggingOver && !canDrop) {\n      //  drop state has changed\n      this.__isDraggingOver = false;\n    }\n    if (this.__isDraggingOver) {\n      //  can be dropped, inform browser\n      e.preventDefault();\n      //  inform event subscribers\n      ev.canDrop = true;\n      ev.dropTarget = this.target;\n    }\n  }\n\n  dragLeaveHandler() {\n    if (this.__isDraggingOver || this.isActive()) {\n      this.__isDraggingOver = false;\n    }\n  }\n\n  /**\n   * Override the `text/plain | application/fabric` types of {@link DragEvent#dataTransfer}\n   * in order to change the drop value or to customize styling respectively, by listening to the `drop:before` event\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#performing_a_drop\n   */\n  dropHandler(ev: DropEventData) {\n    const { e } = ev;\n    const didDrop = e.defaultPrevented;\n    this.__isDraggingOver = false;\n    // inform browser that the drop has been accepted\n    e.preventDefault();\n    let insert = e.dataTransfer?.getData('text/plain');\n    if (insert && !didDrop) {\n      const target = this.target;\n      const canvas = target.canvas!;\n      let insertAt = target.getSelectionStartFromPointer(e);\n      const { styles } = (\n        e.dataTransfer!.types.includes('application/fabric')\n          ? JSON.parse(e.dataTransfer!.getData('application/fabric'))\n          : {}\n      ) as { styles: TextStyleDeclaration[] };\n      const trailing = insert[Math.max(0, insert.length - 1)];\n      const selectionStartOffset = 0;\n      //  drag and drop in same instance\n      if (this.__dragStartSelection) {\n        const selectionStart = this.__dragStartSelection.selectionStart;\n        const selectionEnd = this.__dragStartSelection.selectionEnd;\n        if (insertAt > selectionStart && insertAt <= selectionEnd) {\n          insertAt = selectionStart;\n        } else if (insertAt > selectionEnd) {\n          insertAt -= selectionEnd - selectionStart;\n        }\n        target.removeChars(selectionStart, selectionEnd);\n        // prevent `dragend` from handling event\n        delete this.__dragStartSelection;\n      }\n      //  remove redundant line break\n      if (\n        target._reNewline.test(trailing) &&\n        (target._reNewline.test(target._text[insertAt]) ||\n          insertAt === target._text.length)\n      ) {\n        insert = insert.trimEnd();\n      }\n      //  inform subscribers\n      ev.didDrop = true;\n      ev.dropTarget = target;\n      //  finalize\n      target.insertChars(insert, styles, insertAt);\n      // can this part be moved in an outside event? andrea to check.\n      canvas.setActiveObject(target);\n      target.enterEditing(e);\n      target.selectionStart = Math.min(\n        insertAt + selectionStartOffset,\n        target._text.length\n      );\n      target.selectionEnd = Math.min(\n        target.selectionStart + insert.length,\n        target._text.length\n      );\n      target.hiddenTextarea!.value = target.text;\n      target._updateTextarea();\n      target.hiddenTextarea!.focus();\n      target.fire('changed', {\n        index: insertAt + selectionStartOffset,\n        action: 'drop',\n      });\n      canvas.fire('text:changed', { target });\n      canvas.contextTopDirty = true;\n      canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * fired only on the drag source after drop (if occurred)\n   * handle changes to the drag source in case of a drop on another object or a cancellation\n   * https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Drag_operations#finishing_a_drag\n   */\n  dragEndHandler({ e }: DragEventData) {\n    if (this.isActive() && this.__dragStartFired) {\n      //  once the drop event finishes we check if we need to change the drag source\n      //  if the drag source received the drop we bail out since the drop handler has already handled logic\n      if (this.__dragStartSelection) {\n        const target = this.target;\n        const canvas = this.target.canvas!;\n        const { selectionStart, selectionEnd } = this.__dragStartSelection;\n        const dropEffect = e.dataTransfer?.dropEffect || NONE;\n        if (dropEffect === NONE) {\n          // pointer is back over selection\n          target.selectionStart = selectionStart;\n          target.selectionEnd = selectionEnd;\n          target._updateTextarea();\n          target.hiddenTextarea!.focus();\n        } else {\n          target.clearContextTop();\n          if (dropEffect === 'move') {\n            target.removeChars(selectionStart, selectionEnd);\n            target.selectionStart = target.selectionEnd = selectionStart;\n            target.hiddenTextarea &&\n              (target.hiddenTextarea.value = target.text);\n            target._updateTextarea();\n            target.fire('changed', {\n              index: selectionStart,\n              action: 'dragend',\n            });\n            canvas.fire('text:changed', { target });\n            canvas.requestRenderAll();\n          }\n          target.exitEditing();\n        }\n      }\n    }\n\n    this.__dragImageDisposer && this.__dragImageDisposer();\n    delete this.__dragImageDisposer;\n    delete this.__dragStartSelection;\n    this.__isDraggingOver = false;\n  }\n\n  dispose() {\n    this._dispose && this._dispose();\n  }\n}\n","import type {\n  ObjectEvents,\n  TPointerEvent,\n  TPointerEventInfo,\n} from '../../EventTypeDefs';\nimport { Point } from '../../Point';\nimport type { FabricObject } from '../Object/FabricObject';\nimport { FabricText } from '../Text/Text';\nimport { animate } from '../../util/animation/animate';\nimport type { TOnAnimationChangeCallback } from '../../util/animation/types';\nimport type { ValueAnimation } from '../../util/animation/ValueAnimation';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\nimport type { SerializedTextProps, TextProps } from '../Text/Text';\nimport type { TOptions } from '../../typedefs';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { LEFT, RIGHT, reNewline } from '../../constants';\nimport type { IText } from './IText';\n\n/**\n *  extend this regex to support non english languages\n *\n *  - ` `      Matches a SPACE character (char code 32).\n *  - `\\n`     Matches a LINE FEED character (char code 10).\n *  - `\\.`     Matches a \".\" character (char code 46).\n *  - `,`      Matches a \",\" character (char code 44).\n *  - `;`      Matches a \";\" character (char code 59).\n *  - `!`      Matches a \"!\" character (char code 33).\n *  - `\\?`     Matches a \"?\" character (char code 63).\n *  - `\\-`     Matches a \"-\" character (char code 45).\n */\n// eslint-disable-next-line no-useless-escape\nconst reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\nexport type ITextEvents = ObjectEvents & {\n  'selection:changed': never;\n  changed: never | { index: number; action: string };\n  tripleclick: TPointerEventInfo;\n  'editing:entered': never | { e: TPointerEvent };\n  'editing:exited': never;\n};\n\nexport abstract class ITextBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents\n> extends FabricText<Props, SProps, EventSpec> {\n  declare abstract isEditing: boolean;\n  declare abstract cursorDelay: number;\n  declare abstract selectionStart: number;\n  declare abstract selectionEnd: number;\n  declare abstract cursorDuration: number;\n  declare abstract editable: boolean;\n  declare abstract editingBorderColor: string;\n\n  declare abstract compositionStart: number;\n  declare abstract compositionEnd: number;\n\n  declare abstract hiddenTextarea: HTMLTextAreaElement | null;\n\n  /**\n   * Helps determining when the text is in composition, so that the cursor\n   * rendering is altered.\n   */\n  protected declare inCompositionMode: boolean;\n\n  protected declare _reSpace: RegExp;\n  private declare _currentTickState?: ValueAnimation;\n  private declare _currentTickCompleteState?: ValueAnimation;\n  protected _currentCursorOpacity = 1;\n  private declare _textBeforeEdit: string;\n  protected declare __selectionStartOnMouseDown: number;\n\n  protected declare selected: boolean;\n  protected declare cursorOffsetCache: { left?: number; top?: number };\n  protected declare _savedProps?: {\n    hasControls: boolean;\n    borderColor: string;\n    lockMovementX: boolean;\n    lockMovementY: boolean;\n    selectable: boolean;\n    hoverCursor: CSSStyleDeclaration['cursor'] | null;\n    defaultCursor?: CSSStyleDeclaration['cursor'];\n    moveCursor?: CSSStyleDeclaration['cursor'];\n  };\n  protected declare _selectionDirection: 'left' | 'right' | null;\n\n  abstract initHiddenTextarea(): void;\n  abstract _fireSelectionChanged(): void;\n  abstract renderCursorOrSelection(): void;\n  abstract getSelectionStartFromPointer(e: TPointerEvent): number;\n  abstract _getCursorBoundaries(\n    index: number,\n    skipCaching?: boolean\n  ): {\n    left: number;\n    top: number;\n    leftOffset: number;\n    topOffset: number;\n  };\n\n  /**\n   * Initializes all the interactive behavior of IText\n   */\n  initBehavior() {\n    this._tick = this._tick.bind(this);\n    this._onTickComplete = this._onTickComplete.bind(this);\n    this.updateSelectionOnMouseMove =\n      this.updateSelectionOnMouseMove.bind(this);\n  }\n\n  onDeselect(options?: { e?: TPointerEvent; object?: FabricObject }) {\n    this.isEditing && this.exitEditing();\n    this.selected = false;\n    return super.onDeselect(options);\n  }\n\n  /**\n   * @private\n   */\n  _animateCursor({\n    toValue,\n    duration,\n    delay,\n    onComplete,\n  }: {\n    toValue: number;\n    duration: number;\n    delay?: number;\n    onComplete?: TOnAnimationChangeCallback<number, void>;\n  }) {\n    return animate({\n      startValue: this._currentCursorOpacity,\n      endValue: toValue,\n      duration,\n      delay,\n      onComplete,\n      abort: () => {\n        return (\n          !this.canvas ||\n          // we do not want to animate a selection, only cursor\n          this.selectionStart !== this.selectionEnd\n        );\n      },\n      onChange: (value) => {\n        this._currentCursorOpacity = value;\n        this.renderCursorOrSelection();\n      },\n    });\n  }\n\n  private _tick(delay?: number) {\n    this._currentTickState = this._animateCursor({\n      toValue: 1,\n      duration: this.cursorDuration,\n      delay,\n      onComplete: this._onTickComplete,\n    });\n  }\n\n  private _onTickComplete() {\n    this._currentTickCompleteState?.abort();\n    this._currentTickCompleteState = this._animateCursor({\n      toValue: 0,\n      duration: this.cursorDuration / 2,\n      delay: 100,\n      onComplete: this._tick,\n    });\n  }\n\n  /**\n   * Initializes delayed cursor\n   */\n  initDelayedCursor(restart?: boolean) {\n    this.abortCursorAnimation();\n    this._tick(restart ? 0 : this.cursorDelay);\n  }\n\n  /**\n   * Aborts cursor animation, clears all timeouts and clear textarea context if necessary\n   */\n  abortCursorAnimation() {\n    let shouldClear = false;\n    [this._currentTickState, this._currentTickCompleteState].forEach(\n      (cursorAnimation) => {\n        if (cursorAnimation && !cursorAnimation.isDone()) {\n          shouldClear = true;\n          cursorAnimation.abort();\n        }\n      }\n    );\n\n    this._currentCursorOpacity = 1;\n\n    //  make sure we clear context even if instance is not editing\n    if (shouldClear) {\n      this.clearContextTop();\n    }\n  }\n\n  restartCursorIfNeeded() {\n    if (\n      [this._currentTickState, this._currentTickCompleteState].some(\n        (cursorAnimation) => !cursorAnimation || cursorAnimation.isDone()\n      )\n    ) {\n      this.initDelayedCursor();\n    }\n  }\n\n  /**\n   * Selects entire text\n   */\n  selectAll() {\n    this.selectionStart = 0;\n    this.selectionEnd = this._text.length;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    return this;\n  }\n\n  /**\n   * Returns selected text\n   * @return {String}\n   */\n  getSelectedText(): string {\n    return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n  }\n\n  /**\n   * Find new selection index representing start of current word according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findWordBoundaryLeft(startFrom: number): number {\n    let offset = 0,\n      index = startFrom - 1;\n\n    // remove space before cursor first\n    if (this._reSpace.test(this._text[index])) {\n      while (this._reSpace.test(this._text[index])) {\n        offset++;\n        index--;\n      }\n    }\n    while (/\\S/.test(this._text[index]) && index > -1) {\n      offset++;\n      index--;\n    }\n\n    return startFrom - offset;\n  }\n\n  /**\n   * Find new selection index representing end of current word according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findWordBoundaryRight(startFrom: number): number {\n    let offset = 0,\n      index = startFrom;\n\n    // remove space after cursor first\n    if (this._reSpace.test(this._text[index])) {\n      while (this._reSpace.test(this._text[index])) {\n        offset++;\n        index++;\n      }\n    }\n    while (/\\S/.test(this._text[index]) && index < this._text.length) {\n      offset++;\n      index++;\n    }\n\n    return startFrom + offset;\n  }\n\n  /**\n   * Find new selection index representing start of current line according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findLineBoundaryLeft(startFrom: number): number {\n    let offset = 0,\n      index = startFrom - 1;\n\n    while (!/\\n/.test(this._text[index]) && index > -1) {\n      offset++;\n      index--;\n    }\n\n    return startFrom - offset;\n  }\n\n  /**\n   * Find new selection index representing end of current line according to current selection index\n   * @param {Number} startFrom Current selection index\n   * @return {Number} New selection index\n   */\n  findLineBoundaryRight(startFrom: number): number {\n    let offset = 0,\n      index = startFrom;\n\n    while (!/\\n/.test(this._text[index]) && index < this._text.length) {\n      offset++;\n      index++;\n    }\n\n    return startFrom + offset;\n  }\n\n  /**\n   * Finds index corresponding to beginning or end of a word\n   * @param {Number} selectionStart Index of a character\n   * @param {Number} direction 1 or -1\n   * @return {Number} Index of the beginning or end of a word\n   */\n  searchWordBoundary(selectionStart: number, direction: 1 | -1): number {\n    const text = this._text;\n    // if we land on a space we move the cursor backwards\n    // if we are searching boundary end we move the cursor backwards ONLY if we don't land on a line break\n    let index =\n        selectionStart > 0 &&\n        this._reSpace.test(text[selectionStart]) &&\n        (direction === -1 || !reNewline.test(text[selectionStart - 1]))\n          ? selectionStart - 1\n          : selectionStart,\n      _char = text[index];\n    while (index > 0 && index < text.length && !reNonWord.test(_char)) {\n      index += direction;\n      _char = text[index];\n    }\n    if (direction === -1 && reNonWord.test(_char)) {\n      index++;\n    }\n    return index;\n  }\n\n  /**\n   * Selects a word based on the index\n   * @param {Number} selectionStart Index of a character\n   */\n  selectWord(selectionStart: number) {\n    selectionStart = selectionStart || this.selectionStart;\n    // search backwards\n    const newSelectionStart = this.searchWordBoundary(selectionStart, -1),\n      // search forward\n      newSelectionEnd = Math.max(\n        newSelectionStart,\n        this.searchWordBoundary(selectionStart, 1)\n      );\n\n    this.selectionStart = newSelectionStart;\n    this.selectionEnd = newSelectionEnd;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * Selects a line based on the index\n   * @param {Number} selectionStart Index of a character\n   */\n  selectLine(selectionStart: number) {\n    selectionStart = selectionStart || this.selectionStart;\n    const newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n      newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n    this.selectionStart = newSelectionStart;\n    this.selectionEnd = newSelectionEnd;\n    this._fireSelectionChanged();\n    this._updateTextarea();\n    return this;\n  }\n\n  /**\n   * Enters editing state\n   */\n  enterEditing(e?: TPointerEvent) {\n    if (this.isEditing || !this.editable) {\n      return;\n    }\n    if (this.canvas) {\n      this.canvas.calcOffset();\n      this.canvas.textEditingManager.exitTextEditing();\n    }\n\n    this.isEditing = true;\n\n    this.initHiddenTextarea();\n    this.hiddenTextarea!.focus();\n    this.hiddenTextarea!.value = this.text;\n    this._updateTextarea();\n    this._saveEditingProps();\n    this._setEditingProps();\n    this._textBeforeEdit = this.text;\n\n    this._tick();\n    this.fire('editing:entered', e ? { e } : undefined);\n    this._fireSelectionChanged();\n    if (this.canvas) {\n      // @ts-expect-error in reality it is an IText instance\n      this.canvas.fire('text:editing:entered', { target: this, e });\n      this.canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * called by {@link Canvas#textEditingManager}\n   */\n  updateSelectionOnMouseMove(e: TPointerEvent) {\n    if (this.getActiveControl()) {\n      return;\n    }\n\n    const el = this.hiddenTextarea!;\n    // regain focus\n    getDocumentFromElement(el).activeElement !== el && el.focus();\n\n    const newSelectionStart = this.getSelectionStartFromPointer(e),\n      currentStart = this.selectionStart,\n      currentEnd = this.selectionEnd;\n    if (\n      (newSelectionStart !== this.__selectionStartOnMouseDown ||\n        currentStart === currentEnd) &&\n      (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n    ) {\n      return;\n    }\n    if (newSelectionStart > this.__selectionStartOnMouseDown) {\n      this.selectionStart = this.__selectionStartOnMouseDown;\n      this.selectionEnd = newSelectionStart;\n    } else {\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = this.__selectionStartOnMouseDown;\n    }\n    if (\n      this.selectionStart !== currentStart ||\n      this.selectionEnd !== currentEnd\n    ) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _setEditingProps() {\n    this.hoverCursor = 'text';\n\n    if (this.canvas) {\n      this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n    }\n\n    this.borderColor = this.editingBorderColor;\n    this.hasControls = this.selectable = false;\n    this.lockMovementX = this.lockMovementY = true;\n  }\n\n  /**\n   * convert from textarea to grapheme indexes\n   */\n  fromStringToGraphemeSelection(start: number, end: number, text: string) {\n    const smallerTextStart = text.slice(0, start),\n      graphemeStart = this.graphemeSplit(smallerTextStart).length;\n    if (start === end) {\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n    }\n    const smallerTextEnd = text.slice(start, end),\n      graphemeEnd = this.graphemeSplit(smallerTextEnd).length;\n    return {\n      selectionStart: graphemeStart,\n      selectionEnd: graphemeStart + graphemeEnd,\n    };\n  }\n\n  /**\n   * convert from fabric to textarea values\n   */\n  fromGraphemeToStringSelection(\n    start: number,\n    end: number,\n    graphemes: string[]\n  ) {\n    const smallerTextStart = graphemes.slice(0, start),\n      graphemeStart = smallerTextStart.join('').length;\n    if (start === end) {\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n    }\n    const smallerTextEnd = graphemes.slice(start, end),\n      graphemeEnd = smallerTextEnd.join('').length;\n    return {\n      selectionStart: graphemeStart,\n      selectionEnd: graphemeStart + graphemeEnd,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _updateTextarea() {\n    this.cursorOffsetCache = {};\n    if (!this.hiddenTextarea) {\n      return;\n    }\n    if (!this.inCompositionMode) {\n      const newSelection = this.fromGraphemeToStringSelection(\n        this.selectionStart,\n        this.selectionEnd,\n        this._text\n      );\n      this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n      this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n    }\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * @private\n   */\n  updateFromTextArea() {\n    if (!this.hiddenTextarea) {\n      return;\n    }\n    this.cursorOffsetCache = {};\n    const textarea = this.hiddenTextarea;\n    this.text = textarea.value;\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    const newSelection = this.fromStringToGraphemeSelection(\n      textarea.selectionStart,\n      textarea.selectionEnd,\n      textarea.value\n    );\n    this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n    if (!this.inCompositionMode) {\n      this.selectionStart = newSelection.selectionStart;\n    }\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * @private\n   */\n  updateTextareaPosition() {\n    if (this.selectionStart === this.selectionEnd) {\n      const style = this._calcTextareaPosition();\n      this.hiddenTextarea!.style.left = style.left;\n      this.hiddenTextarea!.style.top = style.top;\n    }\n  }\n\n  /**\n   * @private\n   * @return {Object} style contains style for hiddenTextarea\n   */\n  _calcTextareaPosition() {\n    if (!this.canvas) {\n      return { left: '1px', top: '1px' };\n    }\n    const desiredPosition = this.inCompositionMode\n        ? this.compositionStart\n        : this.selectionStart,\n      boundaries = this._getCursorBoundaries(desiredPosition),\n      cursorLocation = this.get2DCursorLocation(desiredPosition),\n      lineIndex = cursorLocation.lineIndex,\n      charIndex = cursorLocation.charIndex,\n      charHeight =\n        this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') *\n        this.lineHeight,\n      leftOffset = boundaries.leftOffset,\n      retinaScaling = this.getCanvasRetinaScaling(),\n      upperCanvas = this.canvas.upperCanvasEl,\n      upperCanvasWidth = upperCanvas.width / retinaScaling,\n      upperCanvasHeight = upperCanvas.height / retinaScaling,\n      maxWidth = upperCanvasWidth - charHeight,\n      maxHeight = upperCanvasHeight - charHeight;\n\n    const p = new Point(\n      boundaries.left + leftOffset,\n      boundaries.top + boundaries.topOffset + charHeight\n    )\n      .transform(this.calcTransformMatrix())\n      .transform(this.canvas.viewportTransform)\n      .multiply(\n        new Point(\n          upperCanvas.clientWidth / upperCanvasWidth,\n          upperCanvas.clientHeight / upperCanvasHeight\n        )\n      );\n\n    if (p.x < 0) {\n      p.x = 0;\n    }\n    if (p.x > maxWidth) {\n      p.x = maxWidth;\n    }\n    if (p.y < 0) {\n      p.y = 0;\n    }\n    if (p.y > maxHeight) {\n      p.y = maxHeight;\n    }\n\n    // add canvas offset on document\n    p.x += this.canvas._offset.left;\n    p.y += this.canvas._offset.top;\n\n    return {\n      left: `${p.x}px`,\n      top: `${p.y}px`,\n      fontSize: `${charHeight}px`,\n      charHeight: charHeight,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _saveEditingProps() {\n    this._savedProps = {\n      hasControls: this.hasControls,\n      borderColor: this.borderColor,\n      lockMovementX: this.lockMovementX,\n      lockMovementY: this.lockMovementY,\n      hoverCursor: this.hoverCursor,\n      selectable: this.selectable,\n      defaultCursor: this.canvas && this.canvas.defaultCursor,\n      moveCursor: this.canvas && this.canvas.moveCursor,\n    };\n  }\n\n  /**\n   * @private\n   */\n  _restoreEditingProps() {\n    if (!this._savedProps) {\n      return;\n    }\n\n    this.hoverCursor = this._savedProps.hoverCursor;\n    this.hasControls = this._savedProps.hasControls;\n    this.borderColor = this._savedProps.borderColor;\n    this.selectable = this._savedProps.selectable;\n    this.lockMovementX = this._savedProps.lockMovementX;\n    this.lockMovementY = this._savedProps.lockMovementY;\n\n    if (this.canvas) {\n      this.canvas.defaultCursor =\n        this._savedProps.defaultCursor || this.canvas.defaultCursor;\n      this.canvas.moveCursor =\n        this._savedProps.moveCursor || this.canvas.moveCursor;\n    }\n\n    delete this._savedProps;\n  }\n\n  /**\n   * runs the actual logic that exits from editing state, see {@link exitEditing}\n   */\n  protected _exitEditing() {\n    const hiddenTextarea = this.hiddenTextarea;\n    this.selected = false;\n    this.isEditing = false;\n\n    if (hiddenTextarea) {\n      hiddenTextarea.blur && hiddenTextarea.blur();\n      hiddenTextarea.parentNode &&\n        hiddenTextarea.parentNode.removeChild(hiddenTextarea);\n    }\n    this.hiddenTextarea = null;\n    this.abortCursorAnimation();\n    this.selectionStart !== this.selectionEnd && this.clearContextTop();\n  }\n\n  /**\n   * Exits from editing state and fires relevant events\n   */\n  exitEditing() {\n    const isTextChanged = this._textBeforeEdit !== this.text;\n    this._exitEditing();\n    this.selectionEnd = this.selectionStart;\n    this._restoreEditingProps();\n    if (this._forceClearCache) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this.fire('editing:exited');\n    isTextChanged && this.fire('modified');\n    if (this.canvas) {\n      this.canvas.fire('text:editing:exited', {\n        target: this as unknown as IText,\n      });\n      isTextChanged && this.canvas.fire('object:modified', { target: this });\n    }\n    return this;\n  }\n\n  /**\n   * @private\n   */\n  _removeExtraneousStyles() {\n    for (const prop in this.styles) {\n      if (!this._textLines[prop as unknown as number]) {\n        delete this.styles[prop];\n      }\n    }\n  }\n\n  /**\n   * remove and reflow a style block from start to end.\n   * @param {Number} start linear start position for removal (included in removal)\n   * @param {Number} end linear end position for removal ( excluded from removal )\n   */\n  removeStyleFromTo(start: number, end: number) {\n    const { lineIndex: lineStart, charIndex: charStart } =\n        this.get2DCursorLocation(start, true),\n      { lineIndex: lineEnd, charIndex: charEnd } = this.get2DCursorLocation(\n        end,\n        true\n      );\n    if (lineStart !== lineEnd) {\n      // step1 remove the trailing of lineStart\n      if (this.styles[lineStart]) {\n        for (\n          let i = charStart;\n          i < this._unwrappedTextLines[lineStart].length;\n          i++\n        ) {\n          delete this.styles[lineStart][i];\n        }\n      }\n      // step2 move the trailing of lineEnd to lineStart if needed\n      if (this.styles[lineEnd]) {\n        for (\n          let i = charEnd;\n          i < this._unwrappedTextLines[lineEnd].length;\n          i++\n        ) {\n          const styleObj = this.styles[lineEnd][i];\n          if (styleObj) {\n            this.styles[lineStart] || (this.styles[lineStart] = {});\n            this.styles[lineStart][charStart + i - charEnd] = styleObj;\n          }\n        }\n      }\n      // step3 detects lines will be completely removed.\n      for (let i = lineStart + 1; i <= lineEnd; i++) {\n        delete this.styles[i];\n      }\n      // step4 shift remaining lines.\n      this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n    } else {\n      // remove and shift left on the same line\n      if (this.styles[lineStart]) {\n        const styleObj = this.styles[lineStart];\n        const diff = charEnd - charStart;\n        for (let i = charStart; i < charEnd; i++) {\n          delete styleObj[i];\n        }\n        for (const char in this.styles[lineStart]) {\n          const numericChar = parseInt(char, 10);\n          if (numericChar >= charEnd) {\n            styleObj[numericChar - diff] = styleObj[char];\n            delete styleObj[char];\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Shifts line styles up or down\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} offset Can any number?\n   */\n  shiftLineStyles(lineIndex: number, offset: number) {\n    const clonedStyles = Object.assign({}, this.styles);\n    for (const line in this.styles) {\n      const numericLine = parseInt(line, 10);\n      if (numericLine > lineIndex) {\n        this.styles[numericLine + offset] = clonedStyles[numericLine];\n        if (!clonedStyles[numericLine - offset]) {\n          delete this.styles[numericLine];\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle insertion of more consecutive style lines for when one or more\n   * newlines gets added to the text. Since current style needs to be shifted\n   * first we shift the current style of the number lines needed, then we add\n   * new lines from the last to the first.\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} charIndex Index of a char\n   * @param {Number} qty number of lines to add\n   * @param {Array} copiedStyle Array of objects styles\n   */\n  insertNewlineStyleObject(\n    lineIndex: number,\n    charIndex: number,\n    qty: number,\n    copiedStyle?: { [index: number]: TextStyleDeclaration }\n  ) {\n    const newLineStyles: { [index: number]: TextStyleDeclaration } = {};\n    const originalLineLength = this._unwrappedTextLines[lineIndex].length;\n    const isEndOfLine = originalLineLength === charIndex;\n\n    let someStyleIsCarryingOver = false;\n    qty || (qty = 1);\n    this.shiftLineStyles(lineIndex, qty);\n    const currentCharStyle = this.styles[lineIndex]\n      ? this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1]\n      : undefined;\n\n    // we clone styles of all chars\n    // after cursor onto the current line\n    for (const index in this.styles[lineIndex]) {\n      const numIndex = parseInt(index, 10);\n      if (numIndex >= charIndex) {\n        someStyleIsCarryingOver = true;\n        newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n        // remove lines from the previous line since they're on a new line now\n        if (!(isEndOfLine && charIndex === 0)) {\n          delete this.styles[lineIndex][index];\n        }\n      }\n    }\n    let styleCarriedOver = false;\n    if (someStyleIsCarryingOver && !isEndOfLine) {\n      // if is end of line, the extra style we copied\n      // is probably not something we want\n      this.styles[lineIndex + qty] = newLineStyles;\n      styleCarriedOver = true;\n    }\n    if (styleCarriedOver || originalLineLength > charIndex) {\n      // skip the last line of since we already prepared it.\n      // or contains text without style that we don't want to style\n      // just because it changed lines\n      qty--;\n    }\n    // for the all the lines or all the other lines\n    // we clone current char style onto the next (otherwise empty) line\n    while (qty > 0) {\n      if (copiedStyle && copiedStyle[qty - 1]) {\n        this.styles[lineIndex + qty] = {\n          0: { ...copiedStyle[qty - 1] },\n        };\n      } else if (currentCharStyle) {\n        this.styles[lineIndex + qty] = {\n          0: { ...currentCharStyle },\n        };\n      } else {\n        delete this.styles[lineIndex + qty];\n      }\n      qty--;\n    }\n    this._forceClearCache = true;\n  }\n\n  /**\n   * Inserts style object for a given line/char index\n   * @param {Number} lineIndex Index of a line\n   * @param {Number} charIndex Index of a char\n   * @param {Number} quantity number Style object to insert, if given\n   * @param {Array} copiedStyle array of style objects\n   */\n  insertCharStyleObject(\n    lineIndex: number,\n    charIndex: number,\n    quantity: number,\n    copiedStyle?: TextStyleDeclaration[]\n  ) {\n    if (!this.styles) {\n      this.styles = {};\n    }\n    const currentLineStyles = this.styles[lineIndex],\n      currentLineStylesCloned = currentLineStyles\n        ? { ...currentLineStyles }\n        : {};\n\n    quantity || (quantity = 1);\n    // shift all char styles by quantity forward\n    // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n    for (const index in currentLineStylesCloned) {\n      const numericIndex = parseInt(index, 10);\n      if (numericIndex >= charIndex) {\n        currentLineStyles[numericIndex + quantity] =\n          currentLineStylesCloned[numericIndex];\n        // only delete the style if there was nothing moved there\n        if (!currentLineStylesCloned[numericIndex - quantity]) {\n          delete currentLineStyles[numericIndex];\n        }\n      }\n    }\n    this._forceClearCache = true;\n    if (copiedStyle) {\n      while (quantity--) {\n        if (!Object.keys(copiedStyle[quantity]).length) {\n          continue;\n        }\n        if (!this.styles[lineIndex]) {\n          this.styles[lineIndex] = {};\n        }\n        this.styles[lineIndex][charIndex + quantity] = {\n          ...copiedStyle[quantity],\n        };\n      }\n      return;\n    }\n    if (!currentLineStyles) {\n      return;\n    }\n    const newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n    while (newStyle && quantity--) {\n      this.styles[lineIndex][charIndex + quantity] = { ...newStyle };\n    }\n  }\n\n  /**\n   * Inserts style object(s)\n   * @param {Array} insertedText Characters at the location where style is inserted\n   * @param {Number} start cursor index for inserting style\n   * @param {Array} [copiedStyle] array of style objects to insert.\n   */\n  insertNewStyleBlock(\n    insertedText: string[],\n    start: number,\n    copiedStyle?: TextStyleDeclaration[]\n  ) {\n    const cursorLoc = this.get2DCursorLocation(start, true),\n      addedLines = [0];\n    let linesLength = 0;\n    // get an array of how many char per lines are being added.\n    for (let i = 0; i < insertedText.length; i++) {\n      if (insertedText[i] === '\\n') {\n        linesLength++;\n        addedLines[linesLength] = 0;\n      } else {\n        addedLines[linesLength]++;\n      }\n    }\n    // for the first line copy the style from the current char position.\n    if (addedLines[0] > 0) {\n      this.insertCharStyleObject(\n        cursorLoc.lineIndex,\n        cursorLoc.charIndex,\n        addedLines[0],\n        copiedStyle\n      );\n      copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n    }\n    linesLength &&\n      this.insertNewlineStyleObject(\n        cursorLoc.lineIndex,\n        cursorLoc.charIndex + addedLines[0],\n        linesLength\n      );\n    let i;\n    for (i = 1; i < linesLength; i++) {\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(\n          cursorLoc.lineIndex + i,\n          0,\n          addedLines[i],\n          copiedStyle\n        );\n      } else if (copiedStyle) {\n        // this test is required in order to close #6841\n        // when a pasted buffer begins with a newline then\n        // this.styles[cursorLoc.lineIndex + i] and copiedStyle[0]\n        // may be undefined for some reason\n        if (this.styles[cursorLoc.lineIndex + i] && copiedStyle[0]) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n      }\n      copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n    }\n    if (addedLines[i] > 0) {\n      this.insertCharStyleObject(\n        cursorLoc.lineIndex + i,\n        0,\n        addedLines[i],\n        copiedStyle\n      );\n    }\n  }\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars(start: number, end: number = start + 1) {\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    this._removeExtraneousStyles();\n  }\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars(\n    text: string,\n    style: TextStyleDeclaration[] | undefined,\n    start: number,\n    end: number = start\n  ) {\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    const graphemes = this.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [\n      ...this._text.slice(0, start),\n      ...graphemes,\n      ...this._text.slice(end),\n    ];\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    this.initDimensions();\n    this.setCoords();\n    this._removeExtraneousStyles();\n  }\n\n  /**\n   * Set the selectionStart and selectionEnd according to the new position of cursor\n   * mimic the key - mouse navigation when shift is pressed.\n   */\n  setSelectionStartEndWithShift(\n    start: number,\n    end: number,\n    newSelection: number\n  ) {\n    if (newSelection <= start) {\n      if (end === start) {\n        this._selectionDirection = LEFT;\n      } else if (this._selectionDirection === RIGHT) {\n        this._selectionDirection = LEFT;\n        this.selectionEnd = start;\n      }\n      this.selectionStart = newSelection;\n    } else if (newSelection > start && newSelection < end) {\n      if (this._selectionDirection === RIGHT) {\n        this.selectionEnd = newSelection;\n      } else {\n        this.selectionStart = newSelection;\n      }\n    } else {\n      // newSelection is > selection start and end\n      if (end === start) {\n        this._selectionDirection = RIGHT;\n      } else if (this._selectionDirection === LEFT) {\n        this._selectionDirection = RIGHT;\n        this.selectionStart = end;\n      }\n      this.selectionEnd = newSelection;\n    }\n  }\n}\n","import { config } from '../../config';\nimport { getFabricDocument, getEnv } from '../../env';\nimport { capValue } from '../../util/misc/capValue';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextBehavior } from './ITextBehavior';\nimport type { TKeyMapIText } from './constants';\nimport type { TOptions } from '../../typedefs';\nimport type { TextProps, SerializedTextProps } from '../Text/Text';\nimport { getDocumentFromElement } from '../../util/dom_misc';\nimport { LEFT, RIGHT } from '../../constants';\nimport type { IText } from './IText';\nimport type { TextStyleDeclaration } from '../Text/StyledText';\n\nexport abstract class ITextKeyBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents\n> extends ITextBehavior<Props, SProps, EventSpec> {\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behavior for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the IText or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = Object.assign({}, this.keysMap);\n   * The function must be in IText.prototype.myFunction And will receive event as args[0]\n   */\n  declare keysMap: TKeyMapIText;\n\n  declare keysMapRtl: TKeyMapIText;\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  declare ctrlKeysMapUp: TKeyMapIText;\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  declare ctrlKeysMapDown: TKeyMapIText;\n\n  declare hiddenTextarea: HTMLTextAreaElement | null;\n\n  /**\n   * DOM container to append the hiddenTextarea.\n   * An alternative to attaching to the document.body.\n   * Useful to reduce laggish redraw of the full document.body tree and\n   * also with modals event capturing that won't let the textarea take focus.\n   * @type HTMLElement\n   * @default\n   */\n  declare hiddenTextareaContainer?: HTMLElement | null;\n\n  private declare _clickHandlerInitialized: boolean;\n  private declare _copyDone: boolean;\n  private declare fromPaste: boolean;\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea() {\n    const doc =\n      (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\n      getFabricDocument();\n    const textarea = doc.createElement('textarea');\n    Object.entries({\n      autocapitalize: 'off',\n      autocorrect: 'off',\n      autocomplete: 'off',\n      spellcheck: 'false',\n      'data-fabric': 'textarea',\n      wrap: 'off',\n    }).map(([attribute, value]) => textarea.setAttribute(attribute, value));\n    const { top, left, fontSize } = this._calcTextareaPosition();\n    // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n    textarea.style.cssText = `position: absolute; top: ${top}; left: ${left}; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px; padding-top: ${fontSize};`;\n\n    (this.hiddenTextareaContainer || doc.body).appendChild(textarea);\n\n    Object.entries({\n      blur: 'blur',\n      keydown: 'onKeyDown',\n      keyup: 'onKeyUp',\n      input: 'onInput',\n      copy: 'copy',\n      cut: 'copy',\n      paste: 'paste',\n      compositionstart: 'onCompositionStart',\n      compositionupdate: 'onCompositionUpdate',\n      compositionend: 'onCompositionEnd',\n    } as Record<string, keyof this>).map(([eventName, handler]) =>\n      textarea.addEventListener(\n        eventName,\n        (this[handler] as Function).bind(this)\n      )\n    );\n    this.hiddenTextarea = textarea;\n  }\n\n  /**\n   * Override this method to customize cursor behavior on textbox blur\n   */\n  blur() {\n    this.abortCursorAnimation();\n  }\n\n  /**\n   * Handles keydown event\n   * only used for arrows and combination of modifier keys.\n   * @param {KeyboardEvent} e Event object\n   */\n  onKeyDown(e: KeyboardEvent) {\n    if (!this.isEditing) {\n      return;\n    }\n    const keyMap = this.direction === 'rtl' ? this.keysMapRtl : this.keysMap;\n    if (e.keyCode in keyMap) {\n      // @ts-expect-error legacy method calling pattern\n      this[keyMap[e.keyCode]](e);\n    } else if (e.keyCode in this.ctrlKeysMapDown && (e.ctrlKey || e.metaKey)) {\n      // @ts-expect-error legacy method calling pattern\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    } else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.inCompositionMode = false;\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    } else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  }\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {KeyboardEvent} e Event object\n   */\n  onKeyUp(e: KeyboardEvent) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if (e.keyCode in this.ctrlKeysMapUp && (e.ctrlKey || e.metaKey)) {\n      // @ts-expect-error legacy method calling pattern\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    } else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  }\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput(this: this & { hiddenTextarea: HTMLTextAreaElement }, e: Event) {\n    const fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    const updateAndFire = () => {\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this as unknown as IText });\n        this.canvas.requestRenderAll();\n      }\n    };\n    if (this.hiddenTextarea.value === '') {\n      this.styles = {};\n      updateAndFire();\n      return;\n    }\n    // decisions about style changes.\n    const nextText = this._splitTextIntoLines(\n        this.hiddenTextarea.value\n      ).graphemeText,\n      charCount = this._text.length,\n      nextCharCount = nextText.length,\n      selectionStart = this.selectionStart,\n      selectionEnd = this.selectionEnd,\n      selection = selectionStart !== selectionEnd;\n    let copiedStyle: TextStyleDeclaration[] | undefined,\n      removedText,\n      charDiff = nextCharCount - charCount,\n      removeFrom,\n      removeTo;\n\n    const textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    const backDelete = selectionStart > textareaSelection.selectionStart;\n\n    if (selection) {\n      removedText = this._text.slice(selectionStart, selectionEnd);\n      charDiff += selectionEnd - selectionStart;\n    } else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(selectionEnd + charDiff, selectionEnd);\n      } else {\n        removedText = this._text.slice(\n          selectionStart,\n          selectionStart - charDiff\n        );\n      }\n    }\n    const insertedText = nextText.slice(\n      textareaSelection.selectionEnd - charDiff,\n      textareaSelection.selectionEnd\n    );\n    if (removedText && removedText.length) {\n      if (insertedText.length) {\n        // let's copy some style before deleting.\n        // we want to copy the style before the cursor OR the style at the cursor if selection\n        // is bigger than 0.\n        copiedStyle = this.getSelectionStyles(\n          selectionStart,\n          selectionStart + 1,\n          false\n        );\n        // now duplicate the style one for each inserted text.\n        copiedStyle = insertedText.map(\n          () =>\n            // this return an array of references, but that is fine since we are\n            // copying the style later.\n            copiedStyle![0]\n        );\n      }\n      if (selection) {\n        removeFrom = selectionStart;\n        removeTo = selectionEnd;\n      } else if (backDelete) {\n        // detect differences between forwardDelete and backDelete\n        removeFrom = selectionEnd - removedText.length;\n        removeTo = selectionEnd;\n      } else {\n        removeFrom = selectionEnd;\n        removeTo = selectionEnd + removedText.length;\n      }\n      this.removeStyleFromTo(removeFrom, removeTo);\n    }\n    if (insertedText.length) {\n      const { copyPasteData } = getEnv();\n      if (\n        fromPaste &&\n        insertedText.join('') === copyPasteData.copiedText &&\n        !config.disableStyleCopyPaste\n      ) {\n        copiedStyle = copyPasteData.copiedTextStyle;\n      }\n      this.insertNewStyleBlock(insertedText, selectionStart, copiedStyle);\n    }\n    updateAndFire();\n  }\n\n  /**\n   * Composition start\n   */\n  onCompositionStart() {\n    this.inCompositionMode = true;\n  }\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd() {\n    this.inCompositionMode = false;\n  }\n\n  onCompositionUpdate({ target }: CompositionEvent) {\n    const { selectionStart, selectionEnd } = target as HTMLTextAreaElement;\n    this.compositionStart = selectionStart;\n    this.compositionEnd = selectionEnd;\n    this.updateTextareaPosition();\n  }\n\n  /**\n   * Copies selected text\n   */\n  copy() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n    const { copyPasteData } = getEnv();\n    copyPasteData.copiedText = this.getSelectedText();\n    if (!config.disableStyleCopyPaste) {\n      copyPasteData.copiedTextStyle = this.getSelectionStyles(\n        this.selectionStart,\n        this.selectionEnd,\n        true\n      );\n    } else {\n      copyPasteData.copiedTextStyle = undefined;\n    }\n    this._copyDone = true;\n  }\n\n  /**\n   * Pastes text\n   */\n  paste() {\n    this.fromPaste = true;\n  }\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor(lineIndex: number, charIndex: number): number {\n    let widthBeforeCursor = this._getLineLeftOffset(lineIndex),\n      bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  }\n\n  /**\n   * Gets start offset of a selection\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset(e: KeyboardEvent, isRight: boolean): number {\n    const selectionProp = this._getSelectionForOffset(e, isRight),\n      cursorLocation = this.get2DCursorLocation(selectionProp),\n      lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (\n      lineIndex === this._textLines.length - 1 ||\n      e.metaKey ||\n      e.keyCode === 34\n    ) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    const charIndex = cursorLocation.charIndex,\n      widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n      indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n      textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return (\n      textAfterCursor.length +\n      indexOnOtherLine +\n      1 +\n      this.missingNewlineOffset(lineIndex)\n    );\n  }\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset(e: KeyboardEvent, isRight: boolean): number {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    } else {\n      return this.selectionStart;\n    }\n  }\n\n  /**\n   * @param {KeyboardEvent} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset(e: KeyboardEvent, isRight: boolean): number {\n    const selectionProp = this._getSelectionForOffset(e, isRight),\n      cursorLocation = this.get2DCursorLocation(selectionProp),\n      lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    const charIndex = cursorLocation.charIndex,\n      widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n      indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n      textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n      missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1);\n    // return a negative offset\n    return (\n      -this._textLines[lineIndex - 1].length +\n      indexOnOtherLine -\n      textBeforeCursor.length +\n      (1 - missingNewlineOffset)\n    );\n  }\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine(lineIndex: number, width: number) {\n    const line = this._textLines[lineIndex],\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    let widthOfCharsOnLine = lineLeftOffset,\n      indexOnLine = 0,\n      charWidth,\n      foundMatch;\n\n    for (let j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        const leftEdge = widthOfCharsOnLine - charWidth,\n          rightEdge = widthOfCharsOnLine,\n          offsetFromLeftEdge = Math.abs(leftEdge - width),\n          offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : j - 1;\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  }\n\n  /**\n   * Moves cursor down\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorDown(e: KeyboardEvent) {\n    if (\n      this.selectionStart >= this._text.length &&\n      this.selectionEnd >= this._text.length\n    ) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  }\n\n  /**\n   * Moves cursor up\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorUp(e: KeyboardEvent) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  }\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {KeyboardEvent} e Event object\n   */\n  _moveCursorUpOrDown(direction: 'Up' | 'Down', e: KeyboardEvent) {\n    const offset = this[`get${direction}CursorOffset`](\n      e,\n      this._selectionDirection === RIGHT\n    );\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    } else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      const max = this.text.length;\n      this.selectionStart = capValue(0, this.selectionStart, max);\n      this.selectionEnd = capValue(0, this.selectionEnd, max);\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift(offset: number) {\n    const newSelection =\n      this._selectionDirection === LEFT\n        ? this.selectionStart + offset\n        : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(\n      this.selectionStart,\n      this.selectionEnd,\n      newSelection\n    );\n    return offset !== 0;\n  }\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift(offset: number) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  }\n\n  /**\n   * Moves cursor left\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorLeft(e: KeyboardEvent) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  }\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   *\n   * @todo refactor not to use method name composition\n   */\n  _move(\n    e: KeyboardEvent,\n    prop: 'selectionStart' | 'selectionEnd',\n    direction: 'Left' | 'Right'\n  ): boolean {\n    let newValue: number | undefined;\n    if (e.altKey) {\n      newValue = this[`findWordBoundary${direction}`](this[prop]);\n    } else if (e.metaKey || e.keyCode === 35 || e.keyCode === 36) {\n      newValue = this[`findLineBoundary${direction}`](this[prop]);\n    } else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== 'undefined' && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @private\n   */\n  _moveLeft(e: KeyboardEvent, prop: 'selectionStart' | 'selectionEnd') {\n    return this._move(e, prop, 'Left');\n  }\n\n  /**\n   * @private\n   */\n  _moveRight(e: KeyboardEvent, prop: 'selectionStart' | 'selectionEnd') {\n    return this._move(e, prop, 'Right');\n  }\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorLeftWithoutShift(e: KeyboardEvent) {\n    let change = true;\n    this._selectionDirection = LEFT;\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (\n      this.selectionEnd === this.selectionStart &&\n      this.selectionStart !== 0\n    ) {\n      change = this._moveLeft(e, 'selectionStart');\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  }\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorLeftWithShift(e: KeyboardEvent) {\n    if (\n      this._selectionDirection === RIGHT &&\n      this.selectionStart !== this.selectionEnd\n    ) {\n      return this._moveLeft(e, 'selectionEnd');\n    } else if (this.selectionStart !== 0) {\n      this._selectionDirection = LEFT;\n      return this._moveLeft(e, 'selectionStart');\n    }\n  }\n\n  /**\n   * Moves cursor right\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorRight(e: KeyboardEvent) {\n    if (\n      this.selectionStart >= this._text.length &&\n      this.selectionEnd >= this._text.length\n    ) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  }\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {KeyboardEvent} e Event object\n   */\n  _moveCursorLeftOrRight(direction: 'Left' | 'Right', e: KeyboardEvent) {\n    const actionName = `moveCursor${direction}${\n      e.shiftKey ? 'WithShift' : 'WithoutShift'\n    }` as const;\n    this._currentCursorOpacity = 1;\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {KeyboardEvent} e\n   */\n  moveCursorRightWithShift(e: KeyboardEvent) {\n    if (\n      this._selectionDirection === LEFT &&\n      this.selectionStart !== this.selectionEnd\n    ) {\n      return this._moveRight(e, 'selectionStart');\n    } else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = RIGHT;\n      return this._moveRight(e, 'selectionEnd');\n    }\n  }\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {KeyboardEvent} e Event object\n   */\n  moveCursorRightWithoutShift(e: KeyboardEvent) {\n    let changed = true;\n    this._selectionDirection = RIGHT;\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  }\n}\n","import type { TPointerEvent, TPointerEventInfo } from '../../EventTypeDefs';\nimport type { XY } from '../../Point';\nimport { Point } from '../../Point';\nimport { stopEvent } from '../../util/dom_event';\nimport { invertTransform } from '../../util/misc/matrix';\nimport { DraggableTextDelegate } from './DraggableTextDelegate';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextKeyBehavior } from './ITextKeyBehavior';\nimport type { TOptions } from '../../typedefs';\nimport type { TextProps, SerializedTextProps } from '../Text/Text';\n\n/**\n * `LEFT_CLICK === 0`\n */\nconst notALeftClick = (e: Event) => !!(e as MouseEvent).button;\n\nexport abstract class ITextClickBehavior<\n  Props extends TOptions<TextProps> = Partial<TextProps>,\n  SProps extends SerializedTextProps = SerializedTextProps,\n  EventSpec extends ITextEvents = ITextEvents\n> extends ITextKeyBehavior<Props, SProps, EventSpec> {\n  private declare __lastSelected: boolean;\n  private declare __lastClickTime: number;\n  private declare __lastLastClickTime: number;\n  private declare __lastPointer: XY | Record<string, never>;\n  private declare __newClickTime: number;\n\n  protected draggableTextDelegate: DraggableTextDelegate;\n\n  initBehavior() {\n    // Initializes event handlers related to cursor or selection\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n    this.on('mouseup', this.mouseUpHandler);\n    this.on('mousedblclick', this.doubleClickHandler);\n    this.on('tripleclick', this.tripleClickHandler);\n\n    // Initializes \"dbclick\" event handler\n    this.__lastClickTime = +new Date();\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n    this.__lastPointer = {};\n    this.on('mousedown', this.onMouseDown);\n\n    // @ts-expect-error in reality it is an IText instance\n    this.draggableTextDelegate = new DraggableTextDelegate(this);\n\n    super.initBehavior();\n  }\n\n  shouldStartDragging() {\n    return this.draggableTextDelegate.isActive();\n  }\n\n  /**\n   * @public override this method to control whether instance should/shouldn't become a drag source, @see also {@link DraggableTextDelegate#isActive}\n   * @returns {boolean} should handle event\n   */\n  onDragStart(e: DragEvent) {\n    return this.draggableTextDelegate.onDragStart(e);\n  }\n\n  /**\n   * @public override this method to control whether instance should/shouldn't become a drop target\n   */\n  canDrop(e: DragEvent) {\n    return this.draggableTextDelegate.canDrop(e);\n  }\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown(options: TPointerEventInfo) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    const newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastSelected = this.selected && !this.getActiveControl();\n  }\n\n  isTripleClick(newPointer: XY) {\n    return (\n      this.__newClickTime - this.__lastClickTime < 500 &&\n      this.__lastClickTime - this.__lastLastClickTime < 500 &&\n      this.__lastPointer.x === newPointer.x &&\n      this.__lastPointer.y === newPointer.y\n    );\n  }\n\n  /**\n   * Default handler for double click, select a word\n   */\n  doubleClickHandler(options: TPointerEventInfo) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectWord(this.getSelectionStartFromPointer(options.e));\n  }\n\n  /**\n   * Default handler for triple click, select a line\n   */\n  tripleClickHandler(options: TPointerEventInfo) {\n    if (!this.isEditing) {\n      return;\n    }\n    this.selectLine(this.getSelectionStartFromPointer(options.e));\n  }\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   * initializing a mousedDown on a text area will cancel fabricjs knowledge of\n   * current compositionMode. It will be set to false.\n   */\n  _mouseDownHandler({ e }: TPointerEventInfo) {\n    if (\n      !this.canvas ||\n      !this.editable ||\n      notALeftClick(e) ||\n      this.getActiveControl()\n    ) {\n      return;\n    }\n\n    if (this.draggableTextDelegate.start(e)) {\n      return;\n    }\n\n    this.canvas.textEditingManager.register(this);\n\n    if (this.selected) {\n      this.inCompositionMode = false;\n      this.setCursorByClick(e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  }\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore({ e }: TPointerEventInfo) {\n    if (!this.canvas || !this.editable || notALeftClick(e)) {\n      return;\n    }\n    // we want to avoid that an object that was selected and then becomes unselectable,\n    // may trigger editing mode in some way.\n    this.selected = this === this.canvas._activeObject;\n  }\n\n  /**\n   * standard handler for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler({ e, transform }: TPointerEventInfo) {\n    const didDrag = this.draggableTextDelegate.end(e);\n    if (this.canvas) {\n      this.canvas.textEditingManager.unregister(this);\n\n      const activeObject = this.canvas._activeObject;\n      if (activeObject && activeObject !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n    if (\n      !this.editable ||\n      (this.group && !this.group.interactive) ||\n      (transform && transform.actionPerformed) ||\n      notALeftClick(e) ||\n      didDrag\n    ) {\n      return;\n    }\n\n    if (this.__lastSelected && !this.getActiveControl()) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      } else {\n        this.renderCursorOrSelection();\n      }\n    } else {\n      this.selected = true;\n    }\n  }\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {TPointerEvent} e Event object\n   */\n  setCursorByClick(e: TPointerEvent) {\n    const newSelection = this.getSelectionStartFromPointer(e),\n      start = this.selectionStart,\n      end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    } else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  }\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {TPointerEvent} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer(e: TPointerEvent): number {\n    const mouseOffset = this.canvas!.getScenePoint(e)\n      .transform(invertTransform(this.calcTransformMatrix()))\n      .add(new Point(-this._getLeftOffset(), -this._getTopOffset()));\n    let height = 0,\n      charIndex = 0,\n      lineIndex = 0;\n\n    for (let i = 0; i < this._textLines.length; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i);\n        lineIndex = i;\n        if (i > 0) {\n          charIndex +=\n            this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      } else {\n        break;\n      }\n    }\n    const lineLeftOffset = Math.abs(this._getLineLeftOffset(lineIndex));\n    let width = lineLeftOffset;\n    const charLength = this._textLines[lineIndex].length;\n    const chars = this.__charBounds[lineIndex];\n    for (let j = 0; j < charLength; j++) {\n      // i removed something about flipX here, check.\n      const charWidth = chars[j].kernedWidth;\n      const widthAfter = width + charWidth;\n      if (mouseOffset.x <= widthAfter) {\n        // if the pointer is closer to the end of the char we increment charIndex\n        // in order to position the cursor after the char\n        if (\n          Math.abs(mouseOffset.x - widthAfter) <=\n          Math.abs(mouseOffset.x - width)\n        ) {\n          charIndex++;\n        }\n        break;\n      }\n      width = widthAfter;\n      charIndex++;\n    }\n\n    return Math.min(\n      // if object is horizontally flipped, mirror cursor location from the end\n      this.flipX ? charLength - charIndex : charIndex,\n      this._text.length\n    );\n  }\n}\n","export type TKeyMapIText = Record<\n  KeyboardEvent['keyCode'],\n  CursorHandlingMethods\n>;\n\nexport type CursorHandlingMethods =\n  | 'moveCursorUp'\n  | 'moveCursorDown'\n  | 'moveCursorLeft'\n  | 'moveCursorRight'\n  | 'exitEditing'\n  | 'copy'\n  | 'cut'\n  | 'selectAll';\n\nconst MOVE_CURSOR_UP: CursorHandlingMethods = 'moveCursorUp';\nconst MOVE_CURSOR_DOWN: CursorHandlingMethods = 'moveCursorDown';\nconst MOVE_CURSOR_LEFT: CursorHandlingMethods = 'moveCursorLeft';\nconst MOVE_CURSOR_RIGHT: CursorHandlingMethods = 'moveCursorRight';\nconst EXIT_EDITING: CursorHandlingMethods = 'exitEditing';\n\n// @TODO look into import { Key } from 'ts-key-enum';\n// and transition from keyCode to Key\n// also reduce string duplication\nexport const keysMap: TKeyMapIText = {\n  9: EXIT_EDITING,\n  27: EXIT_EDITING,\n  33: MOVE_CURSOR_UP,\n  34: MOVE_CURSOR_DOWN,\n  35: MOVE_CURSOR_RIGHT,\n  36: MOVE_CURSOR_LEFT,\n  37: MOVE_CURSOR_LEFT,\n  38: MOVE_CURSOR_UP,\n  39: MOVE_CURSOR_RIGHT,\n  40: MOVE_CURSOR_DOWN,\n};\n\nexport const keysMapRtl: TKeyMapIText = {\n  9: EXIT_EDITING,\n  27: EXIT_EDITING,\n  33: MOVE_CURSOR_UP,\n  34: MOVE_CURSOR_DOWN,\n  35: MOVE_CURSOR_LEFT,\n  36: MOVE_CURSOR_RIGHT,\n  37: MOVE_CURSOR_RIGHT,\n  38: MOVE_CURSOR_UP,\n  39: MOVE_CURSOR_LEFT,\n  40: MOVE_CURSOR_DOWN,\n};\n\n/**\n * For functionalities on keyUp + ctrl || cmd\n */\nexport const ctrlKeysMapUp: TKeyMapIText = {\n  67: 'copy',\n  // there was a reason this wasn't deleted. for now leave it here\n  88: 'cut',\n};\n\n/**\n * For functionalities on keyDown + ctrl || cmd\n */\nexport const ctrlKeysMapDown: TKeyMapIText = {\n  65: 'selectAll',\n};\n","import { Canvas } from '../../canvas/Canvas';\nimport type { ITextEvents } from './ITextBehavior';\nimport { ITextClickBehavior } from './ITextClickBehavior';\nimport {\n  ctrlKeysMapDown,\n  ctrlKeysMapUp,\n  keysMap,\n  keysMapRtl,\n} from './constants';\nimport type { TClassProperties, TFiller, TOptions } from '../../typedefs';\nimport { classRegistry } from '../../ClassRegistry';\nimport type { SerializedTextProps, TextProps } from '../Text/Text';\nimport {\n  JUSTIFY,\n  JUSTIFY_CENTER,\n  JUSTIFY_LEFT,\n  JUSTIFY_RIGHT,\n} from '../Text/constants';\nimport { CENTER, LEFT, RIGHT } from '../../constants';\nimport type { ObjectToCanvasElementOptions } from '../Object/Object';\n\ntype CursorBoundaries = {\n  left: number;\n  top: number;\n  leftOffset: number;\n  topOffset: number;\n};\n\n// Declare IText protected properties to workaround TS\nconst protectedDefaultValues = {\n  _selectionDirection: null,\n  _reSpace: /\\s|\\r?\\n/,\n  inCompositionMode: false,\n};\n\nexport const iTextDefaultValues: Partial<TClassProperties<IText>> = {\n  selectionStart: 0,\n  selectionEnd: 0,\n  selectionColor: 'rgba(17,119,255,0.3)',\n  isEditing: false,\n  editable: true,\n  editingBorderColor: 'rgba(102,153,255,0.25)',\n  cursorWidth: 2,\n  cursorColor: '',\n  cursorDelay: 1000,\n  cursorDuration: 600,\n  caching: true,\n  hiddenTextareaContainer: null,\n  keysMap,\n  keysMapRtl,\n  ctrlKeysMapDown,\n  ctrlKeysMapUp,\n  ...protectedDefaultValues,\n};\n\n// @TODO this is not complete\ninterface UniqueITextProps {\n  selectionStart: number;\n  selectionEnd: number;\n}\n\nexport interface SerializedITextProps\n  extends SerializedTextProps,\n    UniqueITextProps {}\n\nexport interface ITextProps extends TextProps, UniqueITextProps {}\n\n/**\n * @fires changed\n * @fires selection:changed\n * @fires editing:entered\n * @fires editing:exited\n * @fires dragstart\n * @fires drag drag event firing on the drag source\n * @fires dragend\n * @fires copy\n * @fires cut\n * @fires paste\n *\n * #### Supported key combinations\n * ```\n *   Move cursor:                    left, right, up, down\n *   Select character:               shift + left, shift + right\n *   Select text vertically:         shift + up, shift + down\n *   Move cursor by word:            alt + left, alt + right\n *   Select words:                   shift + alt + left, shift + alt + right\n *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n *   Jump to start/end of text:      cmd + up, cmd + down\n *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n *   Delete character:               backspace\n *   Delete word:                    alt + backspace\n *   Delete line:                    cmd + backspace\n *   Forward delete:                 delete\n *   Copy text:                      ctrl/cmd + c\n *   Paste text:                     ctrl/cmd + v\n *   Cut text:                       ctrl/cmd + x\n *   Select entire text:             ctrl/cmd + a\n *   Quit editing                    tab or esc\n * ```\n *\n * #### Supported mouse/touch combination\n * ```\n *   Position cursor:                click/touch\n *   Create selection:               click/touch & drag\n *   Create selection:               click & shift + click\n *   Select word:                    double click\n *   Select line:                    triple click\n * ```\n */\nexport class IText<\n    Props extends TOptions<ITextProps> = Partial<ITextProps>,\n    SProps extends SerializedITextProps = SerializedITextProps,\n    EventSpec extends ITextEvents = ITextEvents\n  >\n  extends ITextClickBehavior<Props, SProps, EventSpec>\n  implements UniqueITextProps\n{\n  /**\n   * Index where text selection starts (or where cursor is when there is no selection)\n   * @type Number\n   * @default\n   */\n  declare selectionStart: number;\n\n  /**\n   * Index where text selection ends\n   * @type Number\n   * @default\n   */\n  declare selectionEnd: number;\n\n  declare compositionStart: number;\n\n  declare compositionEnd: number;\n\n  /**\n   * Color of text selection\n   * @type String\n   * @default\n   */\n  declare selectionColor: string;\n\n  /**\n   * Indicates whether text is in editing mode\n   * @type Boolean\n   * @default\n   */\n  declare isEditing: boolean;\n\n  /**\n   * Indicates whether a text can be edited\n   * @type Boolean\n   * @default\n   */\n  declare editable: boolean;\n\n  /**\n   * Border color of text object while it's in editing mode\n   * @type String\n   * @default\n   */\n  declare editingBorderColor: string;\n\n  /**\n   * Width of cursor (in px)\n   * @type Number\n   * @default\n   */\n  declare cursorWidth: number;\n\n  /**\n   * Color of text cursor color in editing mode.\n   * if not set (default) will take color from the text.\n   * if set to a color value that fabric can understand, it will\n   * be used instead of the color of the text at the current position.\n   * @type String\n   * @default\n   */\n  declare cursorColor: string;\n\n  /**\n   * Delay between cursor blink (in ms)\n   * @type Number\n   * @default\n   */\n  declare cursorDelay: number;\n\n  /**\n   * Duration of cursor fade in (in ms)\n   * @type Number\n   * @default\n   */\n  declare cursorDuration: number;\n\n  declare compositionColor: string;\n\n  /**\n   * Indicates whether internal text char widths can be cached\n   * @type Boolean\n   * @default\n   */\n  declare caching: boolean;\n\n  static ownDefaults = iTextDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...IText.ownDefaults };\n  }\n\n  static type = 'IText';\n\n  get type() {\n    const type = super.type;\n    // backward compatibility\n    return type === 'itext' ? 'i-text' : type;\n  }\n\n  /**\n\n   * Constructor\n   * @param {String} text Text string\n   * @param {Object} [options] Options object\n   */\n  constructor(text: string, options?: Props) {\n    super(text, options);\n    this.initBehavior();\n  }\n\n  /**\n   * While editing handle differently\n   * @private\n   * @param {string} key\n   * @param {*} value\n   */\n  _set(key: string, value: any) {\n    if (this.isEditing && this._savedProps && key in this._savedProps) {\n      // @ts-expect-error irritating TS\n      this._savedProps[key] = value;\n      return this;\n    }\n    if (key === 'canvas') {\n      this.canvas instanceof Canvas &&\n        this.canvas.textEditingManager.remove(this);\n      value instanceof Canvas && value.textEditingManager.add(this);\n    }\n    return super._set(key, value);\n  }\n\n  /**\n   * Sets selection start (left boundary of a selection)\n   * @param {Number} index Index to set selection start to\n   */\n  setSelectionStart(index: number) {\n    index = Math.max(index, 0);\n    this._updateAndFire('selectionStart', index);\n  }\n\n  /**\n   * Sets selection end (right boundary of a selection)\n   * @param {Number} index Index to set selection end to\n   */\n  setSelectionEnd(index: number) {\n    index = Math.min(index, this.text.length);\n    this._updateAndFire('selectionEnd', index);\n  }\n\n  /**\n   * @private\n   * @param {String} property 'selectionStart' or 'selectionEnd'\n   * @param {Number} index new position of property\n   */\n  protected _updateAndFire(\n    property: 'selectionStart' | 'selectionEnd',\n    index: number\n  ) {\n    if (this[property] !== index) {\n      this._fireSelectionChanged();\n      this[property] = index;\n    }\n    this._updateTextarea();\n  }\n\n  /**\n   * Fires the even of selection changed\n   * @private\n   */\n  _fireSelectionChanged() {\n    this.fire('selection:changed');\n    this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n  }\n\n  /**\n   * Initialize text dimensions. Render all text on given context\n   * or on a offscreen canvas to get the text width with measureText.\n   * Updates this.width and this.height with the proper values.\n   * Does not return dimensions.\n   * @private\n   */\n  initDimensions() {\n    this.isEditing && this.initDelayedCursor();\n    super.initDimensions();\n  }\n\n  /**\n   * Gets style of a current selection/cursor (at the start position)\n   * if startIndex or endIndex are not provided, selectionStart or selectionEnd will be used.\n   * @param {Number} startIndex Start index to get styles at\n   * @param {Number} endIndex End index to get styles at, if not specified selectionEnd or startIndex + 1\n   * @param {Boolean} [complete] get full style or not\n   * @return {Array} styles an array with one, zero or more Style objects\n   */\n  getSelectionStyles(\n    startIndex: number = this.selectionStart || 0,\n    endIndex: number = this.selectionEnd,\n    complete?: boolean\n  ) {\n    return super.getSelectionStyles(startIndex, endIndex, complete);\n  }\n\n  /**\n   * Sets style of a current selection, if no selection exist, do not set anything.\n   * @param {Object} [styles] Styles object\n   * @param {Number} [startIndex] Start index to get styles at\n   * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n   */\n  setSelectionStyles(\n    styles: object,\n    startIndex: number = this.selectionStart || 0,\n    endIndex: number = this.selectionEnd\n  ) {\n    return super.setSelectionStyles(styles, startIndex, endIndex);\n  }\n\n  /**\n   * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n   * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n   * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. useful to manage styles.\n   */\n  get2DCursorLocation(\n    selectionStart = this.selectionStart,\n    skipWrapping?: boolean\n  ) {\n    return super.get2DCursorLocation(selectionStart, skipWrapping);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  render(ctx: CanvasRenderingContext2D) {\n    super.render(ctx);\n    // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n    // the correct position but not at every cursor animation.\n    this.cursorOffsetCache = {};\n    this.renderCursorOrSelection();\n  }\n\n  /**\n   * @override block cursor/selection logic while rendering the exported canvas\n   * @todo this workaround should be replaced with a more robust solution\n   */\n  toCanvasElement(options?: ObjectToCanvasElementOptions): HTMLCanvasElement {\n    const isEditing = this.isEditing;\n    this.isEditing = false;\n    const canvas = super.toCanvasElement(options);\n    this.isEditing = isEditing;\n    return canvas;\n  }\n\n  /**\n   * Renders cursor or selection (depending on what exists)\n   * it does on the contextTop. If contextTop is not available, do nothing.\n   */\n  renderCursorOrSelection() {\n    if (!this.isEditing) {\n      return;\n    }\n    const ctx = this.clearContextTop(true);\n    if (!ctx) {\n      return;\n    }\n    const boundaries = this._getCursorBoundaries();\n    if (this.selectionStart === this.selectionEnd) {\n      this.renderCursor(ctx, boundaries);\n    } else {\n      this.renderSelection(ctx, boundaries);\n    }\n    this.canvas!.contextTopDirty = true;\n    ctx.restore();\n  }\n\n  /**\n   * Returns cursor boundaries (left, top, leftOffset, topOffset)\n   * left/top are left/top of entire text box\n   * leftOffset/topOffset are offset from that left/top point of a text box\n   * @private\n   * @param {number} [index] index from start\n   * @param {boolean} [skipCaching]\n   */\n  _getCursorBoundaries(\n    index: number = this.selectionStart,\n    skipCaching?: boolean\n  ): CursorBoundaries {\n    const left = this._getLeftOffset(),\n      top = this._getTopOffset(),\n      offsets = this._getCursorBoundariesOffsets(index, skipCaching);\n    return {\n      left: left,\n      top: top,\n      leftOffset: offsets.left,\n      topOffset: offsets.top,\n    };\n  }\n\n  /**\n   * Caches and returns cursor left/top offset relative to instance's center point\n   * @private\n   * @param {number} index index from start\n   * @param {boolean} [skipCaching]\n   */\n  _getCursorBoundariesOffsets(\n    index: number,\n    skipCaching?: boolean\n  ): { left: number; top: number } {\n    if (skipCaching) {\n      return this.__getCursorBoundariesOffsets(index);\n    }\n    if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n      return this.cursorOffsetCache as { left: number; top: number };\n    }\n    return (this.cursorOffsetCache = this.__getCursorBoundariesOffsets(index));\n  }\n\n  /**\n   * Calculates cursor left/top offset relative to instance's center point\n   * @private\n   * @param {number} index index from start\n   */\n  __getCursorBoundariesOffsets(index: number) {\n    let topOffset = 0,\n      leftOffset = 0;\n    const { charIndex, lineIndex } = this.get2DCursorLocation(index);\n\n    for (let i = 0; i < lineIndex; i++) {\n      topOffset += this.getHeightOfLine(i);\n    }\n    const lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    const bound = this.__charBounds[lineIndex][charIndex];\n    bound && (leftOffset = bound.left);\n    if (\n      this.charSpacing !== 0 &&\n      charIndex === this._textLines[lineIndex].length\n    ) {\n      leftOffset -= this._getWidthOfCharSpacing();\n    }\n    const boundaries = {\n      top: topOffset,\n      left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n    };\n    if (this.direction === 'rtl') {\n      if (\n        this.textAlign === RIGHT ||\n        this.textAlign === JUSTIFY ||\n        this.textAlign === JUSTIFY_RIGHT\n      ) {\n        boundaries.left *= -1;\n      } else if (this.textAlign === LEFT || this.textAlign === JUSTIFY_LEFT) {\n        boundaries.left = lineLeftOffset - (leftOffset > 0 ? leftOffset : 0);\n      } else if (\n        this.textAlign === CENTER ||\n        this.textAlign === JUSTIFY_CENTER\n      ) {\n        boundaries.left = lineLeftOffset - (leftOffset > 0 ? leftOffset : 0);\n      }\n    }\n    return boundaries;\n  }\n\n  /**\n   * Renders cursor on context Top, outside the animation cycle, on request\n   * Used for the drag/drop effect.\n   * If contextTop is not available, do nothing.\n   */\n  renderCursorAt(selectionStart: number) {\n    const boundaries = this._getCursorBoundaries(selectionStart, true);\n    this._renderCursor(this.canvas!.contextTop, boundaries, selectionStart);\n  }\n\n  /**\n   * Renders cursor\n   * @param {Object} boundaries\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  renderCursor(ctx: CanvasRenderingContext2D, boundaries: CursorBoundaries) {\n    this._renderCursor(ctx, boundaries, this.selectionStart);\n  }\n\n  _renderCursor(\n    ctx: CanvasRenderingContext2D,\n    boundaries: CursorBoundaries,\n    selectionStart: number\n  ) {\n    const cursorLocation = this.get2DCursorLocation(selectionStart),\n      lineIndex = cursorLocation.lineIndex,\n      charIndex =\n        cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n      charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n      multiplier = this.getObjectScaling().x * this.canvas!.getZoom(),\n      cursorWidth = this.cursorWidth / multiplier,\n      dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY'),\n      topOffset =\n        boundaries.topOffset +\n        ((1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex)) /\n          this.lineHeight -\n        charHeight * (1 - this._fontSizeFraction);\n\n    if (this.inCompositionMode) {\n      // TODO: investigate why there isn't a return inside the if,\n      // and why can't happen at the top of the function\n      this.renderSelection(ctx, boundaries);\n    }\n    ctx.fillStyle =\n      this.cursorColor ||\n      (this.getValueOfPropertyAt(lineIndex, charIndex, 'fill') as string);\n    ctx.globalAlpha = this._currentCursorOpacity;\n    ctx.fillRect(\n      boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n      topOffset + boundaries.top + dy,\n      cursorWidth,\n      charHeight\n    );\n  }\n\n  /**\n   * Renders text selection\n   * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  renderSelection(ctx: CanvasRenderingContext2D, boundaries: CursorBoundaries) {\n    const selection = {\n      selectionStart: this.inCompositionMode\n        ? this.hiddenTextarea!.selectionStart\n        : this.selectionStart,\n      selectionEnd: this.inCompositionMode\n        ? this.hiddenTextarea!.selectionEnd\n        : this.selectionEnd,\n    };\n    this._renderSelection(ctx, selection, boundaries);\n  }\n\n  /**\n   * Renders drag start text selection\n   */\n  renderDragSourceEffect() {\n    const dragStartSelection =\n      this.draggableTextDelegate.getDragStartSelection()!;\n    this._renderSelection(\n      this.canvas!.contextTop,\n      dragStartSelection,\n      this._getCursorBoundaries(dragStartSelection.selectionStart, true)\n    );\n  }\n\n  renderDropTargetEffect(e: DragEvent) {\n    const dragSelection = this.getSelectionStartFromPointer(e);\n    this.renderCursorAt(dragSelection);\n  }\n\n  /**\n   * Renders text selection\n   * @private\n   * @param {{ selectionStart: number, selectionEnd: number }} selection\n   * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n   * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n   */\n  _renderSelection(\n    ctx: CanvasRenderingContext2D,\n    selection: { selectionStart: number; selectionEnd: number },\n    boundaries: CursorBoundaries\n  ) {\n    const selectionStart = selection.selectionStart,\n      selectionEnd = selection.selectionEnd,\n      isJustify = this.textAlign.includes(JUSTIFY),\n      start = this.get2DCursorLocation(selectionStart),\n      end = this.get2DCursorLocation(selectionEnd),\n      startLine = start.lineIndex,\n      endLine = end.lineIndex,\n      startChar = start.charIndex < 0 ? 0 : start.charIndex,\n      endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n    for (let i = startLine; i <= endLine; i++) {\n      const lineOffset = this._getLineLeftOffset(i) || 0;\n      let lineHeight = this.getHeightOfLine(i),\n        realLineHeight = 0,\n        boxStart = 0,\n        boxEnd = 0;\n\n      if (i === startLine) {\n        boxStart = this.__charBounds[startLine][startChar].left;\n      }\n      if (i >= startLine && i < endLine) {\n        boxEnd =\n          isJustify && !this.isEndOfWrapping(i)\n            ? this.width\n            : this.getLineWidth(i) || 5; // WTF is this 5?\n      } else if (i === endLine) {\n        if (endChar === 0) {\n          boxEnd = this.__charBounds[endLine][endChar].left;\n        } else {\n          const charSpacing = this._getWidthOfCharSpacing();\n          boxEnd =\n            this.__charBounds[endLine][endChar - 1].left +\n            this.__charBounds[endLine][endChar - 1].width -\n            charSpacing;\n        }\n      }\n      realLineHeight = lineHeight;\n      if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n        lineHeight /= this.lineHeight;\n      }\n      let drawStart = boundaries.left + lineOffset + boxStart,\n        drawHeight = lineHeight,\n        extraTop = 0;\n      const drawWidth = boxEnd - boxStart;\n      if (this.inCompositionMode) {\n        ctx.fillStyle = this.compositionColor || 'black';\n        drawHeight = 1;\n        extraTop = lineHeight;\n      } else {\n        ctx.fillStyle = this.selectionColor;\n      }\n      if (this.direction === 'rtl') {\n        if (\n          this.textAlign === RIGHT ||\n          this.textAlign === JUSTIFY ||\n          this.textAlign === JUSTIFY_RIGHT\n        ) {\n          drawStart = this.width - drawStart - drawWidth;\n        } else if (this.textAlign === LEFT || this.textAlign === JUSTIFY_LEFT) {\n          drawStart = boundaries.left + lineOffset - boxEnd;\n        } else if (\n          this.textAlign === CENTER ||\n          this.textAlign === JUSTIFY_CENTER\n        ) {\n          drawStart = boundaries.left + lineOffset - boxEnd;\n        }\n      }\n      ctx.fillRect(\n        drawStart,\n        boundaries.top + boundaries.topOffset + extraTop,\n        drawWidth,\n        drawHeight\n      );\n      boundaries.topOffset += realLineHeight;\n    }\n  }\n\n  /**\n   * High level function to know the height of the cursor.\n   * the currentChar is the one that precedes the cursor\n   * Returns fontSize of char at the current cursor\n   * Unused from the library, is for the end user\n   * @return {Number} Character font size\n   */\n  getCurrentCharFontSize(): number {\n    const cp = this._getCurrentCharIndex();\n    return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n  }\n\n  /**\n   * High level function to know the color of the cursor.\n   * the currentChar is the one that precedes the cursor\n   * Returns color (fill) of char at the current cursor\n   * if the text object has a pattern or gradient for filler, it will return that.\n   * Unused by the library, is for the end user\n   * @return {String | TFiller} Character color (fill)\n   */\n  getCurrentCharColor(): string | TFiller | null {\n    const cp = this._getCurrentCharIndex();\n    return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n  }\n\n  /**\n   * Returns the cursor position for the getCurrent.. functions\n   * @private\n   */\n  _getCurrentCharIndex() {\n    const cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n      charIndex =\n        cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n    return { l: cursorPosition.lineIndex, c: charIndex };\n  }\n\n  dispose() {\n    this._exitEditing();\n    this.draggableTextDelegate.dispose();\n    super.dispose();\n  }\n}\n\nclassRegistry.setClass(IText);\n// legacy\nclassRegistry.setClass(IText, 'i-text');\n","import type { TClassProperties, TOptions } from '../typedefs';\nimport { IText } from './IText/IText';\nimport { classRegistry } from '../ClassRegistry';\nimport { createTextboxDefaultControls } from '../controls/commonControls';\nimport { JUSTIFY } from './Text/constants';\nimport type { TextStyleDeclaration } from './Text/StyledText';\nimport type { SerializedITextProps, ITextProps } from './IText/IText';\nimport type { ITextEvents } from './IText/ITextBehavior';\nimport type { TextLinesInfo } from './Text/Text';\n\n// @TODO: Many things here are configuration related and shouldn't be on the class nor prototype\n// regexes, list of properties that are not suppose to change by instances, magic consts.\n// this will be a separated effort\nexport const textboxDefaultValues: Partial<TClassProperties<Textbox>> = {\n  minWidth: 20,\n  dynamicMinWidth: 2,\n  lockScalingFlip: true,\n  noScaleCache: false,\n  _wordJoiners: /[ \\t\\r]/,\n  splitByGrapheme: false,\n};\n\nexport type GraphemeData = {\n  wordsData: {\n    word: string[];\n    width: number;\n  }[][];\n  largestWordWidth: number;\n};\n\nexport type StyleMap = Record<string, { line: number; offset: number }>;\n\n// @TODO this is not complete\ninterface UniqueTextboxProps {\n  minWidth: number;\n  splitByGrapheme: boolean;\n  dynamicMinWidth: number;\n  _wordJoiners: RegExp;\n}\n\nexport interface SerializedTextboxProps\n  extends SerializedITextProps,\n    Pick<UniqueTextboxProps, 'minWidth' | 'splitByGrapheme'> {}\n\nexport interface TextboxProps extends ITextProps, UniqueTextboxProps {}\n\n/**\n * Textbox class, based on IText, allows the user to resize the text rectangle\n * and wraps lines automatically. Textboxes have their Y scaling locked, the\n * user can only change width. Height is adjusted automatically based on the\n * wrapping of lines.\n */\nexport class Textbox<\n    Props extends TOptions<TextboxProps> = Partial<TextboxProps>,\n    SProps extends SerializedTextboxProps = SerializedTextboxProps,\n    EventSpec extends ITextEvents = ITextEvents\n  >\n  extends IText<Props, SProps, EventSpec>\n  implements UniqueTextboxProps\n{\n  /**\n   * Minimum width of textbox, in pixels.\n   * @type Number\n   * @default\n   */\n  declare minWidth: number;\n\n  /**\n   * Minimum calculated width of a textbox, in pixels.\n   * fixed to 2 so that an empty textbox cannot go to 0\n   * and is still selectable without text.\n   * @type Number\n   * @default\n   */\n  declare dynamicMinWidth: number;\n\n  /**\n   * Use this boolean property in order to split strings that have no white space concept.\n   * this is a cheap way to help with chinese/japanese\n   * @type Boolean\n   * @since 2.6.0\n   */\n  declare splitByGrapheme: boolean;\n\n  declare _wordJoiners: RegExp;\n\n  declare _styleMap: StyleMap;\n\n  declare isWrapping: boolean;\n\n  static type = 'Textbox';\n\n  static textLayoutProperties = [...IText.textLayoutProperties, 'width'];\n\n  static ownDefaults = textboxDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      controls: createTextboxDefaultControls(),\n      ...Textbox.ownDefaults,\n    };\n  }\n\n  /**\n   * Unlike superclass's version of this function, Textbox does not update\n   * its width.\n   * @private\n   * @override\n   */\n  initDimensions() {\n    if (!this.initialized) {\n      return;\n    }\n    this.isEditing && this.initDelayedCursor();\n    this._clearCache();\n    // clear dynamicMinWidth as it will be different after we re-wrap line\n    this.dynamicMinWidth = 0;\n    // wrap lines\n    this._styleMap = this._generateStyleMap(this._splitText());\n    // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n    if (this.dynamicMinWidth > this.width) {\n      this._set('width', this.dynamicMinWidth);\n    }\n    if (this.textAlign.includes(JUSTIFY)) {\n      // once text is measured we need to make space fatter to make justified text.\n      this.enlargeSpaces();\n    }\n    // clear cache and re-calculate height\n    this.height = this.calcTextHeight();\n  }\n\n  /**\n   * Generate an object that translates the style object so that it is\n   * broken up by visual lines (new lines and automatic wrapping).\n   * The original text styles object is broken up by actual lines (new lines only),\n   * which is only sufficient for Text / IText\n   * @private\n   */\n  _generateStyleMap(textInfo: TextLinesInfo): StyleMap {\n    let realLineCount = 0,\n      realLineCharCount = 0,\n      charCount = 0;\n    const map: StyleMap = {};\n\n    for (let i = 0; i < textInfo.graphemeLines.length; i++) {\n      if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n        realLineCharCount = 0;\n        charCount++;\n        realLineCount++;\n      } else if (\n        !this.splitByGrapheme &&\n        this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) &&\n        i > 0\n      ) {\n        // this case deals with space's that are removed from end of lines when wrapping\n        realLineCharCount++;\n        charCount++;\n      }\n\n      map[i] = { line: realLineCount, offset: realLineCharCount };\n\n      charCount += textInfo.graphemeLines[i].length;\n      realLineCharCount += textInfo.graphemeLines[i].length;\n    }\n\n    return map;\n  }\n\n  /**\n   * Returns true if object has a style property or has it on a specified line\n   * @param {Number} lineIndex\n   * @return {Boolean}\n   */\n  styleHas(property: keyof TextStyleDeclaration, lineIndex: number): boolean {\n    if (this._styleMap && !this.isWrapping) {\n      const map = this._styleMap[lineIndex];\n      if (map) {\n        lineIndex = map.line;\n      }\n    }\n    return super.styleHas(property, lineIndex);\n  }\n\n  /**\n   * Returns true if object has no styling or no styling in a line\n   * @param {Number} lineIndex , lineIndex is on wrapped lines.\n   * @return {Boolean}\n   */\n  isEmptyStyles(lineIndex: number): boolean {\n    if (!this.styles) {\n      return true;\n    }\n    let offset = 0,\n      nextLineIndex = lineIndex + 1,\n      nextOffset: number,\n      shouldLimit = false;\n    const map = this._styleMap[lineIndex],\n      mapNextLine = this._styleMap[lineIndex + 1];\n    if (map) {\n      lineIndex = map.line;\n      offset = map.offset;\n    }\n    if (mapNextLine) {\n      nextLineIndex = mapNextLine.line;\n      shouldLimit = nextLineIndex === lineIndex;\n      nextOffset = mapNextLine.offset;\n    }\n    const obj =\n      typeof lineIndex === 'undefined'\n        ? this.styles\n        : { line: this.styles[lineIndex] };\n    for (const p1 in obj) {\n      for (const p2 in obj[p1]) {\n        const p2Number = parseInt(p2, 10);\n        if (p2Number >= offset && (!shouldLimit || p2Number < nextOffset!)) {\n          // eslint-disable-next-line no-unused-vars\n          for (const p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @protected\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {TextStyleDeclaration} a style object reference to the existing one or a new empty object when undefined\n   */\n  _getStyleDeclaration(\n    lineIndex: number,\n    charIndex: number\n  ): TextStyleDeclaration {\n    if (this._styleMap && !this.isWrapping) {\n      const map = this._styleMap[lineIndex];\n      if (!map) {\n        return {};\n      }\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n    }\n    return super._getStyleDeclaration(lineIndex, charIndex);\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setStyleDeclaration(\n    lineIndex: number,\n    charIndex: number,\n    style: object\n  ) {\n    const map = this._styleMap[lineIndex];\n    super._setStyleDeclaration(map.line, map.offset + charIndex, style);\n  }\n\n  /**\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @private\n   */\n  protected _deleteStyleDeclaration(lineIndex: number, charIndex: number) {\n    const map = this._styleMap[lineIndex];\n    super._deleteStyleDeclaration(map.line, map.offset + charIndex);\n  }\n\n  /**\n   * probably broken need a fix\n   * Returns the real style line that correspond to the wrapped lineIndex line\n   * Used just to verify if the line does exist or not.\n   * @param {Number} lineIndex\n   * @returns {Boolean} if the line exists or not\n   * @private\n   */\n  protected _getLineStyle(lineIndex: number): boolean {\n    const map = this._styleMap[lineIndex];\n    return !!this.styles[map.line];\n  }\n\n  /**\n   * Set the line style to an empty object so that is initialized\n   * @param {Number} lineIndex\n   * @param {Object} style\n   * @private\n   */\n  protected _setLineStyle(lineIndex: number) {\n    const map = this._styleMap[lineIndex];\n    super._setLineStyle(map.line);\n  }\n\n  /**\n   * Wraps text using the 'width' property of Textbox. First this function\n   * splits text on newlines, so we preserve newlines entered by the user.\n   * Then it wraps each line using the width of the Textbox by calling\n   * _wrapLine().\n   * @param {Array} lines The string array of text that is split into lines\n   * @param {Number} desiredWidth width you want to wrap to\n   * @returns {Array} Array of lines\n   */\n  _wrapText(lines: string[], desiredWidth: number): string[][] {\n    this.isWrapping = true;\n    // extract all thewords and the widths to optimally wrap lines.\n    const data = this.getGraphemeDataForRender(lines);\n    const wrapped: string[][] = [];\n    for (let i = 0; i < data.wordsData.length; i++) {\n      wrapped.push(...this._wrapLine(i, desiredWidth, data));\n    }\n    this.isWrapping = false;\n    return wrapped;\n  }\n\n  /**\n   * For each line of text terminated by an hard line stop,\n   * measure each word width and extract the largest word from all.\n   * The returned words here are the one that at the end will be rendered.\n   * @param {string[]} lines the lines we need to measure\n   *\n   */\n  getGraphemeDataForRender(lines: string[]): GraphemeData {\n    const splitByGrapheme = this.splitByGrapheme,\n      infix = splitByGrapheme ? '' : ' ';\n\n    let largestWordWidth = 0;\n\n    const data = lines.map((line, lineIndex) => {\n      let offset = 0;\n      const wordsOrGraphemes = splitByGrapheme\n        ? this.graphemeSplit(line)\n        : this.wordSplit(line);\n\n      if (wordsOrGraphemes.length === 0) {\n        return [{ word: [], width: 0 }];\n      }\n\n      return wordsOrGraphemes.map((word: string) => {\n        // if using splitByGrapheme words are already in graphemes.\n        const graphemeArray = splitByGrapheme\n          ? [word]\n          : this.graphemeSplit(word);\n        const width = this._measureWord(graphemeArray, lineIndex, offset);\n        largestWordWidth = Math.max(width, largestWordWidth);\n        offset += graphemeArray.length + infix.length;\n        return { word: graphemeArray, width };\n      });\n    });\n\n    return {\n      wordsData: data,\n      largestWordWidth,\n    };\n  }\n\n  /**\n   * Helper function to measure a string of text, given its lineIndex and charIndex offset\n   * It gets called when charBounds are not available yet.\n   * Override if necessary\n   * Use with {@link Textbox#wordSplit}\n   *\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {String} text\n   * @param {number} lineIndex\n   * @param {number} charOffset\n   * @returns {number}\n   */\n  _measureWord(word: string[], lineIndex: number, charOffset = 0): number {\n    let width = 0,\n      prevGrapheme;\n    const skipLeft = true;\n    for (let i = 0, len = word.length; i < len; i++) {\n      const box = this._getGraphemeBox(\n        word[i],\n        lineIndex,\n        i + charOffset,\n        prevGrapheme,\n        skipLeft\n      );\n      width += box.kernedWidth;\n      prevGrapheme = word[i];\n    }\n    return width;\n  }\n\n  /**\n   * Override this method to customize word splitting\n   * Use with {@link Textbox#_measureWord}\n   * @param {string} value\n   * @returns {string[]} array of words\n   */\n  wordSplit(value: string): string[] {\n    return value.split(this._wordJoiners);\n  }\n\n  /**\n   * Wraps a line of text using the width of the Textbox as desiredWidth\n   * and leveraging the known width o words from GraphemeData\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} desiredWidth width you want to wrap the line to\n   * @param {GraphemeData} graphemeData an object containing all the lines' words width.\n   * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n   * @returns {Array} Array of line(s) into which the given text is wrapped\n   * to.\n   */\n  _wrapLine(\n    lineIndex: number,\n    desiredWidth: number,\n    { largestWordWidth, wordsData }: GraphemeData,\n    reservedSpace = 0\n  ): string[][] {\n    const additionalSpace = this._getWidthOfCharSpacing(),\n      splitByGrapheme = this.splitByGrapheme,\n      graphemeLines = [],\n      infix = splitByGrapheme ? '' : ' ';\n\n    let lineWidth = 0,\n      line: string[] = [],\n      // spaces in different languages?\n      offset = 0,\n      infixWidth = 0,\n      lineJustStarted = true;\n\n    desiredWidth -= reservedSpace;\n\n    const maxWidth = Math.max(\n      desiredWidth,\n      largestWordWidth,\n      this.dynamicMinWidth\n    );\n    // layout words\n    const data = wordsData[lineIndex];\n    offset = 0;\n    let i;\n    for (i = 0; i < data.length; i++) {\n      const { word, width: wordWidth } = data[i];\n      offset += word.length;\n\n      lineWidth += infixWidth + wordWidth - additionalSpace;\n      if (lineWidth > maxWidth && !lineJustStarted) {\n        graphemeLines.push(line);\n        line = [];\n        lineWidth = wordWidth;\n        lineJustStarted = true;\n      } else {\n        lineWidth += additionalSpace;\n      }\n\n      if (!lineJustStarted && !splitByGrapheme) {\n        line.push(infix);\n      }\n      line = line.concat(word);\n\n      infixWidth = splitByGrapheme\n        ? 0\n        : this._measureWord([infix], lineIndex, offset);\n      offset++;\n      lineJustStarted = false;\n    }\n\n    i && graphemeLines.push(line);\n\n    // TODO: this code is probably not necessary anymore.\n    // it can be moved out of this function since largestWordWidth is now\n    // known in advance\n    if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n      this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n    }\n    return graphemeLines;\n  }\n\n  /**\n   * Detect if the text line is ended with an hard break\n   * text and itext do not have wrapping, return false\n   * @param {Number} lineIndex text to split\n   * @return {Boolean}\n   */\n  isEndOfWrapping(lineIndex: number): boolean {\n    if (!this._styleMap[lineIndex + 1]) {\n      // is last line, return true;\n      return true;\n    }\n    if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n      // this is last line before a line break, return true;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Detect if a line has a linebreak and so we need to account for it when moving\n   * and counting style.\n   * This is important only for splitByGrapheme at the end of wrapping.\n   * If we are not wrapping the offset is always 1\n   * @return Number\n   */\n  missingNewlineOffset(lineIndex: number, skipWrapping?: boolean): 0 | 1 {\n    if (this.splitByGrapheme && !skipWrapping) {\n      return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n    }\n    return 1;\n  }\n\n  /**\n   * Gets lines of text to render in the Textbox. This function calculates\n   * text wrapping on the fly every time it is called.\n   * @param {String} text text to split\n   * @returns {Array} Array of lines in the Textbox.\n   * @override\n   */\n  _splitTextIntoLines(text: string) {\n    const newText = super._splitTextIntoLines(text),\n      graphemeLines = this._wrapText(newText.lines, this.width),\n      lines = new Array(graphemeLines.length);\n    for (let i = 0; i < graphemeLines.length; i++) {\n      lines[i] = graphemeLines[i].join('');\n    }\n    newText.lines = lines;\n    newText.graphemeLines = graphemeLines;\n    return newText;\n  }\n\n  getMinWidth() {\n    return Math.max(this.minWidth, this.dynamicMinWidth);\n  }\n\n  _removeExtraneousStyles() {\n    const linesToKeep = new Map();\n    for (const prop in this._styleMap) {\n      const propNumber = parseInt(prop, 10);\n      if (this._textLines[propNumber]) {\n        const lineIndex = this._styleMap[prop].line;\n        linesToKeep.set(`${lineIndex}`, true);\n      }\n    }\n    for (const prop in this.styles) {\n      if (!linesToKeep.has(prop)) {\n        delete this.styles[prop];\n      }\n    }\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @method toObject\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} object representation of an instance\n   */\n  // cant use ts-expect-error because of ts 5.3 cross check\n  // @ts-ignore TS this typing limitations\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    return super.toObject<T, K>([\n      'minWidth',\n      'splitByGrapheme',\n      ...propertiesToInclude,\n    ] as K[]) as Pick<T, K> & SProps;\n  }\n}\n\nclassRegistry.setClass(Textbox);\n","import { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport { sendPointToPlane } from '../../util/misc/planeChange';\nimport type { LayoutStrategyResult, StrictLayoutContext } from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { getObjectBounds } from './utils';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will adjust the bounding box to match the clip path bounding box.\n */\nexport class ClipPathLayout extends LayoutStrategy {\n  static readonly type = 'clip-path';\n\n  shouldPerformLayout(context: StrictLayoutContext): boolean {\n    return !!context.target.clipPath && super.shouldPerformLayout(context);\n  }\n\n  shouldLayoutClipPath() {\n    return false;\n  }\n\n  calcLayoutResult(\n    context: StrictLayoutContext,\n    objects: FabricObject[]\n  ): LayoutStrategyResult | undefined {\n    const { target } = context;\n    const { clipPath } = target;\n    if (!clipPath || !this.shouldPerformLayout(context)) {\n      return;\n    }\n    // TODO: remove stroke calculation from this case\n    const { width, height } = makeBoundingBoxFromPoints(\n      getObjectBounds(target, clipPath as FabricObject)\n    );\n    const size = new Point(width, height);\n    if (clipPath.absolutePositioned) {\n      //  we want the center point to exist in group's containing plane\n      const clipPathCenter = sendPointToPlane(\n        clipPath.getRelativeCenterPoint(),\n        undefined,\n        target.group?.calcTransformMatrix()\n      );\n      return {\n        center: clipPathCenter,\n        size,\n      };\n    } else {\n      //  we want the center point to exist in group's containing plane, so we send it upwards\n      const clipPathCenter = clipPath\n        .getRelativeCenterPoint()\n        .transform(target.calcOwnMatrix(), true);\n      if (this.shouldPerformLayout(context)) {\n        // the clip path is positioned relative to the group's center which is affected by the bbox\n        // so we first calculate the bbox\n        const { center = new Point(), correction = new Point() } =\n          this.calcBoundingBox(objects, context) || {};\n        return {\n          center: center.add(clipPathCenter),\n          correction: correction.subtract(clipPathCenter),\n          size,\n        };\n      } else {\n        return {\n          center: target.getRelativeCenterPoint().add(clipPathCenter),\n          size,\n        };\n      }\n    }\n  }\n}\n\nclassRegistry.setClass(ClipPathLayout);\n","import { Point } from '../../Point';\nimport type {\n  InitializationLayoutContext,\n  LayoutStrategyResult,\n  StrictLayoutContext,\n} from '../types';\nimport { LayoutStrategy } from './LayoutStrategy';\nimport { classRegistry } from '../../ClassRegistry';\n\n/**\n * Layout will keep target's initial size.\n */\nexport class FixedLayout extends LayoutStrategy {\n  static readonly type = 'fixed';\n\n  /**\n   * @override respect target's initial size\n   */\n  getInitialSize(\n    { target }: StrictLayoutContext & InitializationLayoutContext,\n    { size }: Pick<LayoutStrategyResult, 'center' | 'size'>\n  ): Point {\n    return new Point(target.width || size.x, target.height || size.y);\n  }\n}\n\nclassRegistry.setClass(FixedLayout);\n","import type { ControlRenderingStyleOverride } from '../controls/controlRendering';\nimport { classRegistry } from '../ClassRegistry';\nimport type { GroupProps } from './Group';\nimport { Group } from './Group';\nimport type { FabricObject } from './Object/FabricObject';\nimport {\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_REMOVED,\n} from '../LayoutManager/constants';\nimport type { TClassProperties } from '../typedefs';\nimport { log } from '../util/internals/console';\n\nexport type MultiSelectionStacking = 'canvas-stacking' | 'selection-order';\n\nexport interface ActiveSelectionOptions extends GroupProps {\n  multiSelectionStacking: MultiSelectionStacking;\n}\n\nconst activeSelectionDefaultValues: Partial<TClassProperties<ActiveSelection>> =\n  {\n    multiSelectionStacking: 'canvas-stacking',\n  };\n\n/**\n * Used by Canvas to manage selection.\n *\n * @example\n * class MyActiveSelection extends ActiveSelection {\n *   ...\n * }\n *\n * // override the default `ActiveSelection` class\n * classRegistry.setClass(MyActiveSelection)\n */\nexport class ActiveSelection extends Group {\n  static type = 'ActiveSelection';\n\n  static ownDefaults = activeSelectionDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return { ...super.getDefaults(), ...ActiveSelection.ownDefaults };\n  }\n\n  /**\n   * controls how selected objects are added during a multiselection event\n   * - `canvas-stacking` adds the selected object to the active selection while respecting canvas object stacking order\n   * - `selection-order` adds the selected object to the top of the stack,\n   * meaning that the stack is ordered by the order in which objects were selected\n   * @default `canvas-stacking`\n   */\n  declare multiSelectionStacking: MultiSelectionStacking;\n\n  /**\n   * @private\n   */\n  _shouldSetNestedCoords() {\n    return true;\n  }\n\n  /**\n   * @private\n   * @override we don't want the selection monitor to be active\n   */\n  __objectSelectionMonitor() {\n    //  noop\n  }\n\n  /**\n   * Adds objects with respect to {@link multiSelectionStacking}\n   * @param targets object to add to selection\n   */\n  multiSelectAdd(...targets: FabricObject[]) {\n    if (this.multiSelectionStacking === 'selection-order') {\n      this.add(...targets);\n    } else {\n      //  respect object stacking as it is on canvas\n      //  perf enhancement for large ActiveSelection: consider a binary search of `isInFrontOf`\n      targets.forEach((target) => {\n        const index = this._objects.findIndex((obj) => obj.isInFrontOf(target));\n        const insertAt =\n          index === -1\n            ? //  `target` is in front of all other objects\n              this.size()\n            : index;\n        this.insertAt(insertAt, target);\n      });\n    }\n  }\n\n  /**\n   * @override block ancestors/descendants of selected objects from being selected to prevent a circular object tree\n   */\n  canEnterGroup(object: FabricObject) {\n    if (\n      this.getObjects().some(\n        (o) => o.isDescendantOf(object) || object.isDescendantOf(o)\n      )\n    ) {\n      //  prevent circular object tree\n      log(\n        'error',\n        'ActiveSelection: circular object trees are not supported, this call has no effect'\n      );\n      return false;\n    }\n\n    return super.canEnterGroup(object);\n  }\n\n  /**\n   * Change an object so that it can be part of an active selection.\n   * this method is called by multiselectAdd from canvas code.\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object is in canvas coordinate plane\n   */\n  enterGroup(object: FabricObject, removeParentTransform?: boolean) {\n    // This condition check that the object has currently a group, and the group\n    // is also its parent, meaning that is not in an active selection, but is\n    // in a normal group.\n    if (object.parent && object.parent === object.group) {\n      // Disconnect the object from the group functionalities, but keep the ref parent intact\n      // for later re-enter\n      object.parent._exitGroup(object);\n      // in this case the object is probably inside an active selection.\n    } else if (object.group && object.parent !== object.group) {\n      // in this case group.remove will also clear the old parent reference.\n      object.group.remove(object);\n    }\n    // enter the active selection from a render perspective\n    // the object will be in the objects array of both the ActiveSelection and the Group\n    // but referenced in the group's _activeObjects so that it won't be rendered twice.\n    this._enterGroup(object, removeParentTransform);\n  }\n\n  /**\n   * we want objects to retain their canvas ref when exiting instance\n   * @private\n   * @param {FabricObject} object\n   * @param {boolean} [removeParentTransform] true if object should exit group without applying group's transform to it\n   */\n  exitGroup(object: FabricObject, removeParentTransform?: boolean) {\n    this._exitGroup(object, removeParentTransform);\n    // return to parent\n    object.parent && object.parent._enterGroup(object, true);\n  }\n\n  /**\n   * @private\n   * @param {'added'|'removed'} type\n   * @param {FabricObject[]} targets\n   */\n  _onAfterObjectsChange(type: 'added' | 'removed', targets: FabricObject[]) {\n    super._onAfterObjectsChange(type, targets);\n    const groups = new Set<Group>();\n    targets.forEach((object) => {\n      const { parent } = object;\n      parent && groups.add(parent);\n    });\n    if (type === LAYOUT_TYPE_REMOVED) {\n      //  invalidate groups' layout and mark as dirty\n      groups.forEach((group) => {\n        group._onAfterObjectsChange(LAYOUT_TYPE_ADDED, targets);\n      });\n    } else {\n      //  mark groups as dirty\n      groups.forEach((group) => {\n        group._set('dirty', true);\n      });\n    }\n  }\n\n  /**\n   * @override remove all objects\n   */\n  onDeselect() {\n    this.removeAll();\n    return false;\n  }\n\n  /**\n   * Returns string representation of a group\n   * @return {String}\n   */\n  toString() {\n    return `#<ActiveSelection: (${this.complexity()})>`;\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * objectCaching is a global flag, wins over everything\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    return false;\n  }\n\n  /**\n   * Check if this group or its parent group are caching, recursively up\n   * @return {Boolean}\n   */\n  isOnACache() {\n    return false;\n  }\n\n  /**\n   * Renders controls and borders for the object\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   * @param {Object} [styleOverride] properties to override the object style\n   * @param {Object} [childrenOverride] properties to override the children overrides\n   */\n  _renderControls(\n    ctx: CanvasRenderingContext2D,\n    styleOverride?: ControlRenderingStyleOverride,\n    childrenOverride?: ControlRenderingStyleOverride\n  ) {\n    ctx.save();\n    ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n    super._renderControls(ctx, styleOverride);\n    const options = {\n      hasControls: false,\n      ...childrenOverride,\n      forActiveSelection: true,\n    };\n    for (let i = 0; i < this._objects.length; i++) {\n      this._objects[i]._renderControls(ctx, options);\n    }\n    ctx.restore();\n  }\n}\n\nclassRegistry.setClass(ActiveSelection);\nclassRegistry.setClass(ActiveSelection, 'activeSelection');\n","/**\n * Canvas 2D filter backend.\n */\nimport type { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TPipelineResources } from './typedefs';\n\nexport class Canvas2dFilterBackend {\n  /**\n   * Experimental. This object is a sort of repository of help layers used to avoid\n   * of recreating them during frequent filtering. If you are previewing a filter with\n   * a slider you probably do not want to create help layers every filter step.\n   * in this object there will be appended some canvases, created once, resized sometimes\n   * cleared never. Clearing is left to the developer.\n   **/\n  resources: TPipelineResources = {};\n\n  /**\n   * Apply a set of filters against a source image and draw the filtered output\n   * to the provided destination canvas.\n   *\n   * @param {EnhancedFilter} filters The filter to apply.\n   * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n   * @param {Number} sourceWidth The width of the source input.\n   * @param {Number} sourceHeight The height of the source input.\n   * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n   */\n  applyFilters(\n    filters: BaseFilter[],\n    sourceElement: CanvasImageSource,\n    sourceWidth: number,\n    sourceHeight: number,\n    targetCanvas: HTMLCanvasElement\n  ): T2DPipelineState | void {\n    const ctx = targetCanvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n    const imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n    const originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n    const pipelineState: T2DPipelineState = {\n      sourceWidth,\n      sourceHeight,\n      imageData,\n      originalEl: sourceElement,\n      originalImageData,\n      canvasEl: targetCanvas,\n      ctx,\n      filterBackend: this,\n    };\n    filters.forEach((filter) => {\n      filter.applyTo(pipelineState);\n    });\n    const { imageData: imageDataPostFilter } = pipelineState;\n    if (\n      imageDataPostFilter.width !== sourceWidth ||\n      imageDataPostFilter.height !== sourceHeight\n    ) {\n      targetCanvas.width = imageDataPostFilter.width;\n      targetCanvas.height = imageDataPostFilter.height;\n    }\n    ctx.putImageData(imageDataPostFilter, 0, 0);\n    return pipelineState;\n  }\n}\n","import { config } from '../config';\nimport { createCanvasElement } from '../util/misc/dom';\nimport type {\n  TWebGLPipelineState,\n  TProgramCache,\n  TTextureCache,\n  TPipelineResources,\n} from './typedefs';\nimport type { BaseFilter } from './BaseFilter';\n\nexport class WebGLFilterBackend {\n  declare tileSize: number;\n\n  /**\n   * Define ...\n   **/\n  aPosition: Float32Array = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n\n  /**\n   * If GLPut data is the fastest operation, or if forced, this buffer will be used\n   * to transfer the data back in the 2d logic\n   **/\n  declare imageBuffer?: ArrayBuffer;\n\n  declare canvas: HTMLCanvasElement;\n\n  /**\n   * The Webgl context that will execute the operations for filtering\n   **/\n  declare gl: WebGLRenderingContext;\n\n  /**\n   * Keyed map for shader cache\n   **/\n  declare programCache: TProgramCache;\n\n  /**\n   * Keyed map for texture cache\n   **/\n  declare textureCache: TTextureCache;\n\n  /**\n   * Contains GPU info for debug\n   **/\n  declare gpuInfo: any;\n\n  /**\n   * Experimental. This object is a sort of repository of help layers used to avoid\n   * of recreating them during frequent filtering. If you are previewing a filter with\n   * a slider you probably do not want to create help layers every filter step.\n   * in this object there will be appended some canvases, created once, resized sometimes\n   * cleared never. Clearing is left to the developer.\n   **/\n  resources: TPipelineResources = {};\n\n  constructor({ tileSize = config.textureSize } = {}) {\n    this.tileSize = tileSize;\n    this.setupGLContext(tileSize, tileSize);\n    this.captureGPUInfo();\n  }\n\n  /**\n   * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n   */\n  setupGLContext(width: number, height: number): void {\n    this.dispose();\n    this.createWebGLCanvas(width, height);\n  }\n\n  /**\n   * Create a canvas element and associated WebGL context and attaches them as\n   * class properties to the GLFilterBackend class.\n   */\n  createWebGLCanvas(width: number, height: number): void {\n    const canvas = createCanvasElement();\n    canvas.width = width;\n    canvas.height = height;\n    const glOptions = {\n        alpha: true,\n        premultipliedAlpha: false,\n        depth: false,\n        stencil: false,\n        antialias: false,\n      },\n      gl = canvas.getContext('webgl', glOptions) as WebGLRenderingContext;\n\n    if (!gl) {\n      return;\n    }\n    gl.clearColor(0, 0, 0, 0);\n    // this canvas can fire webglcontextlost and webglcontextrestored\n    this.canvas = canvas;\n    this.gl = gl;\n  }\n\n  /**\n   * Attempts to apply the requested filters to the source provided, drawing the filtered output\n   * to the provided target canvas.\n   *\n   * @param {Array} filters The filters to apply.\n   * @param {TexImageSource} source The source to be filtered.\n   * @param {Number} width The width of the source input.\n   * @param {Number} height The height of the source input.\n   * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n   * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n   * omitted, caching will be skipped.\n   */\n  applyFilters(\n    filters: BaseFilter[],\n    source: TexImageSource,\n    width: number,\n    height: number,\n    targetCanvas: HTMLCanvasElement,\n    cacheKey?: string\n  ): TWebGLPipelineState | undefined {\n    const gl = this.gl;\n    const ctx = targetCanvas.getContext('2d');\n    if (!gl || !ctx) {\n      return;\n    }\n    let cachedTexture;\n    if (cacheKey) {\n      cachedTexture = this.getCachedTexture(cacheKey, source);\n    }\n    const pipelineState: TWebGLPipelineState = {\n      originalWidth:\n        (source as HTMLImageElement).width ||\n        // @ts-expect-error is this a bug? should this be naturalWidth? or is this the pipeline state?\n        (source as HTMLImageElement).originalWidth ||\n        0,\n      originalHeight:\n        (source as HTMLImageElement).height ||\n        // @ts-expect-error is this a bug? should this be naturalHeight? or is this the pipeline state?\n        (source as HTMLImageElement).originalHeight ||\n        0,\n      sourceWidth: width,\n      sourceHeight: height,\n      destinationWidth: width,\n      destinationHeight: height,\n      context: gl,\n      sourceTexture: this.createTexture(\n        gl,\n        width,\n        height,\n        !cachedTexture ? source : undefined\n      ),\n      targetTexture: this.createTexture(gl, width, height),\n      originalTexture:\n        cachedTexture ||\n        this.createTexture(\n          gl,\n          width,\n          height,\n          !cachedTexture ? source : undefined\n        )!,\n      passes: filters.length,\n      webgl: true,\n      aPosition: this.aPosition,\n      programCache: this.programCache,\n      pass: 0,\n      filterBackend: this,\n      targetCanvas: targetCanvas,\n    };\n    const tempFbo = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n    filters.forEach((filter: any) => {\n      filter && filter.applyTo(pipelineState);\n    });\n    resizeCanvasIfNeeded(pipelineState);\n    this.copyGLTo2D(gl, pipelineState);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.deleteTexture(pipelineState.sourceTexture);\n    gl.deleteTexture(pipelineState.targetTexture);\n    gl.deleteFramebuffer(tempFbo);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    return pipelineState;\n  }\n\n  /**\n   * Detach event listeners, remove references, and clean up caches.\n   */\n  dispose() {\n    if (this.canvas) {\n      // we are disposing, we don't care about the fact\n      // that the canvas shouldn't be null.\n      // @ts-expect-error disposing\n      this.canvas = null;\n      // @ts-expect-error disposing\n      this.gl = null;\n    }\n    this.clearWebGLCaches();\n  }\n\n  /**\n   * Wipe out WebGL-related caches.\n   */\n  clearWebGLCaches() {\n    this.programCache = {};\n    this.textureCache = {};\n  }\n\n  /**\n   * Create a WebGL texture object.\n   *\n   * Accepts specific dimensions to initialize the texture to or a source image.\n   *\n   * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n   * @param {number} width The width to initialize the texture at.\n   * @param {number} height The height to initialize the texture.\n   * @param {TexImageSource} textureImageSource A source for the texture data.\n   * @param {number} filter gl.NEAREST default or gl.LINEAR filters for the texture.\n   * This filter is very useful for LUTs filters. If you need interpolation use gl.LINEAR\n   * @returns {WebGLTexture}\n   */\n  createTexture(\n    gl: WebGLRenderingContext,\n    width: number,\n    height: number,\n    textureImageSource?: TexImageSource,\n    filter?:\n      | WebGLRenderingContextBase['NEAREST']\n      | WebGLRenderingContextBase['LINEAR']\n  ) {\n    const {\n      NEAREST,\n      TEXTURE_2D,\n      RGBA,\n      UNSIGNED_BYTE,\n      CLAMP_TO_EDGE,\n      TEXTURE_MAG_FILTER,\n      TEXTURE_MIN_FILTER,\n      TEXTURE_WRAP_S,\n      TEXTURE_WRAP_T,\n    } = gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(TEXTURE_2D, texture);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_MAG_FILTER, filter || NEAREST);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_MIN_FILTER, filter || NEAREST);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n    if (textureImageSource) {\n      gl.texImage2D(\n        TEXTURE_2D,\n        0,\n        RGBA,\n        RGBA,\n        UNSIGNED_BYTE,\n        textureImageSource\n      );\n    } else {\n      gl.texImage2D(\n        TEXTURE_2D,\n        0,\n        RGBA,\n        width,\n        height,\n        0,\n        RGBA,\n        UNSIGNED_BYTE,\n        null\n      );\n    }\n    return texture;\n  }\n\n  /**\n   * Can be optionally used to get a texture from the cache array\n   *\n   * If an existing texture is not found, a new texture is created and cached.\n   *\n   * @param {String} uniqueId A cache key to use to find an existing texture.\n   * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n   * texture cache entry if one does not already exist.\n   */\n  getCachedTexture(\n    uniqueId: string,\n    textureImageSource: TexImageSource,\n    filter?:\n      | WebGLRenderingContextBase['NEAREST']\n      | WebGLRenderingContextBase['LINEAR']\n  ): WebGLTexture | null {\n    const { textureCache } = this;\n    if (textureCache[uniqueId]) {\n      return textureCache[uniqueId];\n    } else {\n      const texture = this.createTexture(\n        this.gl,\n        (textureImageSource as HTMLImageElement).width,\n        (textureImageSource as HTMLImageElement).height,\n        textureImageSource,\n        filter\n      );\n      if (texture) {\n        textureCache[uniqueId] = texture;\n      }\n      return texture;\n    }\n  }\n\n  /**\n   * Clear out cached resources related to a source image that has been\n   * filtered previously.\n   *\n   * @param {String} cacheKey The cache key provided when the source image was filtered.\n   */\n  evictCachesForKey(cacheKey: string) {\n    if (this.textureCache[cacheKey]) {\n      this.gl.deleteTexture(this.textureCache[cacheKey]);\n      delete this.textureCache[cacheKey];\n    }\n  }\n\n  /**\n   * Copy an input WebGL canvas on to an output 2D canvas.\n   *\n   * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n   * desired output image appearing in the bottom-left corner of the WebGL canvas.\n   *\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\n   */\n  copyGLTo2D(gl: WebGLRenderingContext, pipelineState: TWebGLPipelineState) {\n    const glCanvas = gl.canvas,\n      targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    ctx.translate(0, targetCanvas.height); // move it down again\n    ctx.scale(1, -1); // vertical flip\n    // where is my image on the big glcanvas?\n    const sourceY = glCanvas.height - targetCanvas.height;\n    ctx.drawImage(\n      glCanvas,\n      0,\n      sourceY,\n      targetCanvas.width,\n      targetCanvas.height,\n      0,\n      0,\n      targetCanvas.width,\n      targetCanvas.height\n    );\n  }\n\n  /**\n   * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n   * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n   *\n   * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n   * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n   * @param {Object} pipelineState The 2D target canvas to copy on to.\n   */\n  copyGLTo2DPutImageData(\n    this: Required<WebGLFilterBackend>,\n    gl: WebGLRenderingContext,\n    pipelineState: TWebGLPipelineState\n  ) {\n    const targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n    if (!ctx) {\n      return;\n    }\n    const u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n    const u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n    gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n    const imgData = new ImageData(u8Clamped, dWidth, dHeight);\n    ctx.putImageData(imgData, 0, 0);\n  }\n\n  /**\n   * Attempt to extract GPU information strings from a WebGL context.\n   *\n   * Useful information when debugging or blacklisting specific GPUs.\n   *\n   * @returns {Object} A GPU info object with renderer and vendor strings.\n   */\n  captureGPUInfo() {\n    if (this.gpuInfo) {\n      return this.gpuInfo;\n    }\n    const gl = this.gl,\n      gpuInfo = { renderer: '', vendor: '' };\n    if (!gl) {\n      return gpuInfo;\n    }\n    const ext = gl.getExtension('WEBGL_debug_renderer_info');\n    if (ext) {\n      const renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n      const vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n      if (renderer) {\n        gpuInfo.renderer = renderer.toLowerCase();\n      }\n      if (vendor) {\n        gpuInfo.vendor = vendor.toLowerCase();\n      }\n    }\n    this.gpuInfo = gpuInfo;\n    return gpuInfo;\n  }\n}\n\nfunction resizeCanvasIfNeeded(pipelineState: TWebGLPipelineState): void {\n  const targetCanvas = pipelineState.targetCanvas,\n    width = targetCanvas.width,\n    height = targetCanvas.height,\n    dWidth = pipelineState.destinationWidth,\n    dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n","import { config } from '../config';\nimport { getEnv } from '../env';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { Canvas2dFilterBackend } from './Canvas2dFilterBackend';\nimport { WebGLFilterBackend } from './WebGLFilterBackend';\n\nexport type FilterBackend = WebGLFilterBackend | Canvas2dFilterBackend;\n\nlet filterBackend: FilterBackend;\n\n/**\n * Verifies if it is possible to initialize webgl or fallback on a canvas2d filtering backend\n */\nexport function initFilterBackend(): FilterBackend {\n  const { WebGLProbe } = getEnv();\n  WebGLProbe.queryWebGL(createCanvasElement());\n  if (config.enableGLFiltering && WebGLProbe.isSupported(config.textureSize)) {\n    return new WebGLFilterBackend({ tileSize: config.textureSize });\n  } else {\n    return new Canvas2dFilterBackend();\n  }\n}\n\n/**\n * Get the current fabricJS filter backend  or initialize one if not available yet\n * @param [strict] pass `true` to create the backend if it wasn't created yet (default behavior),\n * pass `false` to get the backend ref without mutating it\n */\nexport function getFilterBackend(strict = true): FilterBackend {\n  if (!filterBackend && strict) {\n    filterBackend = initFilterBackend();\n  }\n  return filterBackend;\n}\n\nexport function setFilterBackend(backend: FilterBackend) {\n  filterBackend = backend;\n}\n","import { getFabricDocument, getEnv } from '../env';\nimport type { BaseFilter } from '../filters/BaseFilter';\nimport { getFilterBackend } from '../filters/FilterBackend';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type {\n  TClassProperties,\n  TCrossOrigin,\n  TSize,\n  Abortable,\n  TOptions,\n} from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { findScaleToCover, findScaleToFit } from '../util/misc/findScaleTo';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n  loadImage,\n} from '../util/misc/objectEnlive';\nimport { parsePreserveAspectRatioAttribute } from '../util/misc/svgParsing';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport { WebGLFilterBackend } from '../filters/WebGLFilterBackend';\nimport { NONE } from '../constants';\nimport { getDocumentFromElement } from '../util/dom_misc';\nimport type { CSSRules } from '../parser/typedefs';\nimport type { Resize } from '../filters/Resize';\nimport type { TCachedFabricObject } from './Object/Object';\nimport { log } from '../util/internals/console';\n\n// @todo Would be nice to have filtering code not imported directly.\n\nexport type ImageSource =\n  | HTMLImageElement\n  | HTMLVideoElement\n  | HTMLCanvasElement;\n\ninterface UniqueImageProps {\n  srcFromAttribute: boolean;\n  minimumScaleTrigger: number;\n  cropX: number;\n  cropY: number;\n  imageSmoothing: boolean;\n  filters: BaseFilter[];\n  resizeFilter?: Resize;\n}\n\nexport const imageDefaultValues: Partial<TClassProperties<FabricImage>> = {\n  strokeWidth: 0,\n  srcFromAttribute: false,\n  minimumScaleTrigger: 0.5,\n  cropX: 0,\n  cropY: 0,\n  imageSmoothing: true,\n};\n\nexport interface SerializedImageProps extends SerializedObjectProps {\n  src: string;\n  crossOrigin: TCrossOrigin;\n  filters: any[];\n  resizeFilter?: any;\n  cropX: number;\n  cropY: number;\n}\n\nexport interface ImageProps extends FabricObjectProps, UniqueImageProps {}\n\nconst IMAGE_PROPS = ['cropX', 'cropY'] as const;\n\n/**\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n */\nexport class FabricImage<\n    Props extends TOptions<ImageProps> = Partial<ImageProps>,\n    SProps extends SerializedImageProps = SerializedImageProps,\n    EventSpec extends ObjectEvents = ObjectEvents\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements ImageProps\n{\n  /**\n   * When calling {@link FabricImage.getSrc}, return value from element src with `element.getAttribute('src')`.\n   * This allows for relative urls as image src.\n   * @since 2.7.0\n   * @type Boolean\n   * @default false\n   */\n  declare srcFromAttribute: boolean;\n\n  /**\n   * private\n   * contains last value of scaleX to detect\n   * if the Image got resized after the last Render\n   * @type Number\n   */\n  protected _lastScaleX = 1;\n\n  /**\n   * private\n   * contains last value of scaleY to detect\n   * if the Image got resized after the last Render\n   * @type Number\n   */\n  protected _lastScaleY = 1;\n\n  /**\n   * private\n   * contains last value of scaling applied by the apply filter chain\n   * @type Number\n   */\n  protected _filterScalingX = 1;\n\n  /**\n   * private\n   * contains last value of scaling applied by the apply filter chain\n   * @type Number\n   */\n  protected _filterScalingY = 1;\n\n  /**\n   * minimum scale factor under which any resizeFilter is triggered to resize the image\n   * 0 will disable the automatic resize. 1 will trigger automatically always.\n   * number bigger than 1 are not implemented yet.\n   * @type Number\n   */\n  declare minimumScaleTrigger: number;\n\n  /**\n   * key used to retrieve the texture representing this image\n   * @since 2.0.0\n   * @type String\n   * @default\n   */\n  declare cacheKey: string;\n\n  /**\n   * Image crop in pixels from original image size.\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  declare cropX: number;\n\n  /**\n   * Image crop in pixels from original image size.\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  declare cropY: number;\n\n  /**\n   * Indicates whether this canvas will use image smoothing when painting this image.\n   * Also influence if the cacheCanvas for this image uses imageSmoothing\n   * @since 4.0.0-beta.11\n   * @type Boolean\n   * @default\n   */\n  declare imageSmoothing: boolean;\n\n  declare preserveAspectRatio: string;\n\n  protected declare src: string;\n\n  declare filters: BaseFilter[];\n  declare resizeFilter: Resize;\n\n  declare _element: ImageSource;\n  declare _filteredEl?: HTMLCanvasElement;\n  declare _originalElement: ImageSource;\n\n  static type = 'Image';\n\n  static cacheProperties = [...cacheProperties, ...IMAGE_PROPS];\n\n  static ownDefaults = imageDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...FabricImage.ownDefaults,\n    };\n  }\n  /**\n   * Constructor\n   * Image can be initialized with any canvas drawable or a string.\n   * The string should be a url and will be loaded as an image.\n   * Canvas and Image element work out of the box, while videos require extra code to work.\n   * Please check video element events for seeking.\n   * @param {ImageSource | string} element Image element\n   * @param {Object} [options] Options object\n   */\n  constructor(elementId: string, options?: Props);\n  constructor(element: ImageSource, options?: Props);\n  constructor(arg0: ImageSource | string, options: Props = {} as Props) {\n    super({ filters: [], ...options });\n    this.cacheKey = `texture${uid()}`;\n    this.setElement(\n      typeof arg0 === 'string'\n        ? ((\n            (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\n            getFabricDocument()\n          ).getElementById(arg0) as ImageSource)\n        : arg0,\n      options\n    );\n  }\n\n  /**\n   * Returns image element which this instance if based on\n   */\n  getElement() {\n    return this._element;\n  }\n\n  /**\n   * Sets image element for this instance to a specified one.\n   * If filters defined they are applied to new image.\n   * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n   * @param {HTMLImageElement} element\n   * @param {Partial<TSize>} [size] Options object\n   */\n  setElement(element: ImageSource, size: Partial<TSize> = {}) {\n    this.removeTexture(this.cacheKey);\n    this.removeTexture(`${this.cacheKey}_filtered`);\n    this._element = element;\n    this._originalElement = element;\n    this._setWidthHeight(size);\n    element.classList.add(FabricImage.CSS_CANVAS);\n    if (this.filters.length !== 0) {\n      this.applyFilters();\n    }\n    // resizeFilters work on the already filtered copy.\n    // we need to apply resizeFilters AFTER normal filters.\n    // applyResizeFilters is run more often than normal filters\n    // and is triggered by user interactions rather than dev code\n    if (this.resizeFilter) {\n      this.applyResizeFilters();\n    }\n  }\n\n  /**\n   * Delete a single texture if in webgl mode\n   */\n  removeTexture(key: string) {\n    const backend = getFilterBackend(false);\n    if (backend instanceof WebGLFilterBackend) {\n      backend.evictCachesForKey(key);\n    }\n  }\n\n  /**\n   * Delete textures, reference to elements and eventually JSDOM cleanup\n   */\n  dispose() {\n    super.dispose();\n    this.removeTexture(this.cacheKey);\n    this.removeTexture(`${this.cacheKey}_filtered`);\n    this._cacheContext = null;\n    (\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'] as const\n    ).forEach((elementKey) => {\n      const el = this[elementKey];\n      el && getEnv().dispose(el);\n      // @ts-expect-error disposing\n      this[elementKey] = undefined;\n    });\n  }\n\n  /**\n   * Get the crossOrigin value (of the corresponding image element)\n   */\n  getCrossOrigin(): string | null {\n    return (\n      this._originalElement &&\n      ((this._originalElement as any).crossOrigin || null)\n    );\n  }\n\n  /**\n   * Returns original size of an image\n   */\n  getOriginalSize() {\n    const element = this.getElement() as any;\n    if (!element) {\n      return {\n        width: 0,\n        height: 0,\n      };\n    }\n    return {\n      width: element.naturalWidth || element.width,\n      height: element.naturalHeight || element.height,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _stroke(ctx: CanvasRenderingContext2D) {\n    if (!this.stroke || this.strokeWidth === 0) {\n      return;\n    }\n    const w = this.width / 2,\n      h = this.height / 2;\n    ctx.beginPath();\n    ctx.moveTo(-w, -h);\n    ctx.lineTo(w, -h);\n    ctx.lineTo(w, h);\n    ctx.lineTo(-w, h);\n    ctx.lineTo(-w, -h);\n    ctx.closePath();\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    const filters: Record<string, any>[] = [];\n    this.filters.forEach((filterObj) => {\n      filterObj && filters.push(filterObj.toObject());\n    });\n    return {\n      ...super.toObject([...IMAGE_PROPS, ...propertiesToInclude]),\n      src: this.getSrc(),\n      crossOrigin: this.getCrossOrigin(),\n      filters,\n      ...(this.resizeFilter\n        ? { resizeFilter: this.resizeFilter.toObject() }\n        : {}),\n    };\n  }\n\n  /**\n   * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,height.\n   * @return {Boolean}\n   */\n  hasCrop() {\n    return (\n      !!this.cropX ||\n      !!this.cropY ||\n      this.width < this._element.width ||\n      this.height < this._element.height\n    );\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {string[]} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const imageMarkup: string[] = [],\n      element = this._element,\n      x = -this.width / 2,\n      y = -this.height / 2;\n    let svgString: string[] = [],\n      strokeSvg: string[] = [],\n      clipPath = '',\n      imageRendering = '';\n    if (!element) {\n      return [];\n    }\n    if (this.hasCrop()) {\n      const clipPathId = uid();\n      svgString.push(\n        '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n        '\\t<rect x=\"' +\n          x +\n          '\" y=\"' +\n          y +\n          '\" width=\"' +\n          this.width +\n          '\" height=\"' +\n          this.height +\n          '\" />\\n',\n        '</clipPath>\\n'\n      );\n      clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n    }\n    if (!this.imageSmoothing) {\n      imageRendering = ' image-rendering=\"optimizeSpeed\"';\n    }\n    imageMarkup.push(\n      '\\t<image ',\n      'COMMON_PARTS',\n      `xlink:href=\"${this.getSvgSrc(true)}\" x=\"${x - this.cropX}\" y=\"${\n        y - this.cropY\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n      }\" width=\"${\n        element.width || (element as HTMLImageElement).naturalWidth\n      }\" height=\"${\n        element.height || (element as HTMLImageElement).naturalHeight\n      }\"${imageRendering}${clipPath}></image>\\n`\n    );\n\n    if (this.stroke || this.strokeDashArray) {\n      const origFill = this.fill;\n      this.fill = null;\n      strokeSvg = [\n        `\\t<rect x=\"${x}\" y=\"${y}\" width=\"${this.width}\" height=\"${\n          this.height\n        }\" style=\"${this.getSvgStyles()}\" />\\n`,\n      ];\n      this.fill = origFill;\n    }\n    if (this.paintFirst !== 'fill') {\n      svgString = svgString.concat(strokeSvg, imageMarkup);\n    } else {\n      svgString = svgString.concat(imageMarkup, strokeSvg);\n    }\n    return svgString;\n  }\n\n  /**\n   * Returns source of an image\n   * @param {Boolean} filtered indicates if the src is needed for svg\n   * @return {String} Source of an image\n   */\n  getSrc(filtered?: boolean): string {\n    const element = filtered ? this._element : this._originalElement;\n    if (element) {\n      if ((element as HTMLCanvasElement).toDataURL) {\n        return (element as HTMLCanvasElement).toDataURL();\n      }\n\n      if (this.srcFromAttribute) {\n        return element.getAttribute('src') || '';\n      } else {\n        return (element as HTMLImageElement).src;\n      }\n    } else {\n      return this.src || '';\n    }\n  }\n\n  /**\n   * Alias for getSrc\n   * @param filtered\n   * @deprecated\n   */\n  getSvgSrc(filtered?: boolean) {\n    return this.getSrc(filtered);\n  }\n\n  /**\n   * Loads and sets source of an image\\\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\n   * @param {String} src Source string (URL)\n   * @param {LoadImageOptions} [options] Options object\n   */\n  setSrc(src: string, { crossOrigin, signal }: LoadImageOptions = {}) {\n    return loadImage(src, { crossOrigin, signal }).then((img) => {\n      typeof crossOrigin !== 'undefined' && this.set({ crossOrigin });\n      this.setElement(img);\n    });\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {String} String representation of an instance\n   */\n  toString() {\n    return `#<Image: { src: \"${this.getSrc()}\" }>`;\n  }\n\n  applyResizeFilters() {\n    const filter = this.resizeFilter,\n      minimumScale = this.minimumScaleTrigger,\n      objectScale = this.getTotalObjectScaling(),\n      scaleX = objectScale.x,\n      scaleY = objectScale.y,\n      elementToFilter = this._filteredEl || this._originalElement;\n    if (this.group) {\n      this.set('dirty', true);\n    }\n    if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n      this._element = elementToFilter;\n      this._filterScalingX = 1;\n      this._filterScalingY = 1;\n      this._lastScaleX = scaleX;\n      this._lastScaleY = scaleY;\n      return;\n    }\n    const canvasEl = createCanvasElement(),\n      sourceWidth = elementToFilter.width,\n      sourceHeight = elementToFilter.height;\n    canvasEl.width = sourceWidth;\n    canvasEl.height = sourceHeight;\n    this._element = canvasEl;\n    this._lastScaleX = filter.scaleX = scaleX;\n    this._lastScaleY = filter.scaleY = scaleY;\n    getFilterBackend().applyFilters(\n      [filter as BaseFilter],\n      elementToFilter,\n      sourceWidth,\n      sourceHeight,\n      this._element\n    );\n    this._filterScalingX = canvasEl.width / this._originalElement.width;\n    this._filterScalingY = canvasEl.height / this._originalElement.height;\n  }\n\n  /**\n   * Applies filters assigned to this image (from \"filters\" array) or from filter param\n   * @method applyFilters\n   * @param {Array} filters to be applied\n   * @param {Boolean} forResizing specify if the filter operation is a resize operation\n   */\n  applyFilters(filters: BaseFilter[] = this.filters || []) {\n    filters = filters.filter((filter) => filter && !filter.isNeutralState());\n    this.set('dirty', true);\n\n    // needs to clear out or WEBGL will not resize correctly\n    this.removeTexture(`${this.cacheKey}_filtered`);\n\n    if (filters.length === 0) {\n      this._element = this._originalElement;\n      // this is unsafe and needs to be rethinkend\n      this._filteredEl = undefined;\n      this._filterScalingX = 1;\n      this._filterScalingY = 1;\n      return;\n    }\n\n    const imgElement = this._originalElement,\n      sourceWidth =\n        (imgElement as HTMLImageElement).naturalWidth || imgElement.width,\n      sourceHeight =\n        (imgElement as HTMLImageElement).naturalHeight || imgElement.height;\n\n    if (this._element === this._originalElement) {\n      // if the _element a reference to _originalElement\n      // we need to create a new element to host the filtered pixels\n      const canvasEl = createCanvasElement();\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._filteredEl = canvasEl;\n    } else if (this._filteredEl) {\n      // if the _element is it own element,\n      // and we also have a _filteredEl, then we clean up _filteredEl\n      // and we assign it to _element.\n      // in this way we invalidate the eventual old resize filtered element\n      this._element = this._filteredEl;\n      this._filteredEl\n        .getContext('2d')!\n        .clearRect(0, 0, sourceWidth, sourceHeight);\n      // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n      this._lastScaleX = 1;\n      this._lastScaleY = 1;\n    }\n    getFilterBackend().applyFilters(\n      filters,\n      this._originalElement,\n      sourceWidth,\n      sourceHeight,\n      this._element as HTMLCanvasElement\n    );\n    if (\n      this._originalElement.width !== this._element.width ||\n      this._originalElement.height !== this._element.height\n    ) {\n      this._filterScalingX = this._element.width / this._originalElement.width;\n      this._filterScalingY =\n        this._element.height / this._originalElement.height;\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\n    if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n      this.applyResizeFilters();\n    }\n    this._stroke(ctx);\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Paint the cached copy of the object on the target context.\n   * it will set the imageSmoothing for the draw operation\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawCacheOnCanvas(\n    this: TCachedFabricObject<FabricImage>,\n    ctx: CanvasRenderingContext2D\n  ) {\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\n    // cant use ts-expect-error because of ts 5.3 cross check\n    // @ts-ignore TS doesn't respect this type casting\n    super.drawCacheOnCanvas(ctx);\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * This is the special image version where we would like to avoid caching where possible.\n   * Essentially images do not benefit from caching. They may require caching, and in that\n   * case we do it. Also caching an image usually ends in a loss of details.\n   * A full performance audit should be done.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    return this.needsItsOwnCache();\n  }\n\n  _renderFill(ctx: CanvasRenderingContext2D) {\n    const elementToDraw = this._element;\n    if (!elementToDraw) {\n      return;\n    }\n    const scaleX = this._filterScalingX,\n      scaleY = this._filterScalingY,\n      w = this.width,\n      h = this.height,\n      // crop values cannot be lesser than 0.\n      cropX = Math.max(this.cropX, 0),\n      cropY = Math.max(this.cropY, 0),\n      elWidth =\n        (elementToDraw as HTMLImageElement).naturalWidth || elementToDraw.width,\n      elHeight =\n        (elementToDraw as HTMLImageElement).naturalHeight ||\n        elementToDraw.height,\n      sX = cropX * scaleX,\n      sY = cropY * scaleY,\n      // the width height cannot exceed element width/height, starting from the crop offset.\n      sW = Math.min(w * scaleX, elWidth - sX),\n      sH = Math.min(h * scaleY, elHeight - sY),\n      x = -w / 2,\n      y = -h / 2,\n      maxDestW = Math.min(w, elWidth / scaleX - cropX),\n      maxDestH = Math.min(h, elHeight / scaleY - cropY);\n\n    elementToDraw &&\n      ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, maxDestW, maxDestH);\n  }\n\n  /**\n   * needed to check if image needs resize\n   * @private\n   */\n  _needsResize() {\n    const scale = this.getTotalObjectScaling();\n    return scale.x !== this._lastScaleX || scale.y !== this._lastScaleY;\n  }\n\n  /**\n   * @private\n   * @deprecated unused\n   */\n  _resetWidthHeight() {\n    this.set(this.getOriginalSize());\n  }\n\n  /**\n   * @private\n   * Set the width and the height of the image object, using the element or the\n   * options.\n   */\n  _setWidthHeight({ width, height }: Partial<TSize> = {}) {\n    const size = this.getOriginalSize();\n    this.width = width || size.width;\n    this.height = height || size.height;\n  }\n\n  /**\n   * Calculate offset for center and scale factor for the image in order to respect\n   * the preserveAspectRatio attribute\n   * @private\n   */\n  parsePreserveAspectRatioAttribute() {\n    const pAR = parsePreserveAspectRatioAttribute(\n        this.preserveAspectRatio || ''\n      ),\n      pWidth = this.width,\n      pHeight = this.height,\n      parsedAttributes = { width: pWidth, height: pHeight };\n    let rWidth = this._element.width,\n      rHeight = this._element.height,\n      scaleX = 1,\n      scaleY = 1,\n      offsetLeft = 0,\n      offsetTop = 0,\n      cropX = 0,\n      cropY = 0,\n      offset;\n\n    if (pAR && (pAR.alignX !== NONE || pAR.alignY !== NONE)) {\n      if (pAR.meetOrSlice === 'meet') {\n        scaleX = scaleY = findScaleToFit(this._element, parsedAttributes);\n        offset = (pWidth - rWidth * scaleX) / 2;\n        if (pAR.alignX === 'Min') {\n          offsetLeft = -offset;\n        }\n        if (pAR.alignX === 'Max') {\n          offsetLeft = offset;\n        }\n        offset = (pHeight - rHeight * scaleY) / 2;\n        if (pAR.alignY === 'Min') {\n          offsetTop = -offset;\n        }\n        if (pAR.alignY === 'Max') {\n          offsetTop = offset;\n        }\n      }\n      if (pAR.meetOrSlice === 'slice') {\n        scaleX = scaleY = findScaleToCover(this._element, parsedAttributes);\n        offset = rWidth - pWidth / scaleX;\n        if (pAR.alignX === 'Mid') {\n          cropX = offset / 2;\n        }\n        if (pAR.alignX === 'Max') {\n          cropX = offset;\n        }\n        offset = rHeight - pHeight / scaleY;\n        if (pAR.alignY === 'Mid') {\n          cropY = offset / 2;\n        }\n        if (pAR.alignY === 'Max') {\n          cropY = offset;\n        }\n        rWidth = pWidth / scaleX;\n        rHeight = pHeight / scaleY;\n      }\n    } else {\n      scaleX = pWidth / rWidth;\n      scaleY = pHeight / rHeight;\n    }\n    return {\n      width: rWidth,\n      height: rHeight,\n      scaleX,\n      scaleY,\n      offsetLeft,\n      offsetTop,\n      cropX,\n      cropY,\n    };\n  }\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  static CSS_CANVAS = 'canvas-img';\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricImage.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  static ATTRIBUTE_NAMES = [\n    ...SHARED_ATTRIBUTES,\n    'x',\n    'y',\n    'width',\n    'height',\n    'preserveAspectRatio',\n    'xlink:href',\n    'crossOrigin',\n    'image-rendering',\n  ];\n\n  /**\n   * Creates an instance of FabricImage from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {object} [options] Options object\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricImage>}\n   */\n  static fromObject<T extends TOptions<SerializedImageProps>>(\n    { filters: f, resizeFilter: rf, src, crossOrigin, type, ...object }: T,\n    options: Abortable = {}\n  ) {\n    return Promise.all([\n      loadImage(src!, { ...options, crossOrigin }),\n      f && enlivenObjects<BaseFilter>(f, options),\n      // TODO: redundant - handled by enlivenObjectEnlivables\n      rf && enlivenObjects<BaseFilter>([rf], options),\n      enlivenObjectEnlivables(object, options),\n    ]).then(([el, filters = [], [resizeFilter] = [], hydratedProps = {}]) => {\n      return new this(el, {\n        ...object,\n        // TODO: this creates a difference between image creation and restoring from JSON\n        src,\n        filters,\n        resizeFilter,\n        ...hydratedProps,\n      });\n    });\n  }\n\n  /**\n   * Creates an instance of Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {LoadImageOptions} [options] Options object\n   * @returns {Promise<FabricImage>}\n   */\n  static fromURL<T extends TOptions<ImageProps>>(\n    url: string,\n    { crossOrigin = null, signal }: LoadImageOptions = {},\n    imageOptions?: T\n  ): Promise<FabricImage> {\n    return loadImage(url, { crossOrigin, signal }).then(\n      (img) => new this(img, imageOptions)\n    );\n  }\n\n  /**\n   * Returns {@link FabricImage} instance from an SVG element\n   * @static\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @param {Function} callback Callback to execute when Image object is created\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable = {},\n    cssRules?: CSSRules\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules\n    );\n    return this.fromURL(\n      parsedAttributes['xlink:href'],\n      options,\n      parsedAttributes\n    ).catch((err) => {\n      log('log', 'Unable to parse Image', err);\n      return null;\n    });\n  }\n}\n\nclassRegistry.setClass(FabricImage);\nclassRegistry.setSVGClass(FabricImage);\n","import { svgNS } from './constants';\nimport {\n  parsePreserveAspectRatioAttribute,\n  parseUnit,\n} from '../util/misc/svgParsing';\nimport { svgViewBoxElementsRegEx, reViewBoxAttrValue } from './constants';\nimport { NONE } from '../constants';\n\nexport type ParsedViewboxTransform = Partial<{\n  width: number;\n  height: number;\n  minX: number;\n  minY: number;\n  viewBoxWidth: number;\n  viewBoxHeight: number;\n}>;\n\n/**\n * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n */\nexport function applyViewboxTransform(\n  element: Element\n): ParsedViewboxTransform {\n  if (!svgViewBoxElementsRegEx.test(element.nodeName)) {\n    return {};\n  }\n  const viewBoxAttr: string | null = element.getAttribute('viewBox');\n  let scaleX = 1;\n  let scaleY = 1;\n  let minX = 0;\n  let minY = 0;\n  let matrix;\n  let el;\n  const widthAttr = element.getAttribute('width');\n  const heightAttr = element.getAttribute('height');\n  const x = element.getAttribute('x') || 0;\n  const y = element.getAttribute('y') || 0;\n  const goodViewbox = viewBoxAttr && reViewBoxAttrValue.test(viewBoxAttr);\n  const missingViewBox = !goodViewbox;\n  const missingDimAttr =\n    !widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%';\n\n  let translateMatrix = '';\n  let widthDiff = 0;\n  let heightDiff = 0;\n\n  if (missingViewBox) {\n    if (\n      (x || y) &&\n      element.parentNode &&\n      element.parentNode.nodeName !== '#document'\n    ) {\n      translateMatrix =\n        ' translate(' + parseUnit(x || '0') + ' ' + parseUnit(y || '0') + ') ';\n      matrix = (element.getAttribute('transform') || '') + translateMatrix;\n      element.setAttribute('transform', matrix);\n      element.removeAttribute('x');\n      element.removeAttribute('y');\n    }\n  }\n\n  if (missingViewBox && missingDimAttr) {\n    return {\n      width: 0,\n      height: 0,\n    };\n  }\n\n  const parsedDim: ParsedViewboxTransform = {\n    width: 0,\n    height: 0,\n  };\n\n  if (missingViewBox) {\n    parsedDim.width = parseUnit(widthAttr!);\n    parsedDim.height = parseUnit(heightAttr!);\n    // set a transform for elements that have x y and are inner(only) SVGs\n    return parsedDim;\n  }\n\n  const pasedViewBox = viewBoxAttr.match(reViewBoxAttrValue)!;\n  minX = -parseFloat(pasedViewBox[1]);\n  minY = -parseFloat(pasedViewBox[2]);\n  const viewBoxWidth = parseFloat(pasedViewBox[3]);\n  const viewBoxHeight = parseFloat(pasedViewBox[4]);\n  parsedDim.minX = minX;\n  parsedDim.minY = minY;\n  parsedDim.viewBoxWidth = viewBoxWidth;\n  parsedDim.viewBoxHeight = viewBoxHeight;\n  if (!missingDimAttr) {\n    parsedDim.width = parseUnit(widthAttr);\n    parsedDim.height = parseUnit(heightAttr);\n    scaleX = parsedDim.width / viewBoxWidth;\n    scaleY = parsedDim.height / viewBoxHeight;\n  } else {\n    parsedDim.width = viewBoxWidth;\n    parsedDim.height = viewBoxHeight;\n  }\n\n  // default is to preserve aspect ratio\n  const preserveAspectRatio = parsePreserveAspectRatioAttribute(\n    element.getAttribute('preserveAspectRatio') || ''\n  );\n  if (preserveAspectRatio.alignX !== NONE) {\n    //translate all container for the effect of Mid, Min, Max\n    if (preserveAspectRatio.meetOrSlice === 'meet') {\n      scaleY = scaleX = scaleX > scaleY ? scaleY : scaleX;\n      // calculate additional translation to move the viewbox\n    }\n    if (preserveAspectRatio.meetOrSlice === 'slice') {\n      scaleY = scaleX = scaleX > scaleY ? scaleX : scaleY;\n      // calculate additional translation to move the viewbox\n    }\n    widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n    heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n    if (preserveAspectRatio.alignX === 'Mid') {\n      widthDiff /= 2;\n    }\n    if (preserveAspectRatio.alignY === 'Mid') {\n      heightDiff /= 2;\n    }\n    if (preserveAspectRatio.alignX === 'Min') {\n      widthDiff = 0;\n    }\n    if (preserveAspectRatio.alignY === 'Min') {\n      heightDiff = 0;\n    }\n  }\n\n  if (\n    scaleX === 1 &&\n    scaleY === 1 &&\n    minX === 0 &&\n    minY === 0 &&\n    x === 0 &&\n    y === 0\n  ) {\n    return parsedDim;\n  }\n  if ((x || y) && element.parentNode!.nodeName !== '#document') {\n    translateMatrix =\n      ' translate(' + parseUnit(x || '0') + ' ' + parseUnit(y || '0') + ') ';\n  }\n\n  matrix =\n    translateMatrix +\n    ' matrix(' +\n    scaleX +\n    ' 0' +\n    ' 0 ' +\n    scaleY +\n    ' ' +\n    (minX * scaleX + widthDiff) +\n    ' ' +\n    (minY * scaleY + heightDiff) +\n    ') ';\n  // seems unused.\n  // parsedDim.viewboxTransform = parseTransformAttribute(matrix);\n  if (element.nodeName === 'svg') {\n    el = element.ownerDocument.createElementNS(svgNS, 'g');\n    // element.firstChild != null\n    while (element.firstChild) {\n      el.appendChild(element.firstChild);\n    }\n    element.appendChild(el);\n  } else {\n    el = element;\n    el.removeAttribute('x');\n    el.removeAttribute('y');\n    matrix = el.getAttribute('transform') + matrix;\n  }\n  el.setAttribute('transform', matrix);\n  return parsedDim;\n}\n","export const getTagName = (node: Element) => node.tagName.replace('svg:', '');\n","import { svgInvalidAncestors } from './constants';\nimport { getSvgRegex } from './getSvgRegex';\nimport { getTagName } from './getTagName';\n\nconst svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n\nexport function hasInvalidAncestor(element: Element) {\n  let _element: Element | null = element;\n  while (_element && (_element = _element.parentElement)) {\n    if (\n      _element &&\n      _element.nodeName &&\n      svgInvalidAncestorsRegEx.test(getTagName(_element)) &&\n      !_element.getAttribute('instantiated_by_use')\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n","export function getMultipleNodes(\n  doc: Document,\n  nodeNames: string[]\n): Element[] {\n  let nodeName,\n    nodeArray: Element[] = [],\n    nodeList,\n    i,\n    len;\n  for (i = 0, len = nodeNames.length; i < len; i++) {\n    nodeName = nodeNames[i];\n    nodeList = doc.getElementsByTagNameNS(\n      'http://www.w3.org/2000/svg',\n      nodeName\n    );\n    nodeArray = nodeArray.concat(Array.from(nodeList));\n  }\n  return nodeArray;\n}\n","const gradientsAttrs = [\n  'gradientTransform',\n  'x1',\n  'x2',\n  'y1',\n  'y2',\n  'gradientUnits',\n  'cx',\n  'cy',\n  'r',\n  'fx',\n  'fy',\n];\nconst xlinkAttr = 'xlink:href';\n\nexport function recursivelyParseGradientsXlink(\n  doc: Document,\n  gradient: Element\n) {\n  const xLink = gradient.getAttribute(xlinkAttr)?.slice(1) || '',\n    referencedGradient = doc.getElementById(xLink);\n  if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n    recursivelyParseGradientsXlink(doc, referencedGradient as Element);\n  }\n  if (referencedGradient) {\n    gradientsAttrs.forEach((attr) => {\n      const value = referencedGradient.getAttribute(attr);\n      if (!gradient.hasAttribute(attr) && value) {\n        gradient.setAttribute(attr, value);\n      }\n    });\n    if (!gradient.children.length) {\n      const referenceClone = referencedGradient.cloneNode(true);\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n  }\n  gradient.removeAttribute(xlinkAttr);\n}\n","import { getMultipleNodes } from './getMultipleNodes';\nimport { recursivelyParseGradientsXlink } from './recursivelyParseGradientsXlink';\n\nconst tagArray = [\n  'linearGradient',\n  'radialGradient',\n  'svg:linearGradient',\n  'svg:radialGradient',\n];\n\n/**\n * Parses an SVG document, returning all of the gradient declarations found in it\n * @param {SVGDocument} doc SVG document to parse\n * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n */\nexport function getGradientDefs(\n  doc: Document\n): Record<string, SVGGradientElement> {\n  const elList = getMultipleNodes(doc, tagArray);\n  const gradientDefs: Record<string, SVGGradientElement> = {};\n  let j = elList.length;\n  while (j--) {\n    const el = elList[j];\n    if (el.getAttribute('xlink:href')) {\n      recursivelyParseGradientsXlink(doc, el);\n    }\n    const id = el.getAttribute('id');\n    if (id) {\n      gradientDefs[id] = el as SVGGradientElement;\n    }\n  }\n  return gradientDefs;\n}\n","import type { CSSRules } from './typedefs';\n\n/**\n * Returns CSS rules for a given SVG document\n * @param {HTMLElement} doc SVG document to parse\n * @return {Object} CSS rules of this document\n */\nexport function getCSSRules(doc: Document) {\n  const styles = doc.getElementsByTagName('style');\n  let i;\n  let len;\n  const allRules: CSSRules = {};\n\n  // very crude parsing of style contents\n  for (i = 0, len = styles.length; i < len; i++) {\n    const styleContents = (styles[i].textContent || '').replace(\n      // remove comments\n      /\\/\\*[\\s\\S]*?\\*\\//g,\n      ''\n    );\n\n    if (styleContents.trim() === '') {\n      continue;\n    }\n    // recovers all the rule in this form `body { style code... }`\n    // rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n    styleContents\n      .split('}')\n      // remove empty rules and remove everything if we didn't split in at least 2 pieces\n      .filter((rule, index, array) => array.length > 1 && rule.trim())\n      // at this point we have hopefully an array of rules `body { style code... `\n      .forEach((rule) => {\n        // if there is more than one opening bracket and the rule starts with '@', it is likely\n        // a nested at-rule like @media, @supports, @scope, etc. Ignore these as the code below\n        // can not handle it.\n        if (\n          (rule.match(/{/g) || []).length > 1 &&\n          rule.trim().startsWith('@')\n        ) {\n          return;\n        }\n\n        const match = rule.split('{'),\n          ruleObj: Record<string, string> = {},\n          declaration = match[1].trim(),\n          propertyValuePairs = declaration.split(';').filter(function (pair) {\n            return pair.trim();\n          });\n\n        for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n          const pair = propertyValuePairs[i].split(':'),\n            property = pair[0].trim(),\n            value = pair[1].trim();\n          ruleObj[property] = value;\n        }\n        rule = match[0].trim();\n        rule.split(',').forEach((_rule) => {\n          _rule = _rule.replace(/^svg/i, '').trim();\n          if (_rule === '') {\n            return;\n          }\n          allRules[_rule] = {\n            ...(allRules[_rule] || {}),\n            ...ruleObj,\n          };\n        });\n      });\n  }\n  return allRules;\n}\n","import { Gradient } from '../gradient/Gradient';\nimport { Group } from '../shapes/Group';\nimport { FabricImage } from '../shapes/Image';\nimport { classRegistry } from '../ClassRegistry';\nimport {\n  invertTransform,\n  multiplyTransformMatrices,\n  qrDecompose,\n} from '../util/misc/matrix';\nimport { removeTransformMatrixForSvgParsing } from '../util/transform_matrix_removal';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { Point } from '../Point';\nimport { CENTER } from '../constants';\nimport { getGradientDefs } from './getGradientDefs';\nimport { getCSSRules } from './getCSSRules';\nimport type { LoadImageOptions } from '../util';\nimport type { CSSRules, TSvgReviverCallback } from './typedefs';\nimport type { ParsedViewboxTransform } from './applyViewboxTransform';\nimport type { SVGOptions } from '../gradient';\nimport { getTagName } from './getTagName';\nimport { parseTransformAttribute } from './parseTransformAttribute';\n\nconst findTag = (el: Element) =>\n  classRegistry.getSVGClass(getTagName(el).toLowerCase());\n\ntype StorageType = {\n  fill: SVGGradientElement;\n  stroke: SVGGradientElement;\n  clipPath: Element[];\n};\n\ntype NotParsedFabricObject = FabricObject & {\n  fill: string;\n  stroke: string;\n  clipPath?: string;\n  clipRule?: CanvasFillRule;\n};\n\nexport class ElementsParser {\n  declare elements: Element[];\n  declare options: LoadImageOptions & ParsedViewboxTransform;\n  declare reviver: TSvgReviverCallback | undefined;\n  declare regexUrl: RegExp;\n  declare doc: Document;\n  declare clipPaths: Record<string, Element[]>;\n  declare gradientDefs: Record<string, SVGGradientElement>;\n  declare cssRules: CSSRules;\n\n  constructor(\n    elements: Element[],\n    options: LoadImageOptions & ParsedViewboxTransform,\n    reviver: TSvgReviverCallback | undefined,\n    doc: Document,\n    clipPaths: Record<string, Element[]>\n  ) {\n    this.elements = elements;\n    this.options = options;\n    this.reviver = reviver;\n    this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n    this.doc = doc;\n    this.clipPaths = clipPaths;\n    this.gradientDefs = getGradientDefs(doc);\n    this.cssRules = getCSSRules(doc);\n  }\n\n  parse(): Promise<Array<FabricObject | null>> {\n    return Promise.all(\n      this.elements.map((element) => this.createObject(element))\n    );\n  }\n\n  async createObject(el: Element): Promise<FabricObject | null> {\n    const klass = findTag(el);\n    if (klass) {\n      const obj: NotParsedFabricObject = await klass.fromElement(\n        el,\n        this.options,\n        this.cssRules\n      );\n      this.resolveGradient(obj, el, 'fill');\n      this.resolveGradient(obj, el, 'stroke');\n      if (obj instanceof FabricImage && obj._originalElement) {\n        removeTransformMatrixForSvgParsing(\n          obj,\n          obj.parsePreserveAspectRatioAttribute()\n        );\n      } else {\n        removeTransformMatrixForSvgParsing(obj);\n      }\n      await this.resolveClipPath(obj, el);\n      this.reviver && this.reviver(el, obj);\n      return obj;\n    }\n    return null;\n  }\n\n  extractPropertyDefinition(\n    obj: NotParsedFabricObject,\n    property: 'fill' | 'stroke' | 'clipPath',\n    storage: Record<string, StorageType[typeof property]>\n  ): StorageType[typeof property] | undefined {\n    const value = obj[property]!,\n      regex = this.regexUrl;\n    if (!regex.test(value)) {\n      return undefined;\n    }\n    // verify: can we remove the 'g' flag? and remove lastIndex changes?\n    regex.lastIndex = 0;\n    // we passed the regex test, so we know is not null;\n    const id = regex.exec(value)![1];\n    regex.lastIndex = 0;\n    // @todo fix this\n    return storage[id];\n  }\n\n  resolveGradient(\n    obj: NotParsedFabricObject,\n    el: Element,\n    property: 'fill' | 'stroke'\n  ) {\n    const gradientDef = this.extractPropertyDefinition(\n      obj,\n      property,\n      this.gradientDefs\n    ) as SVGGradientElement;\n    if (gradientDef) {\n      const opacityAttr = el.getAttribute(property + '-opacity');\n      const gradient = Gradient.fromElement(gradientDef, obj, {\n        ...this.options,\n        opacity: opacityAttr,\n      } as SVGOptions);\n      obj.set(property, gradient);\n    }\n  }\n\n  // TODO: resolveClipPath could be run once per clippath with minor work per object.\n  // is a refactor that i m not sure is worth on this code\n  async resolveClipPath(obj: NotParsedFabricObject, usingElement: Element) {\n    const clipPathElements = this.extractPropertyDefinition(\n      obj,\n      'clipPath',\n      this.clipPaths\n    ) as Element[];\n    if (clipPathElements) {\n      const objTransformInv = invertTransform(obj.calcTransformMatrix());\n      const clipPathTag = clipPathElements[0].parentElement!;\n      let clipPathOwner = usingElement;\n      while (\n        clipPathOwner.parentElement &&\n        clipPathOwner.getAttribute('clip-path') !== obj.clipPath\n      ) {\n        clipPathOwner = clipPathOwner.parentElement;\n      }\n      // move the clipPath tag as sibling to the real element that is using it\n      clipPathOwner.parentElement!.appendChild(clipPathTag!);\n\n      // this multiplication order could be opposite.\n      // but i don't have an svg to test it\n      // at the first SVG that has a transform on both places and is misplaced\n      // try to invert this multiplication order\n      const finalTransform = parseTransformAttribute(\n        `${clipPathOwner.getAttribute('transform') || ''} ${\n          clipPathTag.getAttribute('originalTransform') || ''\n        }`\n      );\n\n      clipPathTag.setAttribute(\n        'transform',\n        `matrix(${finalTransform.join(',')})`\n      );\n\n      const container = await Promise.all(\n        clipPathElements.map((clipPathElement) => {\n          return findTag(clipPathElement)\n            .fromElement(clipPathElement, this.options, this.cssRules)\n            .then((enlivedClippath: NotParsedFabricObject) => {\n              removeTransformMatrixForSvgParsing(enlivedClippath);\n              enlivedClippath.fillRule = enlivedClippath.clipRule!;\n              delete enlivedClippath.clipRule;\n              return enlivedClippath;\n            });\n        })\n      );\n      const clipPath =\n        container.length === 1 ? container[0] : new Group(container);\n      const gTransform = multiplyTransformMatrices(\n        objTransformInv,\n        clipPath.calcTransformMatrix()\n      );\n      if (clipPath.clipPath) {\n        await this.resolveClipPath(clipPath, clipPathOwner);\n      }\n      const { scaleX, scaleY, angle, skewX, translateX, translateY } =\n        qrDecompose(gTransform);\n      clipPath.set({\n        flipX: false,\n        flipY: false,\n      });\n      clipPath.set({\n        scaleX,\n        scaleY,\n        angle,\n        skewX,\n        skewY: 0,\n      });\n      clipPath.setPositionByOrigin(\n        new Point(translateX, translateY),\n        CENTER,\n        CENTER\n      );\n      obj.clipPath = clipPath;\n    } else {\n      // if clip-path does not resolve to any element, delete the property.\n      delete obj.clipPath;\n      return;\n    }\n  }\n}\n","import { applyViewboxTransform } from './applyViewboxTransform';\nimport { svgValidTagNamesRegEx } from './constants';\nimport { hasInvalidAncestor } from './hasInvalidAncestor';\nimport { parseUseDirectives } from './parseUseDirectives';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport { ElementsParser } from './elements_parser';\nimport { log, SignalAbortedError } from '../util/internals/console';\nimport { getTagName } from './getTagName';\n\nconst isValidSvgTag = (el: Element) =>\n  svgValidTagNamesRegEx.test(getTagName(el));\n\nexport const createEmptyResponse = (): SVGParsingOutput => ({\n  objects: [],\n  elements: [],\n  options: {},\n  allElements: [],\n});\n\n/**\n * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n * @static\n * @function\n * @memberOf fabric\n * @param {HTMLElement} doc SVG document to parse\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n * @return {SVGParsingOutput}\n * {@link SVGParsingOutput} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n */\nexport async function parseSVGDocument(\n  doc: Document,\n  reviver?: TSvgReviverCallback,\n  { crossOrigin, signal }: LoadImageOptions = {}\n): Promise<SVGParsingOutput> {\n  if (signal && signal.aborted) {\n    log('log', new SignalAbortedError('parseSVGDocument'));\n    // this is an unhappy path, we dont care about speed\n    return createEmptyResponse();\n  }\n  const documentElement = doc.documentElement;\n  parseUseDirectives(doc);\n\n  const descendants = Array.from(documentElement.getElementsByTagName('*')),\n    options = {\n      ...applyViewboxTransform(documentElement),\n      crossOrigin,\n      signal,\n    };\n\n  const elements = descendants.filter((el) => {\n    applyViewboxTransform(el);\n    return isValidSvgTag(el) && !hasInvalidAncestor(el); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n  });\n  if (!elements || (elements && !elements.length)) {\n    return {\n      ...createEmptyResponse(),\n      options,\n      allElements: descendants,\n    };\n  }\n  const localClipPaths: Record<string, Element[]> = {};\n  descendants\n    .filter((el) => getTagName(el) === 'clipPath')\n    .forEach((el) => {\n      el.setAttribute('originalTransform', el.getAttribute('transform') || '');\n      const id = el.getAttribute('id')!;\n      localClipPaths[id] = Array.from(el.getElementsByTagName('*')).filter(\n        (el) => isValidSvgTag(el)\n      );\n    });\n\n  // Precedence of rules:   style > class > attribute\n  const elementParser = new ElementsParser(\n    elements,\n    options,\n    reviver,\n    doc,\n    localClipPaths\n  );\n\n  const instances = await elementParser.parse();\n\n  return {\n    objects: instances,\n    elements,\n    options,\n    allElements: descendants,\n  };\n}\n","import { svgNS } from './constants';\nimport { getMultipleNodes } from './getMultipleNodes';\nimport { applyViewboxTransform } from './applyViewboxTransform';\n\nexport function parseUseDirectives(doc: Document) {\n  const nodelist = getMultipleNodes(doc, ['use', 'svg:use']);\n  let i = 0;\n  while (nodelist.length && i < nodelist.length) {\n    const el = nodelist[i],\n      xlinkAttribute = el.getAttribute('xlink:href') || el.getAttribute('href');\n\n    if (xlinkAttribute === null) {\n      return;\n    }\n\n    const xlink = xlinkAttribute.slice(1);\n    const x = el.getAttribute('x') || 0;\n    const y = el.getAttribute('y') || 0;\n    const el2Orig = doc.getElementById(xlink);\n    if (el2Orig === null) {\n      // if we can't find the target of the xlink, consider this use tag bad, similar to no xlink\n      return;\n    }\n    let el2 = el2Orig.cloneNode(true) as Element;\n    let currentTrans =\n      (el2.getAttribute('transform') || '') +\n      ' translate(' +\n      x +\n      ', ' +\n      y +\n      ')';\n    const oldLength = nodelist.length;\n    const namespace = svgNS;\n\n    applyViewboxTransform(el2);\n    if (/^svg$/i.test(el2.nodeName)) {\n      const el3 = el2.ownerDocument.createElementNS(namespace, 'g');\n      for (\n        let j = 0, attrs = el2.attributes, len = attrs.length;\n        j < len;\n        j++\n      ) {\n        const attr: Attr | null = attrs.item(j);\n        attr && el3.setAttributeNS(namespace, attr.nodeName, attr.nodeValue!);\n      }\n      // el2.firstChild != null\n      while (el2.firstChild) {\n        el3.appendChild(el2.firstChild);\n      }\n      el2 = el3;\n    }\n\n    for (let j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n      const attr = attrs.item(j);\n      if (!attr) {\n        continue;\n      }\n      const { nodeName, nodeValue } = attr;\n      if (\n        nodeName === 'x' ||\n        nodeName === 'y' ||\n        nodeName === 'xlink:href' ||\n        nodeName === 'href'\n      ) {\n        continue;\n      }\n\n      if (nodeName === 'transform') {\n        currentTrans = nodeValue + ' ' + currentTrans;\n      } else {\n        el2.setAttribute(nodeName, nodeValue!);\n      }\n    }\n\n    el2.setAttribute('transform', currentTrans);\n    el2.setAttribute('instantiated_by_use', '1');\n    el2.removeAttribute('id');\n    const parentNode = el.parentNode;\n    parentNode!.replaceChild(el2, el);\n    // some browsers do not shorten nodelist after replaceChild (IE8)\n    if (nodelist.length === oldLength) {\n      i++;\n    }\n  }\n}\n","import { getFabricWindow } from '../env';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport { parseSVGDocument } from './parseSVGDocument';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\n\n/**\n * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n * @memberOf fabric\n * @param {String} string representing the svg\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * {@link TSvgParsedCallback} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n */\nexport function loadSVGFromString(\n  string: string,\n  reviver?: TSvgReviverCallback,\n  options?: LoadImageOptions\n): Promise<SVGParsingOutput> {\n  const parser = new (getFabricWindow().DOMParser)(),\n    // should we use `image/svg+xml` here?\n    doc = parser.parseFromString(string.trim(), 'text/xml');\n  return parseSVGDocument(doc, reviver, options);\n}\n","import { request } from '../util/internals/dom_request';\nimport { parseSVGDocument, createEmptyResponse } from './parseSVGDocument';\nimport type { SVGParsingOutput, TSvgReviverCallback } from './typedefs';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\n\n/**\n * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n * @memberOf fabric\n * @param {string} url where the SVG is\n * @param {TSvgParsedCallback} callback Invoked when the parsing is done, with null if parsing wasn't possible with the list of svg nodes.\n * {@link TSvgParsedCallback} also receives `allElements` array as the last argument. This is the full list of svg nodes available in the document.\n * You may want to use it if you are trying to regroup the objects as they were originally grouped in the SVG. ( This was the reason why it was added )\n * @param {TSvgReviverCallback} [reviver] Extra callback for further parsing of SVG elements, called after each fabric object has been created.\n * Takes as input the original svg element and the generated `FabricObject` as arguments. Used to inspect extra properties not parsed by fabric,\n * or extra custom manipulation\n * @param {Object} [options] Object containing options for parsing\n * @param {String} [options.crossOrigin] crossOrigin setting to use for external resources\n * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n */\nexport function loadSVGFromURL(\n  url: string,\n  reviver?: TSvgReviverCallback,\n  options: LoadImageOptions = {}\n): Promise<SVGParsingOutput> {\n  // need to handle error properly\n  return new Promise<Document>((resolve, reject) => {\n    const onComplete = (r: XMLHttpRequest) => {\n      const xml = r.responseXML;\n      if (xml) {\n        resolve(xml);\n      }\n      reject();\n    };\n\n    request(url.replace(/^\\n\\s*/, '').trim(), {\n      onComplete,\n      signal: options.signal,\n    });\n  })\n    .then((parsedDoc) => parseSVGDocument(parsedDoc, reviver, options))\n    .catch(() => {\n      // this is an unhappy path, we dont care about speed\n      return createEmptyResponse();\n    });\n}\n","import { Point } from '../Point';\nimport { Control } from './Control';\nimport type { TMat2D } from '../typedefs';\nimport type { Polyline } from '../shapes/Polyline';\nimport { multiplyTransformMatrices } from '../util/misc/matrix';\nimport type {\n  TModificationEvents,\n  TPointerEvent,\n  Transform,\n  TransformActionHandler,\n} from '../EventTypeDefs';\nimport { wrapWithFireEvent } from './wrapWithFireEvent';\nimport { sendPointToPlane } from '../util';\n\nconst ACTION_NAME: TModificationEvents = 'modifyPoly';\n\ntype TTransformAnchor = Transform & { pointIndex: number };\n\n/**\n * This function locates the controls.\n * It'll be used both for drawing and for interaction.\n */\nexport const createPolyPositionHandler = (pointIndex: number) => {\n  return function (dim: Point, finalMatrix: TMat2D, polyObject: Polyline) {\n    const { points, pathOffset } = polyObject;\n    return new Point(points[pointIndex])\n      .subtract(pathOffset)\n      .transform(\n        multiplyTransformMatrices(\n          polyObject.getViewportTransform(),\n          polyObject.calcTransformMatrix()\n        )\n      );\n  };\n};\n\n/**\n * This function defines what the control does.\n * It'll be called on every mouse move after a control has been clicked and is being dragged.\n * The function receives as argument the mouse event, the current transform object\n * and the current position in canvas coordinate `transform.target` is a reference to the\n * current object being transformed.\n */\nexport const polyActionHandler = (\n  eventData: TPointerEvent,\n  transform: TTransformAnchor,\n  x: number,\n  y: number\n) => {\n  const { target, pointIndex } = transform;\n  const poly = target as Polyline;\n  const mouseLocalPosition = sendPointToPlane(\n    new Point(x, y),\n    undefined,\n    poly.calcOwnMatrix()\n  );\n\n  poly.points[pointIndex] = mouseLocalPosition.add(poly.pathOffset);\n  poly.setDimensions();\n\n  return true;\n};\n\n/**\n * Keep the polygon in the same position when we change its `width`/`height`/`top`/`left`.\n */\nexport const factoryPolyActionHandler = (\n  pointIndex: number,\n  fn: TransformActionHandler<TTransformAnchor>\n) => {\n  return function (\n    eventData: TPointerEvent,\n    transform: Transform,\n    x: number,\n    y: number\n  ) {\n    const poly = transform.target as Polyline,\n      anchorPoint = new Point(\n        poly.points[(pointIndex > 0 ? pointIndex : poly.points.length) - 1]\n      ),\n      anchorPointInParentPlane = anchorPoint\n        .subtract(poly.pathOffset)\n        .transform(poly.calcOwnMatrix()),\n      actionPerformed = fn(eventData, { ...transform, pointIndex }, x, y);\n\n    const newAnchorPointInParentPlane = anchorPoint\n      .subtract(poly.pathOffset)\n      .transform(poly.calcOwnMatrix());\n\n    const diff = newAnchorPointInParentPlane.subtract(anchorPointInParentPlane);\n    poly.left -= diff.x;\n    poly.top -= diff.y;\n\n    return actionPerformed;\n  };\n};\n\nexport const createPolyActionHandler = (pointIndex: number) =>\n  wrapWithFireEvent(\n    ACTION_NAME,\n    factoryPolyActionHandler(pointIndex, polyActionHandler)\n  );\n\nexport function createPolyControls(\n  poly: Polyline,\n  options?: Partial<Control>\n): Record<string, Control>;\nexport function createPolyControls(\n  numOfControls: number,\n  options?: Partial<Control>\n): Record<string, Control>;\nexport function createPolyControls(\n  arg0: number | Polyline,\n  options: Partial<Control> = {}\n) {\n  const controls = {} as Record<string, Control>;\n  for (\n    let idx = 0;\n    idx < (typeof arg0 === 'number' ? arg0 : arg0.points.length);\n    idx++\n  ) {\n    controls[`p${idx}`] = new Control({\n      actionName: ACTION_NAME,\n      positionHandler: createPolyPositionHandler(idx),\n      actionHandler: createPolyActionHandler(idx),\n      ...options,\n    });\n  }\n  return controls;\n}\n","import { getFabricWindow } from '../env';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { WebGLFilterBackend } from './WebGLFilterBackend';\nimport type { TWebGLPipelineState, T2DPipelineState } from './typedefs';\n\nexport const isWebGLPipelineState = (\n  options: TWebGLPipelineState | T2DPipelineState\n): options is TWebGLPipelineState => {\n  return (options as TWebGLPipelineState).webgl !== undefined;\n};\n\n/**\n * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n * drawImage should be faster, but is also bugged for a small combination of old hardware\n * and drivers.\n * putImageData is faster than drawImage for that specific operation.\n */\nexport const isPutImageFaster = (width: number, height: number): boolean => {\n  const targetCanvas = createCanvasElement();\n  const sourceCanvas = createCanvasElement();\n  const gl = sourceCanvas.getContext('webgl')!;\n  // eslint-disable-next-line no-undef\n  const imageBuffer = new ArrayBuffer(width * height * 4);\n\n  const testContext = {\n    imageBuffer: imageBuffer,\n  } as unknown as Required<WebGLFilterBackend>;\n  const testPipelineState = {\n    destinationWidth: width,\n    destinationHeight: height,\n    targetCanvas: targetCanvas,\n  } as unknown as TWebGLPipelineState;\n  let startTime;\n  targetCanvas.width = width;\n  targetCanvas.height = height;\n\n  startTime = getFabricWindow().performance.now();\n  WebGLFilterBackend.prototype.copyGLTo2D.call(\n    testContext,\n    gl,\n    testPipelineState\n  );\n  const drawImageTime = getFabricWindow().performance.now() - startTime;\n\n  startTime = getFabricWindow().performance.now();\n  WebGLFilterBackend.prototype.copyGLTo2DPutImageData.call(\n    testContext,\n    gl,\n    testPipelineState\n  );\n  const putImageDataTime = getFabricWindow().performance.now() - startTime;\n\n  return drawImageTime > putImageDataTime;\n};\n","export const highPsourceCode = `precision highp float`;\n\nexport const identityFragmentShader = `\n    ${highPsourceCode};\n    varying vec2 vTexCoord;\n    uniform sampler2D uTexture;\n    void main() {\n      gl_FragColor = texture2D(uTexture, vTexCoord);\n    }`;\n\nexport const vertexSource = `\n    attribute vec2 aPosition;\n    varying vec2 vTexCoord;\n    void main() {\n      vTexCoord = aPosition;\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n    }`;\n","import { getEnv } from '../env';\nimport { createCanvasElement } from '../util/misc/dom';\nimport type {\n  T2DPipelineState,\n  TWebGLAttributeLocationMap,\n  TWebGLPipelineState,\n  TWebGLProgramCacheItem,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport {\n  highPsourceCode,\n  identityFragmentShader,\n  vertexSource,\n} from './shaders/baseFilter';\nimport type { Abortable } from '../typedefs';\nimport { FabricError } from '../util/internals/console';\n\nexport class BaseFilter {\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  get type(): string {\n    return (this.constructor as typeof BaseFilter).type;\n  }\n\n  /**\n   * The class type. Used to identify which class this is.\n   * This is used for serialization purposes and internally it can be used\n   * to identify classes. As a developer you could use `instance of Class`\n   * but to avoid importing all the code and blocking tree shaking we try\n   * to avoid doing that.\n   */\n  static type = 'BaseFilter';\n\n  declare static defaults: Record<string, any>;\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n  vertexSource = vertexSource;\n\n  /**\n   * Name of the parameter that can be changed in the filter.\n   * Some filters have more than one parameter and there is no\n   * mainParameter\n   * @private\n   */\n  declare mainParameter?: keyof this | undefined;\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  constructor({ type, ...options }: Record<string, any> = {}) {\n    Object.assign(\n      this,\n      (this.constructor as typeof BaseFilter).defaults,\n      options\n    );\n  }\n\n  protected getFragmentSource(): string {\n    return identityFragmentShader;\n  }\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram(\n    gl: WebGLRenderingContext,\n    fragmentSource: string = this.getFragmentSource(),\n    vertexSource: string = this.vertexSource\n  ) {\n    const {\n      WebGLProbe: { GLPrecision = 'highp' },\n    } = getEnv();\n    if (GLPrecision !== 'highp') {\n      fragmentSource = fragmentSource.replace(\n        new RegExp(highPsourceCode, 'g'),\n        highPsourceCode.replace('highp', GLPrecision)\n      );\n    }\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    const program = gl.createProgram();\n\n    if (!vertexShader || !fragmentShader || !program) {\n      throw new FabricError(\n        'Vertex, fragment shader or program creation error'\n      );\n    }\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new FabricError(\n        `Vertex shader compile error for ${this.type}: ${gl.getShaderInfoLog(\n          vertexShader\n        )}`\n      );\n    }\n\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new FabricError(\n        `Fragment shader compile error for ${this.type}: ${gl.getShaderInfoLog(\n          fragmentShader\n        )}`\n      );\n    }\n\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new FabricError(\n        `Shader link error for \"${this.type}\" ${gl.getProgramInfoLog(program)}`\n      );\n    }\n\n    const uniformLocations = this.getUniformLocations(gl, program) || {};\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program,\n      attributeLocations: this.getAttributeLocations(gl, program),\n      uniformLocations,\n    };\n  }\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLAttributeLocationMap {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  }\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {};\n  }\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData(\n    gl: WebGLRenderingContext,\n    attributeLocations: Record<string, number>,\n    aPositionData: Float32Array\n  ) {\n    const attributeLocation = attributeLocations.aPosition;\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  }\n\n  _setupFrameBuffer(options: TWebGLPipelineState) {\n    const gl = options.context;\n    if (options.passes > 1) {\n      const width = options.destinationWidth;\n      const height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(\n          gl,\n          width,\n          height\n        );\n      }\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        options.targetTexture,\n        0\n      );\n    } else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  }\n\n  _swapTextures(options: TWebGLPipelineState) {\n    options.passes--;\n    options.pass++;\n    const temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  }\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own version ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  isNeutralState(options?: any): boolean {\n    const main = this.mainParameter,\n      defaultValue = (this.constructor as typeof BaseFilter).defaults[\n        main as string\n      ];\n    if (main) {\n      const thisValue = this[main];\n      if (Array.isArray(defaultValue) && Array.isArray(thisValue)) {\n        return defaultValue.every(\n          (value: any, i: number) => value === thisValue[i]\n        );\n      } else {\n        return defaultValue === thisValue;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  }\n\n  applyTo2d(options: T2DPipelineState): void {\n    // override by subclass\n  }\n\n  /**\n   * Returns a string that represent the current selected shader code for the filter.\n   * Used to force recompilation when parameters change or to retrieve the shader from cache\n   * @type string\n   **/\n  getCacheKey() {\n    return this.type;\n  }\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   * @return {WebGLProgram} the compiled program shader\n   */\n  retrieveShader(options: TWebGLPipelineState): TWebGLProgramCacheItem {\n    const key = this.getCacheKey();\n    if (!options.programCache[key]) {\n      options.programCache[key] = this.createProgram(options.context);\n    }\n    return options.programCache[key];\n  }\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL(options: TWebGLPipelineState) {\n    const gl = options.context;\n    const shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    } else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  }\n\n  bindAdditionalTexture(\n    gl: WebGLRenderingContext,\n    texture: WebGLTexture,\n    textureUnit: number\n  ) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  }\n\n  unbindAdditionalTexture(gl: WebGLRenderingContext, textureUnit: number) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  }\n\n  getMainParameter() {\n    return this.mainParameter ? this[this.mainParameter] : undefined;\n  }\n\n  setMainParameter(value: any) {\n    if (this.mainParameter) {\n      this[this.mainParameter] = value;\n    }\n  }\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ): void {\n    // override by subclass\n  }\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer(options: T2DPipelineState) {\n    if (!options.helpLayer) {\n      const helpLayer = createCanvasElement();\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject() {\n    const mainP = this.mainParameter;\n    return {\n      type: this.type,\n      ...(mainP ? { [mainP]: this[mainP] } : {}),\n    };\n  }\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON() {\n    // delegate, not alias\n    return this.toObject();\n  }\n\n  static async fromObject(\n    { type, ...filterOptions }: Record<string, any>,\n    options: Abortable\n  ) {\n    return new this(filterOptions);\n  }\n}\n","export const blendColorFragmentSource = {\n  multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n  screen:\n    'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n  add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n  difference: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n  subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n  lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n  darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n  exclusion:\n    'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n  overlay: `\n    if (uColor.r < 0.5) {\n      gl_FragColor.r *= 2.0 * uColor.r;\n    } else {\n      gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\n    }\n    if (uColor.g < 0.5) {\n      gl_FragColor.g *= 2.0 * uColor.g;\n    } else {\n      gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\n    }\n    if (uColor.b < 0.5) {\n      gl_FragColor.b *= 2.0 * uColor.b;\n    } else {\n      gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\n    }\n    `,\n  tint: `\n    gl_FragColor.rgb *= (1.0 - uColor.a);\n    gl_FragColor.rgb += uColor.rgb;\n    `,\n} as const;\n","import { Color } from '../color/Color';\nimport type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { blendColorFragmentSource } from './shaders/blendColor';\n\nexport type TBlendMode =\n  | 'multiply'\n  | 'add'\n  | 'difference'\n  | 'screen'\n  | 'subtract'\n  | 'darken'\n  | 'lighten'\n  | 'overlay'\n  | 'exclusion'\n  | 'tint';\n\nexport const blendColorDefaultValues: Partial<TClassProperties<BlendColor>> = {\n  color: '#F95C63',\n  mode: 'multiply',\n  alpha: 1,\n};\n\n/**\n * Color Blend filter class\n * @example\n * const filter = new BlendColor({\n *  color: '#000',\n *  mode: 'multiply'\n * });\n *\n * const filter = new BlendImage({\n *  image: fabricImageObject,\n *  mode: 'multiply',\n *  alpha: 0.5\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class BlendColor extends BaseFilter {\n  /**\n   * Color to make the blend operation with. default to a reddish color since black or white\n   * gives always strong result.\n   * @type String\n   * @default\n   **/\n  declare color: string;\n\n  /**\n   * Blend mode for the filter: one of multiply, add, difference, screen, subtract,\n   * darken, lighten, overlay, exclusion, tint.\n   * @type String\n   * @default\n   **/\n  declare mode: TBlendMode;\n\n  /**\n   * alpha value. represent the strength of the blend color operation.\n   * @type Number\n   * @default\n   **/\n  declare alpha: number;\n\n  static defaults = blendColorDefaultValues;\n\n  static type = 'BlendColor';\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  protected getFragmentSource(): string {\n    return `\n      precision highp float;\n      uniform sampler2D uTexture;\n      uniform vec4 uColor;\n      varying vec2 vTexCoord;\n      void main() {\n        vec4 color = texture2D(uTexture, vTexCoord);\n        gl_FragColor = color;\n        if (color.a > 0.0) {\n          ${blendColorFragmentSource[this.mode]}\n        }\n      }\n      `;\n  }\n\n  /**\n   * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const source = new Color(this.color).getSource();\n    const tr = source[0] * this.alpha;\n    const tg = source[1] * this.alpha;\n    const tb = source[2] * this.alpha;\n    const alpha1 = 1 - this.alpha;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n\n      switch (this.mode) {\n        case 'multiply':\n          data[i] = (r * tr) / 255;\n          data[i + 1] = (g * tg) / 255;\n          data[i + 2] = (b * tb) / 255;\n          break;\n        case 'screen':\n          data[i] = 255 - ((255 - r) * (255 - tr)) / 255;\n          data[i + 1] = 255 - ((255 - g) * (255 - tg)) / 255;\n          data[i + 2] = 255 - ((255 - b) * (255 - tb)) / 255;\n          break;\n        case 'add':\n          data[i] = r + tr;\n          data[i + 1] = g + tg;\n          data[i + 2] = b + tb;\n          break;\n        case 'difference':\n          data[i] = Math.abs(r - tr);\n          data[i + 1] = Math.abs(g - tg);\n          data[i + 2] = Math.abs(b - tb);\n          break;\n        case 'subtract':\n          data[i] = r - tr;\n          data[i + 1] = g - tg;\n          data[i + 2] = b - tb;\n          break;\n        case 'darken':\n          data[i] = Math.min(r, tr);\n          data[i + 1] = Math.min(g, tg);\n          data[i + 2] = Math.min(b, tb);\n          break;\n        case 'lighten':\n          data[i] = Math.max(r, tr);\n          data[i + 1] = Math.max(g, tg);\n          data[i + 2] = Math.max(b, tb);\n          break;\n        case 'overlay':\n          data[i] =\n            tr < 128\n              ? (2 * r * tr) / 255\n              : 255 - (2 * (255 - r) * (255 - tr)) / 255;\n          data[i + 1] =\n            tg < 128\n              ? (2 * g * tg) / 255\n              : 255 - (2 * (255 - g) * (255 - tg)) / 255;\n          data[i + 2] =\n            tb < 128\n              ? (2 * b * tb) / 255\n              : 255 - (2 * (255 - b) * (255 - tb)) / 255;\n          break;\n        case 'exclusion':\n          data[i] = tr + r - (2 * tr * r) / 255;\n          data[i + 1] = tg + g - (2 * tg * g) / 255;\n          data[i + 2] = tb + b - (2 * tb * b) / 255;\n          break;\n        case 'tint':\n          data[i] = tr + r * alpha1;\n          data[i + 1] = tg + g * alpha1;\n          data[i + 2] = tb + b * alpha1;\n      }\n    }\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uColor: gl.getUniformLocation(program, 'uColor'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    const source = new Color(this.color).getSource();\n    source[0] = (this.alpha * source[0]) / 255;\n    source[1] = (this.alpha * source[1]) / 255;\n    source[2] = (this.alpha * source[2]) / 255;\n    source[3] = this.alpha;\n    gl.uniform4fv(uniformLocations.uColor, source);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject() {\n    return {\n      type: this.type,\n      color: this.color,\n      mode: this.mode,\n      alpha: this.alpha,\n    };\n  }\n}\n\nclassRegistry.setClass(BlendColor);\n","import type { TBlendImageMode } from '../BlendImage';\n\nexport const fragmentSource: Record<TBlendImageMode, string> = {\n  multiply: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform sampler2D uImage;\n    uniform vec4 uColor;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      vec4 color2 = texture2D(uImage, vTexCoord2);\n      color.rgba *= color2.rgba;\n      gl_FragColor = color;\n    }\n    `,\n  mask: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform sampler2D uImage;\n    uniform vec4 uColor;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      vec4 color2 = texture2D(uImage, vTexCoord2);\n      color.a = color2.a;\n      gl_FragColor = color;\n    }\n    `,\n} as const;\n","import { FabricImage } from '../shapes/Image';\nimport type { TClassProperties } from '../typedefs';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TWebGLPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport type { WebGLFilterBackend } from './WebGLFilterBackend';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/blendImage';\n\nexport type TBlendImageMode = 'multiply' | 'mask';\n\nexport const blendImageDefaultValues: Partial<TClassProperties<BlendImage>> = {\n  mode: 'multiply',\n  alpha: 1,\n  vertexSource: `\n    attribute vec2 aPosition;\n    varying vec2 vTexCoord;\n    varying vec2 vTexCoord2;\n    uniform mat3 uTransformMatrix;\n    void main() {\n      vTexCoord = aPosition;\n      vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\n      gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\n    }\n    `,\n};\n\n/**\n * Image Blend filter class\n * @example\n * const filter = new filters.BlendColor({\n *  color: '#000',\n *  mode: 'multiply'\n * });\n *\n * const filter = new BlendImage({\n *  image: fabricImageObject,\n *  mode: 'multiply',\n *  alpha: 0.5\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class BlendImage extends BaseFilter {\n  /**\n   * Color to make the blend operation with. default to a reddish color since black or white\n   * gives always strong result.\n   **/\n  declare image: FabricImage;\n\n  declare mode: TBlendImageMode;\n\n  /**\n   * alpha value. represent the strength of the blend image operation.\n   * not implemented.\n   **/\n  declare alpha: number;\n\n  static type = 'BlendImage';\n\n  static defaults = blendImageDefaultValues;\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  getFragmentSource(): string {\n    return fragmentSource[this.mode];\n  }\n\n  applyToWebGL(options: TWebGLPipelineState) {\n    const gl = options.context,\n      texture = this.createTexture(options.filterBackend, this.image);\n    this.bindAdditionalTexture(gl, texture!, gl.TEXTURE1);\n    super.applyToWebGL(options);\n    this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n  }\n\n  createTexture(backend: WebGLFilterBackend, image: FabricImage) {\n    return backend.getCachedTexture(image.cacheKey, image.getElement());\n  }\n\n  /**\n   * Calculate a transformMatrix to adapt the image to blend over\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  calculateMatrix() {\n    const image = this.image,\n      { width, height } = image.getElement();\n    return [\n      1 / image.scaleX,\n      0,\n      0,\n      0,\n      1 / image.scaleY,\n      0,\n      -image.left / width,\n      -image.top / height,\n      1,\n    ];\n  }\n\n  /**\n   * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({\n    imageData: { data, width, height },\n    filterBackend: { resources },\n  }: T2DPipelineState) {\n    const image = this.image;\n    if (!resources.blendImage) {\n      resources.blendImage = createCanvasElement();\n    }\n    const canvas1 = resources.blendImage;\n    const context = canvas1.getContext('2d')!;\n    if (canvas1.width !== width || canvas1.height !== height) {\n      canvas1.width = width;\n      canvas1.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n    context.setTransform(\n      image.scaleX,\n      0,\n      0,\n      image.scaleY,\n      image.left,\n      image.top\n    );\n    context.drawImage(image.getElement(), 0, 0, width, height);\n    const blendData = context.getImageData(0, 0, width, height).data;\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      const a = data[i + 3];\n\n      const tr = blendData[i];\n      const tg = blendData[i + 1];\n      const tb = blendData[i + 2];\n      const ta = blendData[i + 3];\n\n      switch (this.mode) {\n        case 'multiply':\n          data[i] = (r * tr) / 255;\n          data[i + 1] = (g * tg) / 255;\n          data[i + 2] = (b * tb) / 255;\n          data[i + 3] = (a * ta) / 255;\n          break;\n        case 'mask':\n          data[i + 3] = ta;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n      uImage: gl.getUniformLocation(program, 'uImage'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    const matrix = this.calculateMatrix();\n    gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n    gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject() {\n    return {\n      type: this.type,\n      image: this.image && this.image.toObject(),\n      mode: this.mode,\n      alpha: this.alpha,\n    };\n  }\n\n  /**\n   * Create filter instance from an object representation\n   * @static\n   * @param {object} object Object to create an instance from\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting image loading, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<BlendImage>}\n   */\n  static fromObject(\n    { type, image, ...filterOptions }: Record<string, any>,\n    options: { signal: AbortSignal }\n  ) {\n    return FabricImage.fromObject(image, options).then(\n      (enlivedImage) =>\n        new this({ ...filterOptions, image: enlivedImage }) as BaseFilter\n    );\n  }\n}\n\nclassRegistry.setClass(BlendImage);\n","import type { TClassProperties } from '../typedefs';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { BaseFilter } from './BaseFilter';\nimport type {\n  TWebGLPipelineState,\n  T2DPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/blur';\n\nexport const blurDefaultValues: Partial<TClassProperties<Blur>> = {\n  blur: 0,\n  mainParameter: 'blur',\n};\n\n/**\n * Blur filter class\n * @example\n * const filter = new Blur({\n *   blur: 0.5\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Blur extends BaseFilter {\n  /**\n   * blur value, in percentage of image dimensions.\n   * specific to keep the image blur constant at different resolutions\n   * range between 0 and 1.\n   * @type Number\n   * @default\n   */\n  declare blur: number;\n\n  declare horizontal: boolean;\n  declare aspectRatio: number;\n\n  static type = 'Blur';\n\n  static defaults = blurDefaultValues;\n\n  getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      // this aspectRatio is used to give the same blur to vertical and horizontal\n      this.aspectRatio = options.sourceWidth / options.sourceHeight;\n      options.passes++;\n      this._setupFrameBuffer(options);\n      this.horizontal = true;\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n      this._setupFrameBuffer(options);\n      this.horizontal = false;\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  }\n\n  applyTo2d(options: T2DPipelineState) {\n    options.imageData = this.simpleBlur(options);\n  }\n\n  simpleBlur({\n    ctx,\n    imageData,\n    filterBackend: { resources },\n  }: T2DPipelineState) {\n    const { width, height } = imageData;\n    if (!resources.blurLayer1) {\n      resources.blurLayer1 = createCanvasElement();\n      resources.blurLayer2 = createCanvasElement();\n    }\n    const canvas1 = resources.blurLayer1!;\n    const canvas2 = resources.blurLayer2!;\n    if (canvas1.width !== width || canvas1.height !== height) {\n      canvas2.width = canvas1.width = width;\n      canvas2.height = canvas1.height = height;\n    }\n    const ctx1 = canvas1.getContext('2d')!,\n      ctx2 = canvas2.getContext('2d')!,\n      nSamples = 15,\n      blur = this.blur * 0.06 * 0.5;\n    let random, percent, j, i;\n\n    // load first canvas\n    ctx1.putImageData(imageData, 0, 0);\n    ctx2.clearRect(0, 0, width, height);\n\n    for (i = -nSamples; i <= nSamples; i++) {\n      random = (Math.random() - 0.5) / 4;\n      percent = i / nSamples;\n      j = blur * percent * width + random;\n      ctx2.globalAlpha = 1 - Math.abs(percent);\n      ctx2.drawImage(canvas1, j, random);\n      ctx1.drawImage(canvas2, 0, 0);\n      ctx2.globalAlpha = 1;\n      ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n    }\n    for (i = -nSamples; i <= nSamples; i++) {\n      random = (Math.random() - 0.5) / 4;\n      percent = i / nSamples;\n      j = blur * percent * height + random;\n      ctx2.globalAlpha = 1 - Math.abs(percent);\n      ctx2.drawImage(canvas1, random, j);\n      ctx1.drawImage(canvas2, 0, 0);\n      ctx2.globalAlpha = 1;\n      ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n    }\n    ctx.drawImage(canvas1, 0, 0);\n    const newImageData = ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n    ctx1.globalAlpha = 1;\n    ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n    return newImageData;\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      delta: gl.getUniformLocation(program, 'uDelta'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    const delta = this.chooseRightDelta();\n    gl.uniform2fv(uniformLocations.delta, delta);\n  }\n\n  /**\n   * choose right value of image percentage to blur with\n   * @returns {Array} a numeric array with delta values\n   */\n  chooseRightDelta() {\n    let blurScale = 1;\n    const delta = [0, 0];\n    if (this.horizontal) {\n      if (this.aspectRatio > 1) {\n        // image is wide, i want to shrink radius horizontal\n        blurScale = 1 / this.aspectRatio;\n      }\n    } else {\n      if (this.aspectRatio < 1) {\n        // image is tall, i want to shrink radius vertical\n        blurScale = this.aspectRatio;\n      }\n    }\n    const blur = blurScale * this.blur * 0.12;\n    if (this.horizontal) {\n      delta[0] = blur;\n    } else {\n      delta[1] = blur;\n    }\n    return delta;\n  }\n}\n\nclassRegistry.setClass(Blur);\n","export const fragmentSource = `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform vec2 uDelta;\n    varying vec2 vTexCoord;\n    const float nSamples = 15.0;\n    vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\n    float random(vec3 scale) {\n      /* use the fragment position for a different seed per-pixel */\n      return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\n    }\n    void main() {\n      vec4 color = vec4(0.0);\n      float total = 0.0;\n      float offset = random(v3offset);\n      for (float t = -nSamples; t <= nSamples; t++) {\n        float percent = (t + offset - 0.5) / nSamples;\n        float weight = 1.0 - abs(percent);\n        color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\n        total += weight;\n      }\n      gl_FragColor = color / total;\n    }\n  ` as const;\n","import type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/brightness';\nexport const brightnessDefaultValues: Partial<TClassProperties<Brightness>> = {\n  brightness: 0,\n  mainParameter: 'brightness',\n};\n\n/**\n * Brightness filter class\n * @example\n * const filter = new Brightness({\n *   brightness: 0.05\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Brightness extends BaseFilter {\n  /**\n   * Brightness value, from -1 to 1.\n   * translated to -255 to 255 for 2d\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n   * @param {Number} brightness\n   * @default\n   */\n  declare brightness: number;\n\n  static type = 'Brightness';\n\n  static defaults = brightnessDefaultValues;\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    if (this.brightness === 0) {\n      return;\n    }\n    const brightness = Math.round(this.brightness * 255);\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = data[i] + brightness;\n      data[i + 1] = data[i + 1] + brightness;\n      data[i + 2] = data[i + 2] + brightness;\n    }\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n  }\n}\n\nclassRegistry.setClass(Brightness);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uBrightness;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color.rgb += uBrightness;\n    gl_FragColor = color;\n  }\n`;\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  varying vec2 vTexCoord;\n  uniform mat4 uColorMatrix;\n  uniform vec4 uConstants;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color *= uColorMatrix;\n    color += uConstants;\n    gl_FragColor = color;\n  }`;\n","import type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/colorMatrix';\nexport const colorMatrixDefaultValues: Partial<TClassProperties<ColorMatrix>> =\n  {\n    matrix: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n    mainParameter: 'matrix',\n    colorsOnly: true,\n  };\n\n/**\n   * Color Matrix filter class\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl demo}\n   * @example <caption>Kodachrome filter</caption>\n   * const filter = new ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\nexport class ColorMatrix extends BaseFilter {\n  /**\n   * Colormatrix for pixels.\n   * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n   * outside the -1, 1 range.\n   * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n   * @param {Array} matrix array of 20 numbers.\n   * @default\n   */\n  declare matrix: number[];\n\n  /**\n   * Lock the colormatrix on the color part, skipping alpha, mainly for non webgl scenario\n   * to save some calculation\n   * @type Boolean\n   * @default true\n   */\n  declare colorsOnly: boolean;\n\n  static type = 'ColorMatrix';\n\n  static defaults = colorMatrixDefaultValues;\n\n  setOptions({ matrix, ...options }: Record<string, any>) {\n    if (matrix) {\n      // safeguard against mutation\n      this.matrix = [...matrix];\n    }\n    Object.assign(this, options);\n  }\n\n  getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d(options: T2DPipelineState) {\n    const imageData = options.imageData,\n      data = imageData.data,\n      m = this.matrix,\n      colorsOnly = this.colorsOnly;\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n      if (colorsOnly) {\n        data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n        data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n        data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n      } else {\n        const a = data[i + 3];\n        data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n        data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n        data[i + 2] =\n          r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n        data[i + 3] =\n          r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n      }\n    }\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n      uConstants: gl.getUniformLocation(program, 'uConstants'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    const m = this.matrix,\n      matrix = [\n        m[0],\n        m[1],\n        m[2],\n        m[3],\n        m[5],\n        m[6],\n        m[7],\n        m[8],\n        m[10],\n        m[11],\n        m[12],\n        m[13],\n        m[15],\n        m[16],\n        m[17],\n        m[18],\n      ],\n      constants = [m[4], m[9], m[14], m[19]];\n    gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n    gl.uniform4fv(uniformLocations.uConstants, constants);\n  }\n}\n\nclassRegistry.setClass(ColorMatrix);\n","import { ColorMatrix, colorMatrixDefaultValues } from './ColorMatrix';\nimport { classRegistry } from '../ClassRegistry';\n\nexport function createColorMatrixFilter(key: string, matrix: number[]) {\n  const newClass = class extends ColorMatrix {\n    static type = key;\n\n    static defaults = {\n      ...colorMatrixDefaultValues,\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: undefined,\n      matrix,\n    };\n  };\n  classRegistry.setClass(newClass, key);\n  return newClass;\n}\n\nexport const Brownie = createColorMatrixFilter(\n  'Brownie',\n  [\n    0.5997, 0.34553, -0.27082, 0, 0.186, -0.0377, 0.86095, 0.15059, 0, -0.1449,\n    0.24113, -0.07441, 0.44972, 0, -0.02965, 0, 0, 0, 1, 0,\n  ]\n);\n\nexport const Vintage = createColorMatrixFilter(\n  'Vintage',\n  [\n    0.62793, 0.32021, -0.03965, 0, 0.03784, 0.02578, 0.64411, 0.03259, 0,\n    0.02926, 0.0466, -0.08512, 0.52416, 0, 0.02023, 0, 0, 0, 1, 0,\n  ]\n);\n\nexport const Kodachrome = createColorMatrixFilter(\n  'Kodachrome',\n  [\n    1.12855, -0.39673, -0.03992, 0, 0.24991, -0.16404, 1.08352, -0.05498, 0,\n    0.09698, -0.16786, -0.56034, 1.60148, 0, 0.13972, 0, 0, 0, 1, 0,\n  ]\n);\n\nexport const Technicolor = createColorMatrixFilter(\n  'Technicolor',\n  [\n    1.91252, -0.85453, -0.09155, 0, 0.04624, -0.30878, 1.76589, -0.10601, 0,\n    -0.27589, -0.2311, -0.75018, 1.84759, 0, 0.12137, 0, 0, 0, 1, 0,\n  ]\n);\n\nexport const Polaroid = createColorMatrixFilter(\n  'Polaroid',\n  [\n    1.438, -0.062, -0.062, 0, 0, -0.122, 1.378, -0.122, 0, 0, -0.016, -0.016,\n    1.483, 0, 0, 0, 0, 0, 1, 0,\n  ]\n);\n\nexport const Sepia = createColorMatrixFilter(\n  'Sepia',\n  [\n    0.393, 0.769, 0.189, 0, 0, 0.349, 0.686, 0.168, 0, 0, 0.272, 0.534, 0.131,\n    0, 0, 0, 0, 0, 1, 0,\n  ]\n);\n\nexport const BlackWhite = createColorMatrixFilter(\n  'BlackWhite',\n  [\n    1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 0, 0, 0,\n    1, 0,\n  ]\n);\n","import { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLPipelineState } from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\n\n/**\n * A container class that knows how to apply a sequence of filters to an input image.\n */\nexport class Composed extends BaseFilter {\n  /**\n   * A non sparse array of filters to apply\n   */\n  declare subFilters: BaseFilter[];\n\n  static type = 'Composed';\n\n  constructor({\n    subFilters = [],\n    ...options\n  }: { subFilters?: BaseFilter[] } & Record<string, any> = {}) {\n    super(options);\n    this.subFilters = subFilters;\n  }\n\n  /**\n   * Apply this container's filters to the input image provided.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be applied.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      options.passes += this.subFilters.length - 1;\n    }\n    this.subFilters.forEach((filter) => {\n      filter.applyTo(options);\n    });\n  }\n\n  /**\n   * Serialize this filter into JSON.\n   *\n   * @returns {Object} A JSON representation of this filter.\n   */\n  toObject() {\n    return {\n      ...super.toObject(),\n      subFilters: this.subFilters.map((filter) => filter.toObject()),\n    };\n  }\n\n  isNeutralState() {\n    return !this.subFilters.some((filter) => !filter.isNeutralState());\n  }\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   * @static\n   * @param {oject} object Object to create an instance from\n   * @param {object} [options]\n   * @param {AbortSignal} [options.signal] handle aborting `BlendImage` filter loading, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<Composed>}\n   */\n  static fromObject(\n    object: Record<string, any>,\n    options: { signal: AbortSignal }\n  ) {\n    return Promise.all(\n      ((object.subFilters || []) as BaseFilter[]).map((filter) =>\n        classRegistry\n          .getClass<typeof BaseFilter>(filter.type)\n          .fromObject(filter, options)\n      )\n    ).then(\n      (enlivedFilters) => new this({ subFilters: enlivedFilters }) as BaseFilter\n    );\n  }\n}\n\nclassRegistry.setClass(Composed);\n","import type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/constrast';\nexport const contrastDefaultValues: Partial<TClassProperties<Contrast>> = {\n  contrast: 0,\n  mainParameter: 'contrast',\n};\n\n/**\n * Contrast filter class\n * @example\n * const filter = new Contrast({\n *   contrast: 0.25\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Contrast extends BaseFilter {\n  /**\n   * contrast value, range from -1 to 1.\n   * @param {Number} contrast\n   * @default 0\n   */\n  declare contrast: number;\n\n  static type = 'Contrast';\n\n  static defaults = contrastDefaultValues;\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n  /**\n   * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    if (this.contrast === 0) {\n      return;\n    }\n    const contrast = Math.floor(this.contrast * 255),\n      contrastF = (259 * (contrast + 255)) / (255 * (259 - contrast));\n\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = contrastF * (data[i] - 128) + 128;\n      data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n      data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n    }\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uContrast: gl.getUniformLocation(program, 'uContrast'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    gl.uniform1f(uniformLocations.uContrast, this.contrast);\n  }\n}\n\nclassRegistry.setClass(Contrast);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uContrast;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\n    color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\n    gl_FragColor = color;\n  }`;\n","export const fragmentSource = {\n  Convolute_3_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[9];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 3.0; h+=1.0) {\n        for (float w = 0.0; w < 3.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_3_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[9];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 3.0; h+=1.0) {\n        for (float w = 0.0; w < 3.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_5_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[25];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 5.0; h+=1.0) {\n        for (float w = 0.0; w < 5.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_5_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[25];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 5.0; h+=1.0) {\n        for (float w = 0.0; w < 5.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_7_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[49];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 7.0; h+=1.0) {\n        for (float w = 0.0; w < 7.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_7_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[49];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 7.0; h+=1.0) {\n        for (float w = 0.0; w < 7.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n  Convolute_9_1: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[81];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 0);\n      for (float h = 0.0; h < 9.0; h+=1.0) {\n        for (float w = 0.0; w < 9.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\n          color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\n        }\n      }\n      gl_FragColor = color;\n    }\n    `,\n  Convolute_9_0: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform float uMatrix[81];\n    uniform float uStepW;\n    uniform float uStepH;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = vec4(0, 0, 0, 1);\n      for (float h = 0.0; h < 9.0; h+=1.0) {\n        for (float w = 0.0; w < 9.0; w+=1.0) {\n          vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\n          color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\n        }\n      }\n      float alpha = texture2D(uTexture, vTexCoord).a;\n      gl_FragColor = color;\n      gl_FragColor.a = alpha;\n    }\n    `,\n};\n","import type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/convolute';\n\nexport const convoluteDefaultValues: Partial<TClassProperties<Convolute>> = {\n  opaque: false,\n  matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n};\n\n/**\n * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n * @example <caption>Sharpen filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 0, -1,  0,\n *            -1,  5, -1,\n *             0, -1,  0 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Blur filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 1/9, 1/9, 1/9,\n *             1/9, 1/9, 1/9,\n *             1/9, 1/9, 1/9 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Emboss filter</caption>\n * const filter = new Convolute({\n *   matrix: [ 1,   1,  1,\n *             1, 0.7, -1,\n *            -1,  -1, -1 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n * @example <caption>Emboss filter with opaqueness</caption>\n * const filter = new Convolute({\n *   opaque: true,\n *   matrix: [ 1,   1,  1,\n *             1, 0.7, -1,\n *            -1,  -1, -1 ]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Convolute extends BaseFilter {\n  /*\n   * Opaque value (true/false)\n   */\n  declare opaque: boolean;\n\n  /*\n   * matrix for the filter, max 9x9\n   */\n  declare matrix: number[];\n\n  static type = 'Convolute';\n\n  static defaults = convoluteDefaultValues;\n\n  getCacheKey() {\n    return `${this.type}_${Math.sqrt(this.matrix.length)}_${\n      this.opaque ? 1 : 0\n    }` as keyof typeof fragmentSource;\n  }\n\n  getFragmentSource() {\n    return fragmentSource[this.getCacheKey()];\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d(options: T2DPipelineState) {\n    const imageData = options.imageData,\n      data = imageData.data,\n      weights = this.matrix,\n      side = Math.round(Math.sqrt(weights.length)),\n      halfSide = Math.floor(side / 2),\n      sw = imageData.width,\n      sh = imageData.height,\n      output = options.ctx.createImageData(sw, sh),\n      dst = output.data,\n      // go through the destination image pixels\n      alphaFac = this.opaque ? 1 : 0;\n    let r, g, b, a, dstOff, scx, scy, srcOff, wt, x, y, cx, cy;\n\n    for (y = 0; y < sh; y++) {\n      for (x = 0; x < sw; x++) {\n        dstOff = (y * sw + x) * 4;\n        // calculate the weighed sum of the source image pixels that\n        // fall under the convolution matrix\n        r = 0;\n        g = 0;\n        b = 0;\n        a = 0;\n\n        for (cy = 0; cy < side; cy++) {\n          for (cx = 0; cx < side; cx++) {\n            scy = y + cy - halfSide;\n            scx = x + cx - halfSide;\n\n            // eslint-disable-next-line max-depth\n            if (scy < 0 || scy >= sh || scx < 0 || scx >= sw) {\n              continue;\n            }\n\n            srcOff = (scy * sw + scx) * 4;\n            wt = weights[cy * side + cx];\n\n            r += data[srcOff] * wt;\n            g += data[srcOff + 1] * wt;\n            b += data[srcOff + 2] * wt;\n            // eslint-disable-next-line max-depth\n            if (!alphaFac) {\n              a += data[srcOff + 3] * wt;\n            }\n          }\n        }\n        dst[dstOff] = r;\n        dst[dstOff + 1] = g;\n        dst[dstOff + 2] = b;\n        if (!alphaFac) {\n          dst[dstOff + 3] = a;\n        } else {\n          dst[dstOff + 3] = data[dstOff + 3];\n        }\n      }\n    }\n    options.imageData = output;\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n      uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n      uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n      uSize: gl.getUniformLocation(program, 'uSize'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject() {\n    return {\n      ...super.toObject(),\n      opaque: this.opaque,\n      matrix: [...this.matrix],\n    };\n  }\n}\n\nclassRegistry.setClass(Convolute);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform vec3 uGamma;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    vec3 correction = (1.0 / uGamma);\n    color.r = pow(color.r, correction.r);\n    color.g = pow(color.g, correction.g);\n    color.b = pow(color.b, correction.b);\n    gl_FragColor = color;\n    gl_FragColor.rgb *= color.a;\n  }\n`;\n","import type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/gamma';\nexport type GammaInput = [number, number, number];\n\nexport const gammaDefaultValues: Partial<TClassProperties<Gamma>> = {\n  mainParameter: 'gamma',\n  gamma: [1, 1, 1],\n};\n\n/**\n * Gamma filter class\n * @example\n * const filter = new Gamma({\n *   gamma: [1, 0.5, 2.1]\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Gamma extends BaseFilter {\n  /**\n   * Gamma array value, from 0.01 to 2.2.\n   * @param {Array} gamma\n   * @default\n   */\n  declare gamma: GammaInput;\n  declare rgbValues?: {\n    r: Uint8Array;\n    g: Uint8Array;\n    b: Uint8Array;\n  };\n\n  static type = 'Gamma';\n\n  static defaults = gammaDefaultValues;\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  constructor({ gamma = [1, 1, 1], ...options }: { gamma?: GammaInput } = {}) {\n    super(options);\n    this.gamma = gamma;\n  }\n\n  /**\n   * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const gamma = this.gamma,\n      rInv = 1 / gamma[0],\n      gInv = 1 / gamma[1],\n      bInv = 1 / gamma[2];\n\n    if (!this.rgbValues) {\n      this.rgbValues = {\n        r: new Uint8Array(256),\n        g: new Uint8Array(256),\n        b: new Uint8Array(256),\n      };\n    }\n\n    // This is an optimization - pre-compute a look-up table for each color channel\n    // instead of performing these pow calls for each pixel in the image.\n    const rgb = this.rgbValues;\n    for (let i = 0; i < 256; i++) {\n      rgb.r[i] = Math.pow(i / 255, rInv) * 255;\n      rgb.g[i] = Math.pow(i / 255, gInv) * 255;\n      rgb.b[i] = Math.pow(i / 255, bInv) * 255;\n    }\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = rgb.r[data[i]];\n      data[i + 1] = rgb.g[data[i + 1]];\n      data[i + 2] = rgb.b[data[i + 2]];\n    }\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uGamma: gl.getUniformLocation(program, 'uGamma'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n  }\n}\n\nclassRegistry.setClass(Gamma);\n","import type { TGrayscaleMode } from '../Grayscale';\n\nexport const fragmentSource: Record<TGrayscaleMode, string> = {\n  average: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 color = texture2D(uTexture, vTexCoord);\n      float average = (color.r + color.b + color.g) / 3.0;\n      gl_FragColor = vec4(average, average, average, color.a);\n    }\n    `,\n  lightness: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform int uMode;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 col = texture2D(uTexture, vTexCoord);\n      float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\n      gl_FragColor = vec4(average, average, average, col.a);\n    }\n    `,\n  luminosity: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform int uMode;\n    varying vec2 vTexCoord;\n    void main() {\n      vec4 col = texture2D(uTexture, vTexCoord);\n      float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\n      gl_FragColor = vec4(average, average, average, col.a);\n    }\n    `,\n};\n","import type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/grayscale';\n\nexport type TGrayscaleMode = 'average' | 'lightness' | 'luminosity';\n\nexport const grayscaleDefaultValues: Partial<TClassProperties<Grayscale>> = {\n  mode: 'average',\n  mainParameter: 'mode',\n};\n\n/**\n * Grayscale image filter class\n * @example\n * const filter = new Grayscale();\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Grayscale extends BaseFilter {\n  declare mode: TGrayscaleMode;\n\n  static type = 'Grayscale';\n\n  static defaults = grayscaleDefaultValues;\n\n  /**\n   * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    for (let i = 0, value: number; i < data.length; i += 4) {\n      switch (this.mode) {\n        case 'average':\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          break;\n        case 'lightness':\n          value =\n            (Math.min(data[i], data[i + 1], data[i + 2]) +\n              Math.max(data[i], data[i + 1], data[i + 2])) /\n            2;\n          break;\n        case 'luminosity':\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n          break;\n      }\n\n      data[i] = value;\n      data[i + 1] = value;\n      data[i + 2] = value;\n    }\n  }\n\n  getCacheKey() {\n    return `${this.type}_${this.mode}`;\n  }\n\n  getFragmentSource() {\n    return fragmentSource[this.mode];\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uMode: gl.getUniformLocation(program, 'uMode'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    const mode = 1;\n    gl.uniform1i(uniformLocations.uMode, mode);\n  }\n\n  /**\n   * Grayscale filter isNeutralState implementation\n   * The filter is never neutral\n   * on the image\n   **/\n  isNeutralState() {\n    return false;\n  }\n}\n\nclassRegistry.setClass(Grayscale);\n","import type { TClassProperties } from '../typedefs';\nimport { cos } from '../util/misc/cos';\nimport { sin } from '../util/misc/sin';\nimport { ColorMatrix } from './ColorMatrix';\nimport type { TWebGLPipelineState, T2DPipelineState } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\n\nexport const hueRotationDefaultValues: Partial<TClassProperties<HueRotation>> =\n  {\n    rotation: 0,\n    mainParameter: 'rotation',\n  };\n\n/**\n * HueRotation filter class\n * @example\n * const filter = new HueRotation({\n *   rotation: -0.5\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\n// @ts-expect-error some babbling about mainParameter\nexport class HueRotation extends ColorMatrix {\n  /**\n   * HueRotation value, from -1 to 1.\n   */\n  declare rotation: number;\n\n  static type = 'HueRotation';\n\n  static defaults = hueRotationDefaultValues;\n\n  calculateMatrix() {\n    const rad = this.rotation * Math.PI,\n      cosine = cos(rad),\n      sine = sin(rad),\n      aThird = 1 / 3,\n      aThirdSqtSin = Math.sqrt(aThird) * sine,\n      OneMinusCos = 1 - cosine;\n    this.matrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n    this.matrix[0] = cosine + OneMinusCos / 3;\n    this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n    this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n    this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n    this.matrix[6] = cosine + aThird * OneMinusCos;\n    this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n    this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n    this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n    this.matrix[12] = cosine + aThird * OneMinusCos;\n  }\n\n  isNeutralState() {\n    this.calculateMatrix();\n    return super.isNeutralState();\n  }\n\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    this.calculateMatrix();\n    super.applyTo(options);\n  }\n}\n\nclassRegistry.setClass(HueRotation);\n","import type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/invert';\n\nexport const invertDefaultValues: Partial<TClassProperties<Invert>> = {\n  alpha: false,\n  invert: true,\n  mainParameter: 'invert',\n};\n\n/**\n * @example\n * const filter = new Invert();\n * object.filters.push(filter);\n * object.applyFilters(canvas.renderAll.bind(canvas));\n */\nexport class Invert extends BaseFilter {\n  /**\n   * Invert also alpha.\n   * @param {Boolean} alpha\n   * @default\n   **/\n  declare alpha: boolean;\n\n  /**\n   * Filter invert. if false, does nothing\n   * @param {Boolean} invert\n   * @default\n   */\n  declare invert: boolean;\n\n  static type = 'Invert';\n\n  static defaults = invertDefaultValues;\n\n  /**\n   * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8Array to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    for (let i = 0; i < data.length; i += 4) {\n      data[i] = 255 - data[i];\n      data[i + 1] = 255 - data[i + 1];\n      data[i + 2] = 255 - data[i + 2];\n\n      if (this.alpha) {\n        data[i + 3] = 255 - data[i + 3];\n      }\n    }\n  }\n\n  protected getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Invert filter isNeutralState implementation\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * @param {Object} options\n   **/\n  isNeutralState() {\n    return !this.invert;\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uInvert: gl.getUniformLocation(program, 'uInvert'),\n      uAlpha: gl.getUniformLocation(program, 'uAlpha'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    gl.uniform1i(uniformLocations.uInvert, Number(this.invert));\n    gl.uniform1i(uniformLocations.uAlpha, Number(this.alpha));\n  }\n}\n\nclassRegistry.setClass(Invert);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform int uInvert;\n  uniform int uAlpha;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    if (uInvert == 1) {\n      if (uAlpha == 1) {\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,1.0 -color.a);\n      } else {\n        gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\n      }\n    } else {\n      gl_FragColor = color;\n    }\n  }\n`;\n","import type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/noise';\n\nexport const noiseDefaultValues: Partial<TClassProperties<Noise>> = {\n  mainParameter: 'noise',\n  noise: 0,\n};\n\n/**\n * Noise filter class\n * @example\n * const filter = new Noise({\n *   noise: 700\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Noise extends BaseFilter {\n  /**\n   * Noise value, from\n   * @param {Number} noise\n   * @default\n   */\n  declare noise: number;\n\n  static type = 'Noise';\n\n  static defaults = noiseDefaultValues;\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    if (this.noise === 0) {\n      return;\n    }\n    const noise = this.noise;\n    for (let i = 0; i < data.length; i += 4) {\n      const rand = (0.5 - Math.random()) * noise;\n      data[i] += rand;\n      data[i + 1] += rand;\n      data[i + 2] += rand;\n    }\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uNoise: gl.getUniformLocation(program, 'uNoise'),\n      uSeed: gl.getUniformLocation(program, 'uSeed'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n    gl.uniform1f(uniformLocations.uSeed, Math.random());\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject() {\n    return { ...super.toObject(), noise: this.noise };\n  }\n}\n\nclassRegistry.setClass(Noise);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uStepH;\n  uniform float uNoise;\n  uniform float uSeed;\n  varying vec2 vTexCoord;\n  float rand(vec2 co, float seed, float vScale) {\n    return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\n  }\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\n    gl_FragColor = color;\n  }\n`;\n","import type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/pixelate';\n\nexport const pixelateDefaultValues: Partial<TClassProperties<Pixelate>> = {\n  blocksize: 4,\n  mainParameter: 'blocksize',\n};\n\n/**\n * Pixelate filter class\n * @example\n * const filter = new Pixelate({\n *   blocksize: 8\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Pixelate extends BaseFilter {\n  declare blocksize: number;\n\n  static type = 'Pixelate';\n\n  static defaults = pixelateDefaultValues;\n\n  /**\n   * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data, width, height } }: T2DPipelineState) {\n    for (let i = 0; i < height; i += this.blocksize) {\n      for (let j = 0; j < width; j += this.blocksize) {\n        const index = i * 4 * width + j * 4;\n        const r = data[index];\n        const g = data[index + 1];\n        const b = data[index + 2];\n        const a = data[index + 3];\n\n        for (let _i = i; _i < Math.min(i + this.blocksize, height); _i++) {\n          for (let _j = j; _j < Math.min(j + this.blocksize, width); _j++) {\n            const index = _i * 4 * width + _j * 4;\n            data[index] = r;\n            data[index + 1] = g;\n            data[index + 2] = b;\n            data[index + 3] = a;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Indicate when the filter is not gonna apply changes to the image\n   **/\n  isNeutralState() {\n    return this.blocksize === 1;\n  }\n\n  protected getFragmentSource(): string {\n    return fragmentSource;\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n      uStepW: gl.getUniformLocation(program, 'uStepW'),\n      uStepH: gl.getUniformLocation(program, 'uStepH'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n  }\n}\n\nclassRegistry.setClass(Pixelate);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uBlocksize;\n  uniform float uStepW;\n  uniform float uStepH;\n  varying vec2 vTexCoord;\n  void main() {\n    float blockW = uBlocksize * uStepW;\n    float blockH = uBlocksize * uStepW;\n    int posX = int(vTexCoord.x / blockW);\n    int posY = int(vTexCoord.y / blockH);\n    float fposX = float(posX);\n    float fposY = float(posY);\n    vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\n    vec4 color = texture2D(uTexture, squareCoords);\n    gl_FragColor = color;\n  }\n`;\n","import { Color } from '../color/Color';\nimport type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentShader } from './shaders/removeColor';\nexport const removeColorDefaultValues: Partial<TClassProperties<RemoveColor>> =\n  {\n    color: '#FFFFFF',\n    distance: 0.02,\n    useAlpha: false,\n  };\n\n/**\n * Remove white filter class\n * @example\n * const filter = new RemoveColor({\n *   threshold: 0.2,\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class RemoveColor extends BaseFilter {\n  /**\n   * Color to remove, in any format understood by {@link Color}.\n   * @param {String} type\n   * @default\n   */\n  declare color: string;\n\n  /**\n   * distance to actual color, as value up or down from each r,g,b\n   * between 0 and 1\n   **/\n  declare distance: number;\n\n  /**\n   * For color to remove inside distance, use alpha channel for a smoother deletion\n   * NOT IMPLEMENTED YET\n   **/\n  declare useAlpha: boolean;\n\n  static type = 'RemoveColor';\n\n  static defaults = removeColorDefaultValues;\n\n  getFragmentShader() {\n    return fragmentShader;\n  }\n\n  /**\n   * Applies filter to canvas element\n   * @param {Object} canvasEl Canvas element to apply filter to\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    const distance = this.distance * 255,\n      source = new Color(this.color).getSource(),\n      lowC = [source[0] - distance, source[1] - distance, source[2] - distance],\n      highC = [\n        source[0] + distance,\n        source[1] + distance,\n        source[2] + distance,\n      ];\n\n    for (let i = 0; i < data.length; i += 4) {\n      const r = data[i];\n      const g = data[i + 1];\n      const b = data[i + 2];\n\n      if (\n        r > lowC[0] &&\n        g > lowC[1] &&\n        b > lowC[2] &&\n        r < highC[0] &&\n        g < highC[1] &&\n        b < highC[2]\n      ) {\n        data[i + 3] = 0;\n      }\n    }\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uLow: gl.getUniformLocation(program, 'uLow'),\n      uHigh: gl.getUniformLocation(program, 'uHigh'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    const source = new Color(this.color).getSource(),\n      distance = this.distance,\n      lowC = [\n        0 + source[0] / 255 - distance,\n        0 + source[1] / 255 - distance,\n        0 + source[2] / 255 - distance,\n        1,\n      ],\n      highC = [\n        source[0] / 255 + distance,\n        source[1] / 255 + distance,\n        source[2] / 255 + distance,\n        1,\n      ];\n    gl.uniform4fv(uniformLocations.uLow, lowC);\n    gl.uniform4fv(uniformLocations.uHigh, highC);\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject() {\n    return { ...super.toObject(), color: this.color, distance: this.distance };\n  }\n}\n\nclassRegistry.setClass(RemoveColor);\n","export const fragmentShader = `\nprecision highp float;\nuniform sampler2D uTexture;\nuniform vec4 uLow;\nuniform vec4 uHigh;\nvarying vec2 vTexCoord;\nvoid main() {\n  gl_FragColor = texture2D(uTexture, vTexCoord);\n  if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\n    gl_FragColor.a = 0.0;\n  }\n}\n`;\n","import type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type {\n  T2DPipelineState,\n  TWebGLPipelineState,\n  TWebGLUniformLocationMap,\n} from './typedefs';\nimport { isWebGLPipelineState } from './utils';\nimport { classRegistry } from '../ClassRegistry';\nimport { createCanvasElement } from '../util/misc/dom';\nimport type { XY } from '../Point';\n\nexport const resizeDefaultValues: Partial<TClassProperties<Resize>> = {\n  resizeType: 'hermite',\n  scaleX: 1,\n  scaleY: 1,\n  lanczosLobes: 3,\n  fragmentSourceTOP: `\n    precision highp float;\n    uniform sampler2D uTexture;\n    uniform vec2 uDelta;\n    varying vec2 vTexCoord;\n  `,\n};\n\nexport type TResizeType = 'bilinear' | 'hermite' | 'sliceHack' | 'lanczos';\n\ntype ResizeDuring2DResize = Resize & {\n  rcpScaleX: number;\n  rcpScaleY: number;\n};\n\ntype ResizeDuringWEBGLResize = Resize & {\n  rcpScaleX: number;\n  rcpScaleY: number;\n  horizontal: boolean;\n  width: number;\n  height: number;\n  taps: number[];\n  tempScale: number;\n  dH: number;\n  dW: number;\n};\n\n/**\n * Resize image filter class\n * @example\n * const filter = new Resize();\n * object.filters.push(filter);\n * object.applyFilters(canvas.renderAll.bind(canvas));\n */\nexport class Resize extends BaseFilter {\n  /**\n   * Resize type\n   * for webgl resizeType is just lanczos, for canvas2d can be:\n   * bilinear, hermite, sliceHack, lanczos.\n   * @default\n   */\n  declare resizeType: TResizeType;\n\n  /**\n   * Scale factor for resizing, x axis\n   * @param {Number} scaleX\n   * @default\n   */\n  declare scaleX: number;\n\n  /**\n   * Scale factor for resizing, y axis\n   * @param {Number} scaleY\n   * @default\n   */\n  declare scaleY: number;\n\n  /**\n   * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n   * @param {Number} lanczosLobes\n   * @default\n   */\n  declare lanczosLobes: number;\n\n  declare fragmentSourceTOP: string;\n\n  static type = 'Resize';\n\n  static defaults = resizeDefaultValues;\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(gl: WebGLRenderingContext, program: WebGLProgram) {\n    return {\n      uDelta: gl.getUniformLocation(program, 'uDelta'),\n      uTaps: gl.getUniformLocation(program, 'uTaps'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    this: ResizeDuringWEBGLResize,\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    gl.uniform2fv(\n      uniformLocations.uDelta,\n      this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]\n    );\n    gl.uniform1fv(uniformLocations.uTaps, this.taps);\n  }\n\n  getFilterWindow(this: ResizeDuringWEBGLResize) {\n    const scale = this.tempScale;\n    return Math.ceil(this.lanczosLobes / scale);\n  }\n\n  getCacheKey(this: ResizeDuringWEBGLResize): string {\n    const filterWindow = this.getFilterWindow();\n    return `${this.type}_${filterWindow}`;\n  }\n\n  getFragmentSource(this: ResizeDuringWEBGLResize): string {\n    const filterWindow = this.getFilterWindow();\n    return this.generateShader(filterWindow);\n  }\n\n  getTaps(this: ResizeDuringWEBGLResize) {\n    const lobeFunction = this.lanczosCreate(this.lanczosLobes),\n      scale = this.tempScale,\n      filterWindow = this.getFilterWindow(),\n      taps = new Array(filterWindow);\n    for (let i = 1; i <= filterWindow; i++) {\n      taps[i - 1] = lobeFunction(i * scale);\n    }\n    return taps;\n  }\n\n  /**\n   * Generate vertex and shader sources from the necessary steps numbers\n   * @param {Number} filterWindow\n   */\n  generateShader(filterWindow: number) {\n    const offsets = new Array(filterWindow);\n    for (let i = 1; i <= filterWindow; i++) {\n      offsets[i - 1] = `${i}.0 * uDelta`;\n    }\n    return `\n      ${this.fragmentSourceTOP}\n      uniform float uTaps[${filterWindow}];\n      void main() {\n        vec4 color = texture2D(uTexture, vTexCoord);\n        float sum = 1.0;\n        ${offsets\n          .map(\n            (offset, i) => `\n              color += texture2D(uTexture, vTexCoord + ${offset}) * uTaps[${i}] + texture2D(uTexture, vTexCoord - ${offset}) * uTaps[${i}];\n              sum += 2.0 * uTaps[${i}];\n            `\n          )\n          .join('\\n')}\n        gl_FragColor = color / sum;\n      }\n    `;\n  }\n\n  applyToForWebgl(this: ResizeDuringWEBGLResize, options: TWebGLPipelineState) {\n    options.passes++;\n    this.width = options.sourceWidth;\n    this.horizontal = true;\n    this.dW = Math.round(this.width * this.scaleX);\n    this.dH = options.sourceHeight;\n    this.tempScale = this.dW / this.width;\n    this.taps = this.getTaps();\n    options.destinationWidth = this.dW;\n    super.applyTo(options);\n    options.sourceWidth = options.destinationWidth;\n\n    this.height = options.sourceHeight;\n    this.horizontal = false;\n    this.dH = Math.round(this.height * this.scaleY);\n    this.tempScale = this.dH / this.height;\n    this.taps = this.getTaps();\n    options.destinationHeight = this.dH;\n    super.applyTo(options);\n    options.sourceHeight = options.destinationHeight;\n  }\n\n  /**\n   * Apply the resize filter to the image\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo(options: TWebGLPipelineState | T2DPipelineState) {\n    if (isWebGLPipelineState(options)) {\n      (this as unknown as ResizeDuringWEBGLResize).applyToForWebgl(options);\n    } else {\n      (this as unknown as ResizeDuring2DResize).applyTo2d(options);\n    }\n  }\n\n  isNeutralState() {\n    return this.scaleX === 1 && this.scaleY === 1;\n  }\n\n  lanczosCreate(lobes: number) {\n    return (x: number) => {\n      if (x >= lobes || x <= -lobes) {\n        return 0.0;\n      }\n      if (x < 1.1920929e-7 && x > -1.1920929e-7) {\n        return 1.0;\n      }\n      x *= Math.PI;\n      const xx = x / lobes;\n      return ((Math.sin(x) / x) * Math.sin(xx)) / xx;\n    };\n  }\n\n  applyTo2d(this: ResizeDuring2DResize, options: T2DPipelineState) {\n    const imageData = options.imageData,\n      scaleX = this.scaleX,\n      scaleY = this.scaleY;\n\n    this.rcpScaleX = 1 / scaleX;\n    this.rcpScaleY = 1 / scaleY;\n\n    const oW = imageData.width;\n    const oH = imageData.height;\n    const dW = Math.round(oW * scaleX);\n    const dH = Math.round(oH * scaleY);\n    let newData: ImageData;\n\n    if (this.resizeType === 'sliceHack') {\n      newData = this.sliceByTwo(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'hermite') {\n      newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'bilinear') {\n      newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n    } else if (this.resizeType === 'lanczos') {\n      newData = this.lanczosResize(options, oW, oH, dW, dH);\n    } else {\n      // this should never trigger, is here just for safety net.\n      newData = new ImageData(dW, dH);\n    }\n    options.imageData = newData;\n  }\n\n  /**\n   * Filter sliceByTwo\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  sliceByTwo(\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number\n  ) {\n    const imageData = options.imageData;\n    const mult = 0.5;\n    let doneW = false;\n    let doneH = false;\n    let stepW = oW * mult;\n    let stepH = oH * mult;\n    const resources = options.filterBackend.resources;\n    let sX = 0;\n    let sY = 0;\n    const dX = oW;\n    let dY = 0;\n    if (!resources.sliceByTwo) {\n      resources.sliceByTwo = createCanvasElement();\n    }\n    const tmpCanvas = resources.sliceByTwo;\n    if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n      tmpCanvas.width = oW * 1.5;\n      tmpCanvas.height = oH;\n    }\n    const ctx = tmpCanvas.getContext('2d')!;\n    ctx.clearRect(0, 0, oW * 1.5, oH);\n    ctx.putImageData(imageData, 0, 0);\n\n    dW = Math.floor(dW);\n    dH = Math.floor(dH);\n\n    while (!doneW || !doneH) {\n      oW = stepW;\n      oH = stepH;\n      if (dW < Math.floor(stepW * mult)) {\n        stepW = Math.floor(stepW * mult);\n      } else {\n        stepW = dW;\n        doneW = true;\n      }\n      if (dH < Math.floor(stepH * mult)) {\n        stepH = Math.floor(stepH * mult);\n      } else {\n        stepH = dH;\n        doneH = true;\n      }\n      ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n      sX = dX;\n      sY = dY;\n      dY += stepH;\n    }\n    return ctx.getImageData(sX, sY, dW, dH);\n  }\n\n  /**\n   * Filter lanczosResize\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  lanczosResize(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number\n  ): ImageData {\n    function process(u: number): ImageData {\n      let v, i, weight, idx, a, red, green, blue, alpha, fX, fY;\n      center.x = (u + 0.5) * ratioX;\n      icenter.x = Math.floor(center.x);\n      for (v = 0; v < dH; v++) {\n        center.y = (v + 0.5) * ratioY;\n        icenter.y = Math.floor(center.y);\n        a = 0;\n        red = 0;\n        green = 0;\n        blue = 0;\n        alpha = 0;\n        for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n          if (i < 0 || i >= oW) {\n            continue;\n          }\n          fX = Math.floor(1000 * Math.abs(i - center.x));\n          if (!cacheLanc[fX]) {\n            cacheLanc[fX] = {};\n          }\n          for (let j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n            if (j < 0 || j >= oH) {\n              continue;\n            }\n            fY = Math.floor(1000 * Math.abs(j - center.y));\n            if (!cacheLanc[fX][fY]) {\n              cacheLanc[fX][fY] = lanczos(\n                Math.sqrt(\n                  Math.pow(fX * rcpRatioX, 2) + Math.pow(fY * rcpRatioY, 2)\n                ) / 1000\n              );\n            }\n            weight = cacheLanc[fX][fY];\n            if (weight > 0) {\n              idx = (j * oW + i) * 4;\n              a += weight;\n              red += weight * srcData[idx];\n              green += weight * srcData[idx + 1];\n              blue += weight * srcData[idx + 2];\n              alpha += weight * srcData[idx + 3];\n            }\n          }\n        }\n        idx = (v * dW + u) * 4;\n        destData[idx] = red / a;\n        destData[idx + 1] = green / a;\n        destData[idx + 2] = blue / a;\n        destData[idx + 3] = alpha / a;\n      }\n\n      if (++u < dW) {\n        return process(u);\n      } else {\n        return destImg;\n      }\n    }\n\n    const srcData = options.imageData.data,\n      destImg = options.ctx.createImageData(dW, dH),\n      destData = destImg.data,\n      lanczos = this.lanczosCreate(this.lanczosLobes),\n      ratioX = this.rcpScaleX,\n      ratioY = this.rcpScaleY,\n      rcpRatioX = 2 / this.rcpScaleX,\n      rcpRatioY = 2 / this.rcpScaleY,\n      range2X = Math.ceil((ratioX * this.lanczosLobes) / 2),\n      range2Y = Math.ceil((ratioY * this.lanczosLobes) / 2),\n      cacheLanc: Record<number, Record<number, number>> = {},\n      center: XY = { x: 0, y: 0 },\n      icenter: XY = { x: 0, y: 0 };\n\n    return process(0);\n  }\n\n  /**\n   * bilinearFiltering\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  bilinearFiltering(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number\n  ) {\n    let a;\n    let b;\n    let c;\n    let d;\n    let x;\n    let y;\n    let i;\n    let j;\n    let xDiff;\n    let yDiff;\n    let chnl;\n    let color;\n    let offset = 0;\n    let origPix;\n    const ratioX = this.rcpScaleX;\n    const ratioY = this.rcpScaleY;\n    const w4 = 4 * (oW - 1);\n    const img = options.imageData;\n    const pixels = img.data;\n    const destImage = options.ctx.createImageData(dW, dH);\n    const destPixels = destImage.data;\n    for (i = 0; i < dH; i++) {\n      for (j = 0; j < dW; j++) {\n        x = Math.floor(ratioX * j);\n        y = Math.floor(ratioY * i);\n        xDiff = ratioX * j - x;\n        yDiff = ratioY * i - y;\n        origPix = 4 * (y * oW + x);\n\n        for (chnl = 0; chnl < 4; chnl++) {\n          a = pixels[origPix + chnl];\n          b = pixels[origPix + 4 + chnl];\n          c = pixels[origPix + w4 + chnl];\n          d = pixels[origPix + w4 + 4 + chnl];\n          color =\n            a * (1 - xDiff) * (1 - yDiff) +\n            b * xDiff * (1 - yDiff) +\n            c * yDiff * (1 - xDiff) +\n            d * xDiff * yDiff;\n          destPixels[offset++] = color;\n        }\n      }\n    }\n    return destImage;\n  }\n\n  /**\n   * hermiteFastResize\n   * @param {Object} canvasEl Canvas element to apply filter to\n   * @param {Number} oW Original Width\n   * @param {Number} oH Original Height\n   * @param {Number} dW Destination Width\n   * @param {Number} dH Destination Height\n   * @returns {ImageData}\n   */\n  hermiteFastResize(\n    this: ResizeDuring2DResize,\n    options: T2DPipelineState,\n    oW: number,\n    oH: number,\n    dW: number,\n    dH: number\n  ) {\n    const ratioW = this.rcpScaleX,\n      ratioH = this.rcpScaleY,\n      ratioWHalf = Math.ceil(ratioW / 2),\n      ratioHHalf = Math.ceil(ratioH / 2),\n      img = options.imageData,\n      data = img.data,\n      img2 = options.ctx.createImageData(dW, dH),\n      data2 = img2.data;\n    for (let j = 0; j < dH; j++) {\n      for (let i = 0; i < dW; i++) {\n        const x2 = (i + j * dW) * 4;\n        let weight = 0;\n        let weights = 0;\n        let weightsAlpha = 0;\n        let gxR = 0;\n        let gxG = 0;\n        let gxB = 0;\n        let gxA = 0;\n        const centerY = (j + 0.5) * ratioH;\n        for (let yy = Math.floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n          const dy = Math.abs(centerY - (yy + 0.5)) / ratioHHalf,\n            centerX = (i + 0.5) * ratioW,\n            w0 = dy * dy;\n          for (let xx = Math.floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n            let dx = Math.abs(centerX - (xx + 0.5)) / ratioWHalf;\n            const w = Math.sqrt(w0 + dx * dx);\n            /* eslint-disable max-depth */\n            if (w > 1 && w < -1) {\n              continue;\n            }\n            //hermite filter\n            weight = 2 * w * w * w - 3 * w * w + 1;\n            if (weight > 0) {\n              dx = 4 * (xx + yy * oW);\n              //alpha\n              gxA += weight * data[dx + 3];\n              weightsAlpha += weight;\n              //colors\n              if (data[dx + 3] < 255) {\n                weight = (weight * data[dx + 3]) / 250;\n              }\n              gxR += weight * data[dx];\n              gxG += weight * data[dx + 1];\n              gxB += weight * data[dx + 2];\n              weights += weight;\n            }\n            /* eslint-enable max-depth */\n          }\n        }\n        data2[x2] = gxR / weights;\n        data2[x2 + 1] = gxG / weights;\n        data2[x2 + 2] = gxB / weights;\n        data2[x2 + 3] = gxA / weightsAlpha;\n      }\n    }\n    return img2;\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject() {\n    return {\n      type: this.type,\n      scaleX: this.scaleX,\n      scaleY: this.scaleY,\n      resizeType: this.resizeType,\n      lanczosLobes: this.lanczosLobes,\n    };\n  }\n}\n\nclassRegistry.setClass(Resize);\n","import type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/saturation';\n\n/**\n * Saturate filter class\n * @example\n * const filter = new Saturation({\n *   saturation: 1\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\n\nexport const saturationDefaultValues: Partial<TClassProperties<Saturation>> = {\n  saturation: 0,\n  mainParameter: 'saturation',\n};\n\nexport class Saturation extends BaseFilter {\n  /**\n   * Saturation value, from -1 to 1.\n   * Increases/decreases the color saturation.\n   * A value of 0 has no effect.\n   *\n   * @param {Number} saturation\n   * @default\n   */\n  declare saturation: number;\n\n  static type = 'Saturation';\n\n  static defaults = saturationDefaultValues;\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    if (this.saturation === 0) {\n      return;\n    }\n    const adjust = -this.saturation;\n    for (let i = 0; i < data.length; i += 4) {\n      const max = Math.max(data[i], data[i + 1], data[i + 2]);\n      data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n      data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n      data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n    }\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n  }\n}\n\nclassRegistry.setClass(Saturation);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uSaturation;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float rgMax = max(color.r, color.g);\n    float rgbMax = max(rgMax, color.b);\n    color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\n    color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\n    color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\n    gl_FragColor = color;\n  }\n`;\n","import type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/vibrance';\n\nexport const vibranceDefaultValues: Partial<TClassProperties<Vibrance>> = {\n  vibrance: 0,\n  mainParameter: 'vibrance',\n};\n\n/**\n * Vibrance filter class\n * @example\n * const filter = new Vibrance({\n *   vibrance: 1\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Vibrance extends BaseFilter {\n  /**\n   * Vibrance value, from -1 to 1.\n   * Increases/decreases the saturation of more muted colors with less effect on saturated colors.\n   * A value of 0 has no effect.\n   *\n   * @param {Number} vibrance\n   * @default\n   */\n  declare vibrance: number;\n\n  static type = 'Vibrance';\n\n  static defaults = vibranceDefaultValues;\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Vibrance operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    if (this.vibrance === 0) {\n      return;\n    }\n    const adjust = -this.vibrance;\n    for (let i = 0; i < data.length; i += 4) {\n      const max = Math.max(data[i], data[i + 1], data[i + 2]);\n      const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n      const amt = ((Math.abs(max - avg) * 2) / 255) * adjust;\n      data[i] += max !== data[i] ? (max - data[i]) * amt : 0;\n      data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * amt : 0;\n      data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * amt : 0;\n    }\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uVibrance: gl.getUniformLocation(program, 'uVibrance'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    gl.uniform1f(uniformLocations.uVibrance, -this.vibrance);\n  }\n}\n\nclassRegistry.setClass(Vibrance);\n","export const fragmentSource = `\n  precision highp float;\n  uniform sampler2D uTexture;\n  uniform float uVibrance;\n  varying vec2 vTexCoord;\n  void main() {\n    vec4 color = texture2D(uTexture, vTexCoord);\n    float max = max(color.r, max(color.g, color.b));\n    float avg = (color.r + color.g + color.b) / 3.0;\n    float amt = (abs(max - avg) * 2.0) * uVibrance;\n    color.r += max != color.r ? (max - color.r) * amt : 0.00;\n    color.g += max != color.g ? (max - color.g) * amt : 0.00;\n    color.b += max != color.b ? (max - color.b) * amt : 0.00;\n    gl_FragColor = color;\n  }\n`;\n"],"names":["BaseConfiguration","constructor","_defineProperty","this","window","devicePixelRatio","config","super","configure","arguments","length","undefined","Object","assign","addFonts","paths","fontPaths","_objectSpread","removeFonts","forEach","fontFamily","clearFonts","restoreDefaults","keys","defaults","reduce","acc","key","log","severity","_len","optionalParams","Array","_key","console","FabricError","Error","message","options","concat","SignalAbortedError","context","GLProbe","WebGLProbe","testPrecision","gl","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","queryWebGL","canvas","getContext","maxTextureSize","getParameter","MAX_TEXTURE_SIZE","GLPrecision","find","getExtension","loseContext","isSupported","textureSize","copyPasteData","env","setEnv","value","getEnv","document","isTouchSupported","navigator","maxTouchPoints","dispose","getFabricDocument","getFabricWindow","getDevicePixelRatio","_config$devicePixelRa","Math","max","cache","getFontCache","_ref","fontStyle","fontWeight","toLowerCase","charWidthsCache","fontCache","cacheKey","clearFontCache","limitDimsByArea","ar","perfLimitSizeTotal","roughWidth","sqrt","floor","VERSION","noop","halfPI","PI","twoMathPi","PiBy180","iMatrix","freeze","DEFAULT_SVG_FONT_SIZE","kRect","CENTER","LEFT","TOP","BOTTOM","RIGHT","NONE","reNewline","JSON","SVG","classRegistry","Map","getClass","classType","get","setClass","classConstructor","set","type","getSVGClass","SVGTagName","setSVGClass","runningAnimations","remove","index","indexOf","splice","cancelAll","animations","animation","abort","cancelByCanvas","filter","_animation$target","target","cancelByTarget","Observable","on","arg0","handler","__eventListeners","entries","eventName","off","push","once","disposers","_ref2","d","disposer","args","call","_removeEventListener","eventListener","_ref3","fire","_this$__eventListener","listenersForEvent","i","getRandomInt","min","random","ifNaN","valueIfNaN","isNaN","removeFromArray","array","idx","cos","angle","abs","sin","angleSlice","sign","Point","y","x","add","that","addEquals","scalarAdd","scalar","scalarAddEquals","subtract","subtractEquals","scalarSubtract","scalarSubtractEquals","multiply","scalarMultiply","scalarMultiplyEquals","divide","scalarDivide","scalarDivideEquals","eq","lt","lte","gt","gte","lerp","t","distanceFrom","dx","dy","midPointFrom","toString","setXY","setX","setY","setFromPoint","swap","clone","rotate","radians","origin","ZERO","sinus","cosinus","p","transform","ignoreOffset","isCollection","fabricObject","isArray","_objects","createCollectionMixin","Base","Collection","_onObjectAdded","object","_onObjectRemoved","_onStackOrderChanged","objects","size","insertAt","_len2","_key2","removed","_len3","_key3","forEachObject","callback","getObjects","_len4","types","_key4","o","isType","item","isEmpty","contains","deep","includes","some","obj","complexity","memo","current","sendObjectToBack","unshift","bringObjectToFront","sendObjectBackwards","intersecting","newIdx","findNewLowerIndex","bringObjectForward","findNewUpperIndex","moveObjectTo","isOverlapping","collectObjects","left","top","width","height","includeIntersecting","tl","br","selectable","visible","intersectsWithRect","isContainedWithinRect","containsPoint","CommonMethods","_setOptions","prop","_setObject","_set","toggle","property","requestAnimFrame","requestAnimationFrame","cancelAnimFrame","handle","cancelAnimationFrame","id","uid","createCanvasElement","element","createElement","createImage","toDataURL","canvasEl","format","quality","degreesToRadians","degrees","radiansToDegrees","transformPoint","invertTransform","a","r","multiplyTransformMatrices","b","is2x2","multiplyTransformMatrixArray","matrices","reduceRight","product","curr","calcPlaneRotation","atan2","qrDecompose","denom","pow","scaleX","scaleY","skewX","skewY","translateX","translateY","createTranslateMatrix","createRotateMatrix","angleRadiant","cosValue","sinValue","createScaleMatrix","angleToSkew","tan","createSkewXMatrix","skewValue","createSkewYMatrix","calcDimensionsMatrix","flipX","flipY","composeMatrix","otherOptions","_objectWithoutProperties","_excluded","loadImage","url","signal","crossOrigin","Promise","resolve","reject","aborted","img","err","src","addEventListener","done","onload","onerror","removeEventListener","enlivenObjects","reviver","instances","all","map","fromObject","then","fabricInstance","catch","error","instance","finally","enlivenObjectEnlivables","serializedObject","promises","values","enlived","source","pattern","pick","pickBy","predicate","ColorNameMap","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","hue2rgb","q","rgb2Hsl","g","maxValue","minValue","h","s","l","round","fromAlphaToFloat","parseFloat","endsWith","hexify","toUpperCase","padStart","greyAverage","avg","Color","color","setSource","_source","_tryParsingColor","sourceFromHex","sourceFromRgb","sourceFromHsl","getSource","toRgb","toRgba","join","toHsl","toHsla","toHex","toHexa","slice","getAlpha","setAlpha","alpha","toGrayscale","toBlackWhite","threshold","average","bOrW","overlayWith","otherColor","otherSource","R","G","B","fromRgb","fromRgba","match","parsedValue","fromHsl","fromHsla","fromHex","expandedValue","split","hex","hexCouple","parseInt","toFixed","number","fractionDigits","Number","parseUnit","fontSize","unit","exec","dpi","DPI","parsePreserveAspectRatioAttribute","attribute","firstPart","secondPart","trim","alignX","alignY","align","meetOrSlice","matrixToSVG","NUM_FRACTION_DIGITS","colorPropToSVG","colorValue","opacityValue","inlineStyle","toLive","opacity","isFiller","filler","isSerializableFiller","toObject","isPattern","offsetX","hasOwn","isTextObject","_renderText","isActiveSelection","getScrollLeftTop","doc","getDocumentFromElement","docElement","documentElement","body","scrollLeft","scrollTop","parentNode","host","nodeType","style","position","el","ownerDocument","getWindowFromElement","_el$ownerDocument","defaultView","setStyle","styles","elementStyle","cssText","setProperty","setCanvasDimensions","ctx","retinaScaling","setAttribute","scale","setCSSDimensions","makeElementUnselectable","onselectstart","userSelect","StaticCanvasDOMManager","createLowerCanvas","lower","getElementById","hasAttribute","_originalCanvasStyle","classList","cleanupDOM","removeAttribute","setDimensions","calcOffset","_getWindowFromElement","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","elemStyle","getComputedStyle","attr","docElem","getBoundingClientRect","scrollLeftTop","clientLeft","clientTop","getElementOffset","staticCanvasDefaults","backgroundVpt","backgroundColor","overlayVpt","overlayColor","includeDefaultValues","svgViewportTransformation","renderOnAddRemove","skipOffscreen","enableRetinaScaling","imageSmoothingEnabled","controlsAboveOverlay","allowTouchScrolling","viewportTransform","StaticCanvas","lowerCanvasEl","_this$elements$lower","elements","contextContainer","_this$elements$lower2","getDefaults","ownDefaults","initElements","_setDimensionsImpl","calcViewportBoundaries","requestRenderAll","setCoords","getRetinaScaling","_offset","getWidth","getHeight","setWidth","setHeight","dimensions","cssOnly","backstoreOnly","hasLostContext","getZoom","setViewportTransform","vpt","backgroundObject","backgroundImage","overlayObject","overlayImage","len","group","zoomToPoint","point","before","newPoint","after","setZoom","absolutePan","relativePan","getElement","clearContext","clearRect","clear","renderAll","cancelRequestedRender","destroyed","renderCanvas","renderAndReset","nextRenderHandle","disposed","iVpt","vptCoords","tr","bl","drawControls","v","path","clipPath","patternQuality","_renderBackground","save","_renderObjects","restore","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","__cleanupTask","globalCompositeOperation","zoomX","zoomY","drawImage","_cacheCanvas","cacheTranslationX","cacheTranslationY","render","_renderBackgroundOrOverlay","fill","needsVpt","isAFiller","beginPath","moveTo","lineTo","closePath","fillStyle","offsetY","m","gradientTransform","patternTransform","getCenter","getCenterPoint","centerObjectH","_centerObject","centerObjectV","centerObject","viewportCenterObject","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","center","toDatalessJSON","propertiesToInclude","toDatalessObject","_toObjectMethod","toJSON","methodName","clipPathData","excludeFromExport","_toObject","version","__serializeBgOverlay","originalValue","data","bgImage","bgColor","background","overlay","toSVG","markup","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","optViewBox","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","shouldTransform","additionalTransform","fontList","styleRow","fontListMarkup","_setSVGObject","bgOrOverlay","repeat","finalWidth","finalHeight","loadFromJSON","json","serialized","parse","enlivedMap","properties","cloneWithoutData","multiplier","finalMultiplier","toCanvasElement","scaledWidth","scaledHeight","zoom","originalWidth","originalHeight","newZoom","vp","newVp","originalRetina","objectsToRender","task","destroy","kill","touchEvents","getPointer","event","scroll","_evt","touchProp","changedTouches","getTouchInfo","clientX","clientY","isTouchEvent","pointerType","stopEvent","e","preventDefault","stopPropagation","makeBoundingBoxFromPoints","points","addTransformToObject","applyTransformToObject","calcOwnMatrix","_qrDecompose","setPositionByOrigin","resetObjectTransform","saveObjectTransform","sizeAfterTransform","dimX","dimY","bbox","calcPlaneChangeMatrix","from","sendPointToPlane","to","sendVectorToPlane","sendObjectToPlane","fireEvent","_target$canvas","originOffset","bottom","right","resolveOrigin","originValue","NOT_ALLOWED_CURSOR","isTransformCentered","originX","originY","invertOrigin","isLocked","lockingKey","commonEventInfo","eventData","pointer","findCornerQuadrant","control","cornerAngle","getTotalAngle","getLocalPoint","corner","controls","padding","localPoint","getRelativeCenterPoint","translateToGivenOrigin","normalizePoint","dragHandler","newLeft","newTop","moveX","moveY","FabricObjectSVGExportMixin","getSvgStyles","skipShadow","fillRule","strokeWidth","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","visibility","getSvgFilter","stroke","shadow","getSvgCommons","getSvgTransform","full","calcTransformMatrix","svgTransform","_toSVG","_createBaseSVGMarkup","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","noStyle","withShadow","styleInfo","shadowInfo","vectorEffect","strokeUniform","absoluteClipPath","absolutePositioned","clipPathMarkup","addPaintOrder","paintFirst","normalize","c","asin","elastic","defaultEasing","easeOutBounce","easeInBounce","easeInCirc","easeInCubic","easeInElastic","normA","normS","normP","easeInExpo","easeInOutBounce","easeInOutCirc","easeInOutCubic","easeInOutElastic","normC","easeInOutExpo","easeInOutQuad","easeInOutQuart","easeInOutQuint","easeInOutSine","easeInQuad","easeInQuart","easeInQuint","easeInSine","easeOutCirc","easeOutCubic","easeOutElastic","easeOutExpo","easeOutQuad","easeOutQuart","easeOutQuint","easeOutSine","defaultAbort","AnimationBase","startValue","byValue","duration","delay","easing","onStart","onChange","onComplete","tick","bind","_onStart","_onChange","_onComplete","_abort","endValue","calculate","state","_state","isDone","start","firstTick","timestamp","startTime","Date","register","setTimeout","durationMs","boundDurationMs","durationProgress","valueProgress","unregister","ValueAnimation","timeElapsed","ArrayAnimation","capValue","defaultColorEasing","wrapColorCallback","rgba","ColorAnimation","startColor","endColor","animate","isArrayAnimation","animateColor","unitVectorX","zero","rotateVector","vector","createVector","magnitude","calcAngleBetweenVectors","crossProduct","dotProduct","calcVectorRotation","getUnitVector","getOrthonormalVector","counterClockwise","isBetweenVectors","AxB","AxT","BxT","Intersection","status","append","isPointContained","T","A","infinite","AB","isPointInPolygon","other","hits","inter","intersectSegmentSegment","intersectLineLine","a1","a2","b1","b2","aInfinite","bInfinite","a2xa1x","a2ya1y","b2xb1x","b2yb1y","a1xb1x","a1yb1y","uaT","ubT","uB","ua","ub","segmentsCoincide","intersectSegmentLine","s1","s2","l1","l2","intersectLinePolygon","result","intersectSegmentPolygon","intersectPolygonPolygon","points1","points2","coincidences","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","ObjectOrigin","_getTransformedDimensions","dimOptions","preScalingStrokeValue","postScalingStrokeValue","finalDimensions","fromOriginX","fromOriginY","toOriginX","toOriginY","dim","translateToCenterPoint","translateToOriginPoint","relCenter","getPointByOrigin","pos","_getLeftTopCoords","ObjectGeometry","getX","getXY","getY","getRelativeX","setRelativeX","getRelativeY","setRelativeY","relativePosition","getRelativeXY","setRelativeXY","isStrokeAccountedForInDimensions","getCoords","aCoords","calcACoords","coords","intersectsWithObject","intersection","isContainedWithinObject","every","getBoundingRect","isOnScreen","isPartiallyOnScreen","getScaledWidth","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","getCanvasRetinaScaling","_this$canvas","getViewportTransform","_this$canvas2","rotateMatrix","tMatrix","finalMatrix","w","transformMatrixKey","skipGroup","sep","prefix","matrix","matrixCache","ownMatrixCache","_getNonTransformedDimensions","_calculateCurrentDimensions","StackedObject","isDescendantOf","parent","getAncestors","strict","ancestors","_parent$parent","findCommonAncestors","fork","otherFork","common","otherAncestors","ancestor","j","hasCommonAncestors","commonAncestors","isInFrontOf","ancestorData","firstCommonAncestor","headOfFork","pop","headOfOtherFork","thisIndex","otherIndex","AnimatableObject","animatable","_animate","propIsColor","colorProperties","animationOptions","getSvgRegex","arr","RegExp","reNum","String","raw","_templateObject","_taggedTemplateLiteral","svgNS","_templateObject2","reFontDeclaration","attributesMap","cx","cy","display","fSize","cPath","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgValidParentsRegEx","reViewBoxAttrValue","shadowOffsetRegex","Shadow","parseShadow","shadowStr","regex","blur","replace","fBoxX","fBoxY","affectStroke","nonScaling","cloneDeep","stringify","stateProperties","cacheProperties","fabricObjectDefaultValues","minScaleLimit","objectCaching","inverted","centeredRotation","centeredScaling","dirty","FabricObject","name","setOptions","_createCacheCanvas","_cacheContext","_updateCacheCanvas","_limitCacheSize","dims","maxCacheSideLimit","minCacheSideLimit","limX","limY","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","neededX","neededY","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","drawingWidth","drawingHeight","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","getHeightOfLine","ceil","setTransform","translate","needFullTransform","contextTop","_removeDefaultValues","baseValues","getPrototypeOf","baseValue","getObjectScaling","retina","getObjectOpacity","_constrainScale","isChanged","groupNeedsUpdate","isOnACache","isNotVisible","_setupCompositeOperation","drawSelectionBackground","_setOpacity","_setShadow","drawCacheOnCanvas","_removeCacheCanvas","drawObject","isCacheDirty","hasStroke","hasFill","needsItsOwnCache","ownCaching","willDrawShadow","drawClipPathOnCache","originalFill","originalStroke","_setClippingProperties","_render","_drawClipPath","skipCanvas","fillRect","_removeShadow","globalAlpha","_setStrokeStyles","decl","lineWidth","lineCap","lineDashOffset","lineJoin","miterLimit","gradientUnits","_applyPatternForTransformedGradient","strokeStyle","_applyPatternGradientTransform","_setFillStyles","_setLineDash","dashArray","setLineDash","sx","sy","multX","multY","scaling","shadowColor","shadowBlur","browserShadowBlurConstant","shadowOffsetX","shadowOffsetY","_renderPaintInOrder","_renderStroke","_renderFill","_pCtx$createPattern","pCanvas","pCtx","createPattern","_findCenterFromElement","objectForm","cloneAsImage","origParams","originalGroup","originalShadow","canvasProvider","withoutTransform","withoutShadow","boundingRect","shadowOffset","originalCanvas","setOnGroup","_fromObject","extraParam","_excluded2","allOptions","_toPropertyKey","wrapWithFireEvent","actionHandler","actionPerformed","wrapWithFixedAnchor","centerPoint","constraint","changeWidth","changeObjectWidth","strokePadding","oldWidth","newWidth","renderCircleControl","styleOverride","xSize","sizeX","cornerSize","ySize","sizeY","transparentCorners","cornerStrokeColor","myLeft","myTop","cornerColor","arc","renderSquareControl","xSizeBy2","ySizeBy2","strokeRect","Control","shouldActivate","controlKey","_fabricObject$canvas","getActiveObject","isControlVisible","getActionHandler","getMouseDownHandler","mouseDownHandler","getMouseUpHandler","mouseUpHandler","cursorStyleHandler","cursorStyle","getActionName","actionName","getVisibility","_fabricObject$_contro","_fabricObject$_contro2","_controlsVisibility","setVisibility","positionHandler","currentControl","calcCornerCoords","objectCornerSize","centerX","centerY","isTouch","touchSizeX","touchSizeY","cornerStyle","rotationStyleHandler","lockRotation","rotationWithSnapping","rotateObjectWithSnapping","ex","ey","theta","pivotPoint","lastAngle","curAngle","snapAngle","snapThreshold","rightAngleLocked","leftAngleLocked","hasRotated","scaleIsProportional","uniformIsToggled","uniScaleKey","uniformScaling","scalingIsForbidden","by","scaleProportionally","lockX","lockY","scaleMap","scaleCursorStyleHandler","n","scaleObject","signX","signY","gestureScale","distance","original","oldScaleX","oldScaleY","scalingEqually","scaleObjectFromCorner","scalingX","scaleObjectX","scalingY","scaleObjectY","AXIS_KEYS","counterAxis","skew","lockSkewing","flip","skewMap","skewCursorStyleHandler","skewHandler","axis","originKey","lockSkewingKey","skewKey","flipKey","counterOriginKey","counterFlipKey","counterOriginFactor","skewingSide","finalHandler","skewingBefore","skewingStart","shearingStart","shearing","skewing","atan","changed","dimBefore","dimAfter","compensationFactor","skewObject","skewHandlerX","skewHandlerY","isAltAction","altActionKey","scaleOrSkewActionName","isAlternative","scaleSkewCursorStyleHandler","scalingXOrSkewingY","scalingYOrSkewingX","createObjectDefaultControls","ml","mr","mb","mt","mtr","withConnection","createResizeControls","createTextboxDefaultControls","InteractiveFabricObject","targetCanvas","noScaleCache","_currentTransform","action","startsWith","getActiveControl","__corner","coord","oCoords","_findTargetCorner","forTouch","hasControls","cornerEntries","touchCorner","calcOCoords","rMatrix","positionMatrix","startMatrix","transformOptions","forEachControl","_calcCornerCoords","touchCornerSize","fn","selectionBackgroundColor","_activeObject","wh","strokeBorders","_drawBorders","borderColor","borderDashArray","drawControlsConnectingLines","_renderControls","hasBorders","styleOptions","shouldDrawBorders","shouldDrawControls","borderScaleFactor","isMoving","borderOpacityWhenMoving","drawBorders","forActiveSelection","shouldStroke","cornerDashArray","setControlVisible","setControlsVisibility","clearContextTop","restoreManually","onDeselect","onSelect","shouldStartDragging","onDragStart","canDrop","renderDragSourceEffect","renderDropTargetEffect","applyMixins","derivedCtor","constructors","baseCtor","getOwnPropertyNames","prototype","defineProperty","getOwnPropertyDescriptor","create","lockMovementX","lockMovementY","lockScalingX","lockScalingY","lockSkewingX","lockSkewingY","lockScalingFlip","evented","perPixelTargetFind","activeOn","hoverCursor","moveCursor","isTransparent","tolerance","getImageData","StrokeProjectionsBase","strokeProjectionMagnitude","strokeUniformScalar","createSideVector","projectOrthogonally","applySkew","calcOrthogonalProjection","isSkewed","scaleUnitVector","unitVector","zeroVector","StrokeLineJoinProjections","getOrthogonalRotationFactor","vector1","vector2","C","AC","bisector","orthogonalProjection","correctSide","projectBevel","projections","projectMiter","hypotUnitScalar","miterVector","projectRoundNoSkew","startCircle","endCircle","projectRoundWithSkew","circleRadius","newY","furthestY","newX","furthestX","projectRound","isStraightLine","newOrigin","proj0","proj1","comparisonVector","isProj0Start","projectPoints","project","originPoint","projectedPoint","StrokeLineCapProjections","projectButt","projection","projectSquare","strokePointingOut","projectedA","projectStrokeOnPoints","openPath","reduced","findIndexRight","escapeXml","string","graphemeSplit","textstring","graphemes","chr","getWholeChar","str","code","charCodeAt","charAt","next","prev","firstLetterOnly","hasStyleChanged","prevStyle","thisStyle","forTextSpans","textBackgroundColor","deltaY","overline","underline","linethrough","stylesToArray","text","textLines","stylesArray","charIndex","chars","end","stylesFromArray","stylesObject","styleIndex","SHARED_ATTRIBUTES","selectorMatches","selector","nodeName","classNames","getAttribute","azAz","matcher","splitClassNames","elementMatchesRule","selectors","parentMatching","firstMatching","parentElement","doesSomeParentMatch","normalizeAttr","_attributesMap","cleanupSvgAttribute","attributeValue","_templateObject3","_templateObject4","_templateObject5","_templateObject6","transforms","transformList","_templateObject7","reTransformList","reTransform","parseTransformAttribute","test","matchAll","transformMatch","matchedParams","operation","rawArgs","arg1","arg2","arg3","arg4","arg5","arg","normalizeValue","parentAttributes","parsed","ouputValue","transformMatrix","fillIndex","strokeIndex","parseFontDeclaration","oStyle","lineHeight","parseStyleAttribute","chunk","parseStyleString","parseStyleObject","colorAttributesMap","parseAttributes","attributes","cssRules","parentFontSize","ownAttributes","rule","getGlobalStylesForElement","normalizedStyle","normalizedAttr","normalizedValue","font","mergedAttrs","colorAttr","setStrokeFillOpacity","RECT_PROPS","Rect","_initRxRy","rx","ry","isRounded","bezierCurveTo","fromElement","_parseAttributes","ATTRIBUTE_NAMES","restOfparsedAttributes","Boolean","LAYOUT_TYPE_INITIALIZATION","LAYOUT_TYPE_ADDED","LAYOUT_TYPE_REMOVED","LAYOUT_TYPE_IMPERATIVE","getObjectBounds","destinationGroup","currentGroup","objectCenter","accountForStroke","strokeUniformVector","scalingStrokeWidth","sizeVector","LayoutStrategy","calcLayoutResult","shouldPerformLayout","calcBoundingBox","prevStrategy","strategy","shouldLayoutClipPath","getInitialSize","overrides","bboxSize","bboxCenter","actualSize","relativeCorrection","FitContentLayout","LAYOUT_MANAGER","LayoutManager","_subscriptions","performLayout","strictContext","bubbles","_prevLayoutStrategy","onBeforeLayout","layoutResult","getLayoutResult","commitLayout","onAfterLayout","subscribe","unsubscribe","trigger","delete","unsubscribeTargets","targets","subscribeTargets","tricklingContext","_layoutManager","layoutManager","prevCenter","nextCenter","correction","_context$x","_context$y","layoutObjects","layoutObject","_","bubblingContext","NoopLayoutManager","Group","__objectSelectionTracker","__objectSelectionMonitor","__objectSelectionDisposer","enterGroup","canEnterGroup","_filterObjectsBeforeEnteringGroup","allowedObjects","_onAfterObjectsChange","removeParentTransform","exitGroup","_shouldSetNestedCoords","subTargetCheck","removeAll","_activeObjects","selected","_watchObject","watch","_enterGroup","activeObject","_exitGroup","ownCache","preserveObjectStacking","triggerLayout","__serializeObjects","method","_includeDefaultValues","originalDefaults","_createSVGBgRect","fillStroke","commons","svgString","bg","hydratedOptions","layoutClass","strategyClass","interactive","findScaleToFit","destination","findScaleToCover","reMoveToCommand","reLineCommand","reHorizontalLineCommand","reVerticalLineCommand","reClosePathCommand","reCubicCurveCommand","reCubicCurveShortcutCommand","reQuadraticCurveCommand","reQuadraticCurveShortcutCommand","reArcCommand","rePathCommand","repeatedCommands","M","segmentToBezier","theta1","theta2","cosTh","sinTh","cx1","cy1","mT","fromX","fromY","costh1","sinth1","costh2","sinth2","toX","toY","calcVectorAngle","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","begx","begy","cp1x","cp1y","cp2x","cp2y","endx","endy","argsString","cachesBoundsOfCurve","boundsOfCurveCache","tvalues","bounds","b2ac","sqrtb2ac","t1","t2","jlen","iterator","getPointOnCubicBezierIterator","fromArcToBeziers","fx","fy","rot","large","sweep","tx","ty","segsNorm","arcToSegments","rotateX","root","sinTheta","px","py","rx2","ry2","py2","px2","pl","_rx","_ry","mTheta","dtheta","segments","mDelta","th3","makePathSimpler","x1","y1","destinationPath","previous","controlX","controlY","parsedCommand","converted","calcLineLength","x2","y2","pct","c1","c2","CB2","c3","CB3","c4","CB4","QB1","QB2","QB3","getTangentCubicIterator","p1x","p1y","p2x","p2y","p3x","p3y","p4x","p4y","qb1","qb2","qb3","tangentX","tangentY","getPointOnQuadraticBezierIterator","getTangentQuadraticIterator","invT","pathIterator","tempP","tmpLen","perc","findPercentageForDistance","segInfo","nextLen","nextStep","lastPerc","angleFinder","getPathSegmentsInfo","tempInfo","totalLength","info","basicInfo","command","destX","destY","getPointOnPath","infos","segPercent","segment","parsePath","pathString","res","matchStr","chain","paramArr","filteredGroups","shift","numParse","reverse","transformed","getSmoothPathFromPoints","p1","p2","multSignX","multSignY","manyPoints","midPoint","joinPath","pathData","request","xhr","removeListener","ontimeout","onreadystatechange","readyState","open","send","removeTransformMatrixForSvgParsing","preserveAspectRatioOptions","_assignTransformMatrixProps","cropX","cropY","offsetLeft","offsetTop","_newCanvas$getContext","newCanvas","getRegularPolygonPath","numVertexes","radius","interiorAngle","rotationAdjustment","rad","commonAttributes","groupSVGElements","mat","mergeClipPaths","_b$group","removeTransformFromObject","finalTransform","rotatePoint","transformPath","pathOffset","pathSegment","newSegment","CanvasDOMManager","containerClass","upperCanvasEl","createUpperCanvas","upper","applyCanvasStyle","container","createContainerElement","replaceChild","className","allow","touchAction","removeChild","SelectableCanvas","_this$elements$upper","_this$elements$upper2","wrapperEl","_objectsToRender","deselected","_discardActiveObject","_hoveredTarget","_hoveredTargets","_chooseObjectsToRender","contextTopDirty","_groupSelector","isDrawingMode","renderTopLayer","_isCurrentlyDrawing","freeDrawingBrush","selection","_drawSelection","renderTop","setTargetFindTolerance","targetFindTolerance","pixelFindCanvasEl","pixelFindContext","isTargetTransparent","selectionBgc","enhancedTolerance","_isSelectionKeyPressed","sKey","selectionKey","_shouldClearSelection","activeObjects","getActiveObjects","_shouldCenterTransform","modifierKeyPressed","centerTransform","_getOriginFromCorner","controlName","_setupCurrentTransform","alreadySelected","_control$getActionHan","getScenePoint","getActionFromCorner","altKey","centeredKey","lastX","lastY","shiftKey","setCursor","cursor","deltaX","extent","strokeOffset","selectionLineWidth","minX","minY","maxX","maxY","selectionColor","selectionBorderColor","selectionDashArray","findTarget","skipTargetFind","getViewportPoint","aObjects","searchPossibleTargets","subTargets","altSelectionKey","_pointIsInObjectSelectionArea","viewportZoom","angleRadians","cosP","sinP","cosPSinP","cosPMinusSinP","_checkTarget","isEditing","_searchPossibleTargets","subTarget","_pointer","_absolutePointer","fromViewport","boundsWidth","boundsHeight","cssScale","_resetTransformEventData","_setBrushStyles","willReadFrequently","getTopContext","getSelectionContext","getSelectionElement","active","_fireSelectionEvents","oldObjects","somethingChanged","invalidate","added","setActiveObject","currentActives","_setActiveObject","prevActiveObject","endCurrentTransform","discardActiveObject","discarded","_finalizeCurrentTransform","_scaling","originalProperties","_realizeGroupTransformOnObject","originalValues","selectionFullyContained","defaultCursor","freeDrawingCursor","notAllowedCursor","stopContextMenu","fireRightClick","fireMiddleClick","enablePointerEvents","TextEditingManager","cb","hiddenTextarea","focus","__disposer","exitTextEditing","exitEditing","onMouseMove","_this$target","updateSelectionOnMouseMove","addEventOptions","passive","getEventPoints","viewportPoint","scenePoint","absolutePointer","addListener","syntheticEventConfig","mouse","in","out","targetIn","targetOut","canvasIn","canvasOut","drag","Canvas","eventHandler","addOrRemove","_getEventPrefix","functor","eventjsFunctor","canvasElement","eventTypePrefix","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragStart","_onDragEnd","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","_onTouchStart","removeListeners","_onMouseUp","_onTouchEnd","__onMouseWheel","shared","nestedTarget","_isClick","_dragSource","_onDragProgress","_renderDragEffects","dropTarget","_dropTarget","didDrop","dataTransfer","dropEffect","dragSource","_draggedoverTarget","findDragTargets","eventType","_fireEnterLeaveEvents","_basicEventHandler","_cacheTransformEventData","_handleEvent","getPointerId","evt","identifier","pointerId","_isMainEvent","isPrimary","touches","mainTouchId","__onMouseDown","__onMouseUp","_willAddMouseDown","clearTimeout","__onMouseMove","_shouldRender","_this$_activeObject","isClick","_target","button","_onMouseUpInDrawingMode","shouldRender","targetWasActive","handleSelection","originalControl","originalMouseUpHandler","_setCursorFromEvent","currentTarget","currentSubTargets","_onMouseDownInDrawingMode","onMouseDown","_onMouseMoveInDrawingMode","onMouseUp","grouped","handleMultiSelection","groupSelector","_transformObject","_fireOverOutEvents","textEditingManager","fireSyntheticInOutEvents","oldTarget","fireCanvas","draggedoverTarget","targetChanged","outOpt","nextTarget","inOpt","previousTarget","localPointer","_performTransformAction","activeSelection","isAS","prevActiveObjects","multiSelectAdd","newActiveSelection","point1","point2","collectedObjects","klass","linearDefaultCoords","radialDefaultCoords","RE_PERCENT","isPercent","parsePercent","NaN","RE_KEY_VALUE_PAIRS","RE_KEY_VALUE","parseColorStop","keyValuePairs","parseColorStops","opacityAttr","colorStops","colorStopEls","getElementsByTagName","parseType","parseGradientUnits","getValue","parseCoords","valuesToConvert","finalValue","propValue","convertPercentUnitsToValues","parseLinearCoords","parseRadialCoords","Gradient","addColorStop","preTransform","colorStop","sort","_renderPathCommands","needsSwap","minRadius","percentageShift","gradient","createLinearGradient","createRadialGradient","svgOptions","viewBoxWidth","viewBoxHeight","Pattern","isImageSource","isCanvasSource","sourceToString","complete","naturalWidth","naturalHeight","patternSource","patternOffsetX","patternOffsetY","patternWidth","patternHeight","BaseBrush","_saveAndTransform","needsFullRender","_resetShadow","_isOutSideCanvas","Path","_setPath","adjustPosition","setBoundingBox","_calcBoundsFromPath","quadraticCurveTo","pathCmd","sourcePath","_getOffsetTransform","digits","_calcDimensions","subpathStartX","subpathStartY","parsedAttributes","PencilBrush","_points","_hasStraightLine","drawSegment","drawStraightLine","straightLineKey","_prepareForDrawing","_addPoint","limitedToCanvasSize","oldEnd","_finalizeAndAddPath","_reset","convertPointsToSVGPath","createPath","decimatePoints","cDistance","lastPoint","adjustedDistance","newPoints","decimate","isEmptySVGPath","CIRCLE_PROPS","Circle","setRadius","startAngle","endAngle","getRadiusX","getRadiusY","startX","startY","endX","endY","largeFlag","sweepFlag","CircleBrush","drawDot","addPoint","dot","originalRenderOnAddRemove","circles","circle","pointerPoint","SprayBrush","sprayChunks","sprayChunk","addSprayChunk","renderChunck","rects","chunck","rect","optimizeOverlapping","uniqueRects","uniqueRectsArray","getUniqueRects","sprayChunck","density","dotWidthVariance","dotWidth","randomOpacity","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPattern","topLeft","coordProps","Line","_setWidthHeight","calcLinePoints","origStrokeStyle","_this$stroke","_x1","_x2","_y1","_y2","xMult","yMult","Triangle","widthBy2","heightBy2","ELLIPSE_PROPS","Ellipse","getRx","getRy","parsePointsAttribute","pointsSplit","parsedPoints","polylineDefaultValues","exactBoundingBox","Polyline","initialized","isOpen","_projectStrokeOnPoints","strokeDiff","bboxNoStroke","layoutProperties","_options$width","_options$height","_options$width2","_options$height2","output","diffX","diffY","Polygon","fontProperties","textDecorationProperties","textLayoutProperties","additionalProps","styleProperties","textDefaultValues","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","pathStartOffset","pathSide","pathAlign","_fontSizeFraction","offsets","_fontSizeMult","charSpacing","direction","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","JUSTIFY","JUSTIFY_LEFT","JUSTIFY_RIGHT","JUSTIFY_CENTER","StyledText","isEmptyStyles","lineIndex","line","p3","styleHas","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","styleObject","_textLines","removeStyle","lineNum","charNum","_extendStyles","get2DCursorLocation","_getLineStyle","_setLineStyle","newStyle","_getStyleDeclaration","_setStyleDeclaration","getSelectionStyles","startIndex","endIndex","getStyleAtPosition","getCompleteStyleDeclaration","setSelectionStyles","_forceClearCache","_lineStyle$charIndex","lineStyle","_styleProperties","_deleteStyleDeclaration","_deleteLineStyle","multipleSpacesRegex","dblQuoteRegex","createSVGInlineRect","svgColor","createSVGRect","measuringContext","FabricText","setPathInfo","initDimensions","segmentsInfo","_splitText","newLines","_splitTextIntoLines","lines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","calcTextHeight","enlargeSpaces","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","charBound","spaces","isEndOfWrapping","getLineWidth","__charBounds","kernedWidth","missingNewlineOffset","selectionStart","skipWrapping","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","leftOffset","_getLeftOffset","lineTopOffset","_getTopOffset","heightOfLine","lineLeftOffset","_getLineLeftOffset","drawStart","currentColor","boxWidth","boxStart","lastColor","getValueOfPropertyAt","charBox","renderLeft","_measureChar","_char","previousChar","prevCharStyle","fontDeclaration","couple","stylesAreEqual","fontMultiplier","coupleWidth","previousWidth","getMeasuringContext","measureText","getHeightOfChar","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","prevGrapheme","graphemeInfo","llength","lineBounds","grapheme","_getGraphemeBox","positionInPath","totalPathLength","_setGraphemeOnPath","numOfSpaces","centerPosition","skipLeft","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isJustify","shortCut","isLtr","currentDirection","actualStyle","nextStyle","timeToRender","drawingLeft","charsToRender","_renderChar","_applyPatternGradientTransformText","handleFiller","fullDecl","shouldFill","fillOffsets","fillText","strokeOffsets","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","lineDiff","__lineWidths","_charStyle$property","topOffset","currentDecoration","currentFill","lastDecoration","lastFill","currentSize","currentDy","parsedFontFamily","genericFonts","newLine","newText","needsDims","isAddingPath","_options$parsedAttrib","textAnchor","textDecoration","restOfOptions","textContent","textHeightScaleFactor","scaledDiff","textHeight","offX","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textBgRects","textSpans","getSvgTextDecoration","textTopOffset","textLeftOffset","lineOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","char","styleDecl","styleProps","getSvgSpanStyles","fillStyles","dySpan","_getSVGLineTopOffset","lastHeight","useWhiteSpace","decoration","DraggableTextDelegate","dragEnterHandler","dragOverHandler","dragLeaveHandler","dragEndHandler","dropHandler","_dispose","isPointerOverSelection","newSelection","getSelectionStartFromPointer","selectionEnd","__mouseDownInPlace","isActive","__dragStartFired","setCursorByClick","initDelayedCursor","__isDraggingOver","getDragStartSelection","__dragStartSelection","setDragImage","_e$dataTransfer","flipFactor","boundaries","_getCursorBoundaries","diff","bgc","dragImage","border","__dragImageDisposer","appendChild","setData","effectAllowed","abortCursorAnimation","editable","defaultPrevented","dragStartSelection","targetCanDrop","ev","_e$dataTransfer2","insert","getData","trailing","selectionStartOffset","removeChars","trimEnd","insertChars","enterEditing","_updateTextarea","_e$dataTransfer3","reNonWord","ITextBehavior","initBehavior","_tick","_onTickComplete","_animateCursor","toValue","_currentCursorOpacity","renderCursorOrSelection","_currentTickState","cursorDuration","_this$_currentTickCom","_currentTickCompleteState","restart","cursorDelay","shouldClear","cursorAnimation","restartCursorIfNeeded","selectAll","_fireSelectionChanged","getSelectedText","findWordBoundaryLeft","startFrom","_reSpace","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","selectWord","newSelectionStart","newSelectionEnd","selectLine","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","activeElement","currentStart","currentEnd","__selectionStartOnMouseDown","editingBorderColor","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","cursorOffsetCache","inCompositionMode","updateTextareaPosition","updateFromTextArea","textarea","_calcTextareaPosition","desiredPosition","compositionStart","cursorLocation","charHeight","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","_exitEditing","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","lineStart","charStart","lineEnd","charEnd","styleObj","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","newLineStyles","originalLineLength","isEndOfLine","someStyleIsCarryingOver","currentCharStyle","numIndex","styleCarriedOver","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLength","setSelectionStartEndWithShift","_selectionDirection","ITextKeyBehavior","autocapitalize","autocorrect","autocomplete","spellcheck","wrap","hiddenTextareaContainer","keydown","keyup","input","copy","cut","paste","compositionstart","compositionupdate","compositionend","onKeyDown","keyMap","keysMapRtl","keysMap","keyCode","ctrlKeysMapDown","ctrlKey","metaKey","stopImmediatePropagation","onKeyUp","_copyDone","ctrlKeysMapUp","onInput","fromPaste","updateAndFire","nextText","charCount","nextCharCount","removedText","removeFrom","removeTo","charDiff","textareaSelection","backDelete","copiedText","disableStyleCopyPaste","copiedTextStyle","onCompositionStart","onCompositionEnd","onCompositionUpdate","compositionEnd","_getWidthBeforeCursor","bound","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","newValue","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","moveCursorRightWithShift","moveCursorRightWithoutShift","notALeftClick","ITextClickBehavior","_mouseDownHandler","_mouseDownHandlerBefore","doubleClickHandler","tripleClickHandler","__lastClickTime","__lastLastClickTime","__lastPointer","draggableTextDelegate","__newClickTime","newPointer","isTripleClick","__lastSelected","didDrag","mouseOffset","charLength","widthAfter","MOVE_CURSOR_UP","MOVE_CURSOR_DOWN","MOVE_CURSOR_LEFT","MOVE_CURSOR_RIGHT","EXIT_EDITING","iTextDefaultValues","cursorColor","caching","IText","setSelectionStart","_updateAndFire","setSelectionEnd","renderCursor","renderSelection","skipCaching","_getCursorBoundariesOffsets","__getCursorBoundariesOffsets","renderCursorAt","_renderCursor","_renderSelection","dragSelection","startLine","endLine","startChar","endChar","realLineHeight","boxEnd","drawHeight","extraTop","drawWidth","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","cursorPosition","Textbox","dynamicMinWidth","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","splitByGrapheme","isWrapping","nextOffset","nextLineIndex","shouldLimit","mapNextLine","p2Number","_wrapText","desiredWidth","getGraphemeDataForRender","wrapped","wordsData","_wrapLine","infix","largestWordWidth","wordsOrGraphemes","wordSplit","word","graphemeArray","_measureWord","charOffset","_wordJoiners","reservedSpace","additionalSpace","infixWidth","lineJustStarted","wordWidth","getMinWidth","minWidth","linesToKeep","propNumber","has","ClipPathLayout","_target$group","clipPathCenter","FixedLayout","ActiveSelection","multiSelectionStacking","findIndex","groups","Set","childrenOverride","Canvas2dFilterBackend","applyFilters","filters","sourceElement","sourceWidth","sourceHeight","pipelineState","imageData","originalEl","originalImageData","filterBackend","applyTo","imageDataPostFilter","putImageData","WebGLFilterBackend","tileSize","Float32Array","setupGLContext","captureGPUInfo","createWebGLCanvas","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","destinationWidth","destinationHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","aPosition","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","dWidth","dHeight","resizeCanvasIfNeeded","copyGLTo2D","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","NEAREST","RGBA","UNSIGNED_BYTE","CLAMP_TO_EDGE","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texture","texParameteri","texImage2D","uniqueId","evictCachesForKey","glCanvas","sourceY","copyGLTo2DPutImageData","numBytes","u8","Uint8Array","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","imgData","ImageData","gpuInfo","renderer","vendor","ext","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","initFilterBackend","enableGLFiltering","getFilterBackend","setFilterBackend","backend","IMAGE_PROPS","FabricImage","setElement","_element","removeTexture","_originalElement","CSS_CANVAS","resizeFilter","applyResizeFilters","elementKey","getCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","imageMarkup","strokeSvg","imageRendering","imageSmoothing","getSvgSrc","origFill","filtered","srcFromAttribute","setSrc","minimumScale","minimumScaleTrigger","elementToFilter","_filteredEl","_filterScalingX","_filterScalingY","_lastScaleX","_lastScaleY","isNeutralState","imgElement","_needsResize","elementToDraw","elWidth","elHeight","sX","sY","sW","sH","maxDestW","maxDestH","_resetWidthHeight","pAR","preserveAspectRatio","pWidth","pHeight","rWidth","rHeight","f","rf","hydratedProps","fromURL","imageOptions","applyViewboxTransform","viewBoxAttr","widthAttr","heightAttr","missingViewBox","missingDimAttr","translateMatrix","widthDiff","heightDiff","parsedDim","pasedViewBox","createElementNS","firstChild","getTagName","node","tagName","svgInvalidAncestorsRegEx","getMultipleNodes","nodeNames","nodeList","nodeArray","getElementsByTagNameNS","gradientsAttrs","xlinkAttr","recursivelyParseGradientsXlink","_gradient$getAttribut","xLink","referencedGradient","children","referenceClone","cloneNode","tagArray","getCSSRules","allRules","styleContents","ruleObj","propertyValuePairs","pair","_rule","findTag","ElementsParser","clipPaths","regexUrl","gradientDefs","elList","getGradientDefs","createObject","resolveGradient","resolveClipPath","extractPropertyDefinition","storage","lastIndex","gradientDef","usingElement","clipPathElements","objTransformInv","clipPathTag","clipPathOwner","clipPathElement","enlivedClippath","clipRule","gTransform","isValidSvgTag","createEmptyResponse","allElements","async","parseSVGDocument","nodelist","xlinkAttribute","xlink","el2Orig","el2","currentTrans","oldLength","namespace","el3","attrs","setAttributeNS","nodeValue","parseUseDirectives","descendants","hasInvalidAncestor","localClipPaths","elementParser","loadSVGFromString","parseFromString","loadSVGFromURL","xml","responseXML","parsedDoc","ACTION_NAME","createPolyPositionHandler","pointIndex","polyObject","polyActionHandler","poly","mouseLocalPosition","factoryPolyActionHandler","anchorPoint","anchorPointInParentPlane","createPolyActionHandler","isWebGLPipelineState","isPutImageFaster","testContext","ArrayBuffer","testPipelineState","performance","now","drawImageTime","highPsourceCode","identityFragmentShader","BaseFilter","getFragmentSource","createProgram","vertexSource","vertexShader","VERTEX_SHADER","program","getShaderInfoLog","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","attributeLocations","getAttributeLocations","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","finish","_swapTextures","temp","main","mainParameter","defaultValue","thisValue","applyToWebGL","applyTo2d","getCacheKey","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","blendColorFragmentSource","screen","difference","lighten","darken","exclusion","tint","BlendColor","mode","tg","alpha1","uColor","uniform4fv","mask","BlendImage","image","TEXTURE1","calculateMatrix","resources","blendImage","canvas1","blendData","uTransformMatrix","uImage","uniform1i","uniformMatrix3fv","filterOptions","enlivedImage","Blur","aspectRatio","horizontal","simpleBlur","blurLayer1","blurLayer2","canvas2","ctx1","ctx2","nSamples","percent","newImageData","delta","chooseRightDelta","uniform2fv","blurScale","Brightness","brightness","uBrightness","colorMatrixDefaultValues","colorsOnly","ColorMatrix","uColorMatrix","uConstants","constants","uniformMatrix4fv","createColorMatrixFilter","_class","newClass","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","Composed","subFilters","enlivedFilters","Contrast","contrast","contrastF","uContrast","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","Convolute","opaque","weights","side","halfSide","sw","sh","createImageData","dst","alphaFac","dstOff","scx","scy","srcOff","wt","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Gamma","gamma","rInv","gInv","bInv","rgbValues","rgb","uGamma","uniform3fv","lightness","luminosity","Grayscale","uMode","HueRotation","rotation","cosine","sine","aThird","aThirdSqtSin","OneMinusCos","Invert","invert","uInvert","uAlpha","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","uBlocksize","RemoveColor","getFragmentShader","lowC","highC","uLow","uHigh","useAlpha","Resize","uDelta","uTaps","taps","getFilterWindow","tempScale","lanczosLobes","filterWindow","generateShader","getTaps","lobeFunction","lanczosCreate","fragmentSourceTOP","applyToForWebgl","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","oW","oH","newData","resizeType","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","mult","doneW","doneH","stepW","stepH","dX","dY","tmpCanvas","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","yy","w0","Saturation","saturation","adjust","uSaturation","Vibrance","vibrance","amt","uVibrance"],"mappings":"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"}