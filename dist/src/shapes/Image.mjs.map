{"version":3,"file":"Image.mjs","sources":["../../../src/shapes/Image.ts"],"sourcesContent":["import { getFabricDocument, getEnv } from '../env';\nimport type { BaseFilter } from '../filters/BaseFilter';\nimport { getFilterBackend } from '../filters/FilterBackend';\nimport { SHARED_ATTRIBUTES } from '../parser/attributes';\nimport { parseAttributes } from '../parser/parseAttributes';\nimport type {\n  TClassProperties,\n  TCrossOrigin,\n  TSize,\n  Abortable,\n  TOptions,\n} from '../typedefs';\nimport { uid } from '../util/internals/uid';\nimport { createCanvasElement } from '../util/misc/dom';\nimport { findScaleToCover, findScaleToFit } from '../util/misc/findScaleTo';\nimport type { LoadImageOptions } from '../util/misc/objectEnlive';\nimport {\n  enlivenObjectEnlivables,\n  enlivenObjects,\n  loadImage,\n} from '../util/misc/objectEnlive';\nimport { parsePreserveAspectRatioAttribute } from '../util/misc/svgParsing';\nimport { classRegistry } from '../ClassRegistry';\nimport { FabricObject, cacheProperties } from './Object/FabricObject';\nimport type { FabricObjectProps, SerializedObjectProps } from './Object/types';\nimport type { ObjectEvents } from '../EventTypeDefs';\nimport { WebGLFilterBackend } from '../filters/WebGLFilterBackend';\nimport { NONE } from '../constants';\nimport { getDocumentFromElement } from '../util/dom_misc';\nimport type { CSSRules } from '../parser/typedefs';\nimport type { Resize } from '../filters/Resize';\nimport type { TCachedFabricObject } from './Object/Object';\nimport { log } from '../util/internals/console';\n\n// @todo Would be nice to have filtering code not imported directly.\n\nexport type ImageSource =\n  | HTMLImageElement\n  | HTMLVideoElement\n  | HTMLCanvasElement;\n\ninterface UniqueImageProps {\n  srcFromAttribute: boolean;\n  minimumScaleTrigger: number;\n  cropX: number;\n  cropY: number;\n  imageSmoothing: boolean;\n  filters: BaseFilter[];\n  resizeFilter?: Resize;\n}\n\nexport const imageDefaultValues: Partial<TClassProperties<FabricImage>> = {\n  strokeWidth: 0,\n  srcFromAttribute: false,\n  minimumScaleTrigger: 0.5,\n  cropX: 0,\n  cropY: 0,\n  imageSmoothing: true,\n};\n\nexport interface SerializedImageProps extends SerializedObjectProps {\n  src: string;\n  crossOrigin: TCrossOrigin;\n  filters: any[];\n  resizeFilter?: any;\n  cropX: number;\n  cropY: number;\n}\n\nexport interface ImageProps extends FabricObjectProps, UniqueImageProps {}\n\nconst IMAGE_PROPS = ['cropX', 'cropY'] as const;\n\n/**\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n */\nexport class FabricImage<\n    Props extends TOptions<ImageProps> = Partial<ImageProps>,\n    SProps extends SerializedImageProps = SerializedImageProps,\n    EventSpec extends ObjectEvents = ObjectEvents\n  >\n  extends FabricObject<Props, SProps, EventSpec>\n  implements ImageProps\n{\n  /**\n   * When calling {@link FabricImage.getSrc}, return value from element src with `element.getAttribute('src')`.\n   * This allows for relative urls as image src.\n   * @since 2.7.0\n   * @type Boolean\n   * @default false\n   */\n  declare srcFromAttribute: boolean;\n\n  /**\n   * private\n   * contains last value of scaleX to detect\n   * if the Image got resized after the last Render\n   * @type Number\n   */\n  protected _lastScaleX = 1;\n\n  /**\n   * private\n   * contains last value of scaleY to detect\n   * if the Image got resized after the last Render\n   * @type Number\n   */\n  protected _lastScaleY = 1;\n\n  /**\n   * private\n   * contains last value of scaling applied by the apply filter chain\n   * @type Number\n   */\n  protected _filterScalingX = 1;\n\n  /**\n   * private\n   * contains last value of scaling applied by the apply filter chain\n   * @type Number\n   */\n  protected _filterScalingY = 1;\n\n  /**\n   * minimum scale factor under which any resizeFilter is triggered to resize the image\n   * 0 will disable the automatic resize. 1 will trigger automatically always.\n   * number bigger than 1 are not implemented yet.\n   * @type Number\n   */\n  declare minimumScaleTrigger: number;\n\n  /**\n   * key used to retrieve the texture representing this image\n   * @since 2.0.0\n   * @type String\n   * @default\n   */\n  declare cacheKey: string;\n\n  /**\n   * Image crop in pixels from original image size.\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  declare cropX: number;\n\n  /**\n   * Image crop in pixels from original image size.\n   * @since 2.0.0\n   * @type Number\n   * @default\n   */\n  declare cropY: number;\n\n  /**\n   * Indicates whether this canvas will use image smoothing when painting this image.\n   * Also influence if the cacheCanvas for this image uses imageSmoothing\n   * @since 4.0.0-beta.11\n   * @type Boolean\n   * @default\n   */\n  declare imageSmoothing: boolean;\n\n  declare preserveAspectRatio: string;\n\n  protected declare src: string;\n\n  declare filters: BaseFilter[];\n  declare resizeFilter: Resize;\n\n  declare _element: ImageSource;\n  declare _filteredEl?: HTMLCanvasElement;\n  declare _originalElement: ImageSource;\n\n  static type = 'Image';\n\n  static cacheProperties = [...cacheProperties, ...IMAGE_PROPS];\n\n  static ownDefaults = imageDefaultValues;\n\n  static getDefaults(): Record<string, any> {\n    return {\n      ...super.getDefaults(),\n      ...FabricImage.ownDefaults,\n    };\n  }\n  /**\n   * Constructor\n   * Image can be initialized with any canvas drawable or a string.\n   * The string should be a url and will be loaded as an image.\n   * Canvas and Image element work out of the box, while videos require extra code to work.\n   * Please check video element events for seeking.\n   * @param {ImageSource | string} element Image element\n   * @param {Object} [options] Options object\n   */\n  constructor(elementId: string, options?: Props);\n  constructor(element: ImageSource, options?: Props);\n  constructor(arg0: ImageSource | string, options: Props = {} as Props) {\n    super({ filters: [], ...options });\n    this.cacheKey = `texture${uid()}`;\n    this.setElement(\n      typeof arg0 === 'string'\n        ? ((\n            (this.canvas && getDocumentFromElement(this.canvas.getElement())) ||\n            getFabricDocument()\n          ).getElementById(arg0) as ImageSource)\n        : arg0,\n      options\n    );\n  }\n\n  /**\n   * Returns image element which this instance if based on\n   */\n  getElement() {\n    return this._element;\n  }\n\n  /**\n   * Sets image element for this instance to a specified one.\n   * If filters defined they are applied to new image.\n   * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n   * @param {HTMLImageElement} element\n   * @param {Partial<TSize>} [size] Options object\n   */\n  setElement(element: ImageSource, size: Partial<TSize> = {}) {\n    this.removeTexture(this.cacheKey);\n    this.removeTexture(`${this.cacheKey}_filtered`);\n    this._element = element;\n    this._originalElement = element;\n    this._setWidthHeight(size);\n    element.classList.add(FabricImage.CSS_CANVAS);\n    if (this.filters.length !== 0) {\n      this.applyFilters();\n    }\n    // resizeFilters work on the already filtered copy.\n    // we need to apply resizeFilters AFTER normal filters.\n    // applyResizeFilters is run more often than normal filters\n    // and is triggered by user interactions rather than dev code\n    if (this.resizeFilter) {\n      this.applyResizeFilters();\n    }\n  }\n\n  /**\n   * Delete a single texture if in webgl mode\n   */\n  removeTexture(key: string) {\n    const backend = getFilterBackend(false);\n    if (backend instanceof WebGLFilterBackend) {\n      backend.evictCachesForKey(key);\n    }\n  }\n\n  /**\n   * Delete textures, reference to elements and eventually JSDOM cleanup\n   */\n  dispose() {\n    super.dispose();\n    this.removeTexture(this.cacheKey);\n    this.removeTexture(`${this.cacheKey}_filtered`);\n    this._cacheContext = null;\n    (\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'] as const\n    ).forEach((elementKey) => {\n      const el = this[elementKey];\n      el && getEnv().dispose(el);\n      // @ts-expect-error disposing\n      this[elementKey] = undefined;\n    });\n  }\n\n  /**\n   * Get the crossOrigin value (of the corresponding image element)\n   */\n  getCrossOrigin(): string | null {\n    return (\n      this._originalElement &&\n      ((this._originalElement as any).crossOrigin || null)\n    );\n  }\n\n  /**\n   * Returns original size of an image\n   */\n  getOriginalSize() {\n    const element = this.getElement() as any;\n    if (!element) {\n      return {\n        width: 0,\n        height: 0,\n      };\n    }\n    return {\n      width: element.naturalWidth || element.width,\n      height: element.naturalHeight || element.height,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _stroke(ctx: CanvasRenderingContext2D) {\n    if (!this.stroke || this.strokeWidth === 0) {\n      return;\n    }\n    const w = this.width / 2,\n      h = this.height / 2;\n    ctx.beginPath();\n    ctx.moveTo(-w, -h);\n    ctx.lineTo(w, -h);\n    ctx.lineTo(w, h);\n    ctx.lineTo(-w, h);\n    ctx.lineTo(-w, -h);\n    ctx.closePath();\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {Object} Object representation of an instance\n   */\n  toObject<\n    T extends Omit<Props & TClassProperties<this>, keyof SProps>,\n    K extends keyof T = never\n  >(propertiesToInclude: K[] = []): Pick<T, K> & SProps {\n    const filters: Record<string, any>[] = [];\n    this.filters.forEach((filterObj) => {\n      filterObj && filters.push(filterObj.toObject());\n    });\n    return {\n      ...super.toObject([...IMAGE_PROPS, ...propertiesToInclude]),\n      src: this.getSrc(),\n      crossOrigin: this.getCrossOrigin(),\n      filters,\n      ...(this.resizeFilter\n        ? { resizeFilter: this.resizeFilter.toObject() }\n        : {}),\n    };\n  }\n\n  /**\n   * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,height.\n   * @return {Boolean}\n   */\n  hasCrop() {\n    return (\n      !!this.cropX ||\n      !!this.cropY ||\n      this.width < this._element.width ||\n      this.height < this._element.height\n    );\n  }\n\n  /**\n   * Returns svg representation of an instance\n   * @return {string[]} an array of strings with the specific svg representation\n   * of the instance\n   */\n  _toSVG() {\n    const imageMarkup: string[] = [],\n      element = this._element,\n      x = -this.width / 2,\n      y = -this.height / 2;\n    let svgString: string[] = [],\n      strokeSvg: string[] = [],\n      clipPath = '',\n      imageRendering = '';\n    if (!element) {\n      return [];\n    }\n    if (this.hasCrop()) {\n      const clipPathId = uid();\n      svgString.push(\n        '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n        '\\t<rect x=\"' +\n          x +\n          '\" y=\"' +\n          y +\n          '\" width=\"' +\n          this.width +\n          '\" height=\"' +\n          this.height +\n          '\" />\\n',\n        '</clipPath>\\n'\n      );\n      clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n    }\n    if (!this.imageSmoothing) {\n      imageRendering = ' image-rendering=\"optimizeSpeed\"';\n    }\n    imageMarkup.push(\n      '\\t<image ',\n      'COMMON_PARTS',\n      `xlink:href=\"${this.getSvgSrc(true)}\" x=\"${x - this.cropX}\" y=\"${\n        y - this.cropY\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n      }\" width=\"${\n        element.width || (element as HTMLImageElement).naturalWidth\n      }\" height=\"${\n        element.height || (element as HTMLImageElement).naturalHeight\n      }\"${imageRendering}${clipPath}></image>\\n`\n    );\n\n    if (this.stroke || this.strokeDashArray) {\n      const origFill = this.fill;\n      this.fill = null;\n      strokeSvg = [\n        `\\t<rect x=\"${x}\" y=\"${y}\" width=\"${this.width}\" height=\"${\n          this.height\n        }\" style=\"${this.getSvgStyles()}\" />\\n`,\n      ];\n      this.fill = origFill;\n    }\n    if (this.paintFirst !== 'fill') {\n      svgString = svgString.concat(strokeSvg, imageMarkup);\n    } else {\n      svgString = svgString.concat(imageMarkup, strokeSvg);\n    }\n    return svgString;\n  }\n\n  /**\n   * Returns source of an image\n   * @param {Boolean} filtered indicates if the src is needed for svg\n   * @return {String} Source of an image\n   */\n  getSrc(filtered?: boolean): string {\n    const element = filtered ? this._element : this._originalElement;\n    if (element) {\n      if ((element as HTMLCanvasElement).toDataURL) {\n        return (element as HTMLCanvasElement).toDataURL();\n      }\n\n      if (this.srcFromAttribute) {\n        return element.getAttribute('src') || '';\n      } else {\n        return (element as HTMLImageElement).src;\n      }\n    } else {\n      return this.src || '';\n    }\n  }\n\n  /**\n   * Alias for getSrc\n   * @param filtered\n   * @deprecated\n   */\n  getSvgSrc(filtered?: boolean) {\n    return this.getSrc(filtered);\n  }\n\n  /**\n   * Loads and sets source of an image\\\n   * **IMPORTANT**: It is recommended to abort loading tasks before calling this method to prevent race conditions and unnecessary networking\n   * @param {String} src Source string (URL)\n   * @param {LoadImageOptions} [options] Options object\n   */\n  setSrc(src: string, { crossOrigin, signal }: LoadImageOptions = {}) {\n    return loadImage(src, { crossOrigin, signal }).then((img) => {\n      typeof crossOrigin !== 'undefined' && this.set({ crossOrigin });\n      this.setElement(img);\n    });\n  }\n\n  /**\n   * Returns string representation of an instance\n   * @return {String} String representation of an instance\n   */\n  toString() {\n    return `#<Image: { src: \"${this.getSrc()}\" }>`;\n  }\n\n  applyResizeFilters() {\n    const filter = this.resizeFilter,\n      minimumScale = this.minimumScaleTrigger,\n      objectScale = this.getTotalObjectScaling(),\n      scaleX = objectScale.x,\n      scaleY = objectScale.y,\n      elementToFilter = this._filteredEl || this._originalElement;\n    if (this.group) {\n      this.set('dirty', true);\n    }\n    if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n      this._element = elementToFilter;\n      this._filterScalingX = 1;\n      this._filterScalingY = 1;\n      this._lastScaleX = scaleX;\n      this._lastScaleY = scaleY;\n      return;\n    }\n    const canvasEl = createCanvasElement(),\n      sourceWidth = elementToFilter.width,\n      sourceHeight = elementToFilter.height;\n    canvasEl.width = sourceWidth;\n    canvasEl.height = sourceHeight;\n    this._element = canvasEl;\n    this._lastScaleX = filter.scaleX = scaleX;\n    this._lastScaleY = filter.scaleY = scaleY;\n    getFilterBackend().applyFilters(\n      [filter as BaseFilter],\n      elementToFilter,\n      sourceWidth,\n      sourceHeight,\n      this._element\n    );\n    this._filterScalingX = canvasEl.width / this._originalElement.width;\n    this._filterScalingY = canvasEl.height / this._originalElement.height;\n  }\n\n  /**\n   * Applies filters assigned to this image (from \"filters\" array) or from filter param\n   * @method applyFilters\n   * @param {Array} filters to be applied\n   * @param {Boolean} forResizing specify if the filter operation is a resize operation\n   */\n  applyFilters(filters: BaseFilter[] = this.filters || []) {\n    filters = filters.filter((filter) => filter && !filter.isNeutralState());\n    this.set('dirty', true);\n\n    // needs to clear out or WEBGL will not resize correctly\n    this.removeTexture(`${this.cacheKey}_filtered`);\n\n    if (filters.length === 0) {\n      this._element = this._originalElement;\n      // this is unsafe and needs to be rethinkend\n      this._filteredEl = undefined;\n      this._filterScalingX = 1;\n      this._filterScalingY = 1;\n      return;\n    }\n\n    const imgElement = this._originalElement,\n      sourceWidth =\n        (imgElement as HTMLImageElement).naturalWidth || imgElement.width,\n      sourceHeight =\n        (imgElement as HTMLImageElement).naturalHeight || imgElement.height;\n\n    if (this._element === this._originalElement) {\n      // if the _element a reference to _originalElement\n      // we need to create a new element to host the filtered pixels\n      const canvasEl = createCanvasElement();\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._filteredEl = canvasEl;\n    } else if (this._filteredEl) {\n      // if the _element is it own element,\n      // and we also have a _filteredEl, then we clean up _filteredEl\n      // and we assign it to _element.\n      // in this way we invalidate the eventual old resize filtered element\n      this._element = this._filteredEl;\n      this._filteredEl\n        .getContext('2d')!\n        .clearRect(0, 0, sourceWidth, sourceHeight);\n      // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n      this._lastScaleX = 1;\n      this._lastScaleY = 1;\n    }\n    getFilterBackend().applyFilters(\n      filters,\n      this._originalElement,\n      sourceWidth,\n      sourceHeight,\n      this._element as HTMLCanvasElement\n    );\n    if (\n      this._originalElement.width !== this._element.width ||\n      this._originalElement.height !== this._element.height\n    ) {\n      this._filterScalingX = this._element.width / this._originalElement.width;\n      this._filterScalingY =\n        this._element.height / this._originalElement.height;\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  _render(ctx: CanvasRenderingContext2D) {\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\n    if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n      this.applyResizeFilters();\n    }\n    this._stroke(ctx);\n    this._renderPaintInOrder(ctx);\n  }\n\n  /**\n   * Paint the cached copy of the object on the target context.\n   * it will set the imageSmoothing for the draw operation\n   * @param {CanvasRenderingContext2D} ctx Context to render on\n   */\n  drawCacheOnCanvas(\n    this: TCachedFabricObject<FabricImage>,\n    ctx: CanvasRenderingContext2D\n  ) {\n    ctx.imageSmoothingEnabled = this.imageSmoothing;\n    // cant use ts-expect-error because of ts 5.3 cross check\n    // @ts-ignore TS doesn't respect this type casting\n    super.drawCacheOnCanvas(ctx);\n  }\n\n  /**\n   * Decide if the object should cache or not. Create its own cache level\n   * needsItsOwnCache should be used when the object drawing method requires\n   * a cache step. None of the fabric classes requires it.\n   * Generally you do not cache objects in groups because the group outside is cached.\n   * This is the special image version where we would like to avoid caching where possible.\n   * Essentially images do not benefit from caching. They may require caching, and in that\n   * case we do it. Also caching an image usually ends in a loss of details.\n   * A full performance audit should be done.\n   * @return {Boolean}\n   */\n  shouldCache() {\n    return this.needsItsOwnCache();\n  }\n\n  _renderFill(ctx: CanvasRenderingContext2D) {\n    const elementToDraw = this._element;\n    if (!elementToDraw) {\n      return;\n    }\n    const scaleX = this._filterScalingX,\n      scaleY = this._filterScalingY,\n      w = this.width,\n      h = this.height,\n      // crop values cannot be lesser than 0.\n      cropX = Math.max(this.cropX, 0),\n      cropY = Math.max(this.cropY, 0),\n      elWidth =\n        (elementToDraw as HTMLImageElement).naturalWidth || elementToDraw.width,\n      elHeight =\n        (elementToDraw as HTMLImageElement).naturalHeight ||\n        elementToDraw.height,\n      sX = cropX * scaleX,\n      sY = cropY * scaleY,\n      // the width height cannot exceed element width/height, starting from the crop offset.\n      sW = Math.min(w * scaleX, elWidth - sX),\n      sH = Math.min(h * scaleY, elHeight - sY),\n      x = -w / 2,\n      y = -h / 2,\n      maxDestW = Math.min(w, elWidth / scaleX - cropX),\n      maxDestH = Math.min(h, elHeight / scaleY - cropY);\n\n    elementToDraw &&\n      ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, maxDestW, maxDestH);\n  }\n\n  /**\n   * needed to check if image needs resize\n   * @private\n   */\n  _needsResize() {\n    const scale = this.getTotalObjectScaling();\n    return scale.x !== this._lastScaleX || scale.y !== this._lastScaleY;\n  }\n\n  /**\n   * @private\n   * @deprecated unused\n   */\n  _resetWidthHeight() {\n    this.set(this.getOriginalSize());\n  }\n\n  /**\n   * @private\n   * Set the width and the height of the image object, using the element or the\n   * options.\n   */\n  _setWidthHeight({ width, height }: Partial<TSize> = {}) {\n    const size = this.getOriginalSize();\n    this.width = width || size.width;\n    this.height = height || size.height;\n  }\n\n  /**\n   * Calculate offset for center and scale factor for the image in order to respect\n   * the preserveAspectRatio attribute\n   * @private\n   */\n  parsePreserveAspectRatioAttribute() {\n    const pAR = parsePreserveAspectRatioAttribute(\n        this.preserveAspectRatio || ''\n      ),\n      pWidth = this.width,\n      pHeight = this.height,\n      parsedAttributes = { width: pWidth, height: pHeight };\n    let rWidth = this._element.width,\n      rHeight = this._element.height,\n      scaleX = 1,\n      scaleY = 1,\n      offsetLeft = 0,\n      offsetTop = 0,\n      cropX = 0,\n      cropY = 0,\n      offset;\n\n    if (pAR && (pAR.alignX !== NONE || pAR.alignY !== NONE)) {\n      if (pAR.meetOrSlice === 'meet') {\n        scaleX = scaleY = findScaleToFit(this._element, parsedAttributes);\n        offset = (pWidth - rWidth * scaleX) / 2;\n        if (pAR.alignX === 'Min') {\n          offsetLeft = -offset;\n        }\n        if (pAR.alignX === 'Max') {\n          offsetLeft = offset;\n        }\n        offset = (pHeight - rHeight * scaleY) / 2;\n        if (pAR.alignY === 'Min') {\n          offsetTop = -offset;\n        }\n        if (pAR.alignY === 'Max') {\n          offsetTop = offset;\n        }\n      }\n      if (pAR.meetOrSlice === 'slice') {\n        scaleX = scaleY = findScaleToCover(this._element, parsedAttributes);\n        offset = rWidth - pWidth / scaleX;\n        if (pAR.alignX === 'Mid') {\n          cropX = offset / 2;\n        }\n        if (pAR.alignX === 'Max') {\n          cropX = offset;\n        }\n        offset = rHeight - pHeight / scaleY;\n        if (pAR.alignY === 'Mid') {\n          cropY = offset / 2;\n        }\n        if (pAR.alignY === 'Max') {\n          cropY = offset;\n        }\n        rWidth = pWidth / scaleX;\n        rHeight = pHeight / scaleY;\n      }\n    } else {\n      scaleX = pWidth / rWidth;\n      scaleY = pHeight / rHeight;\n    }\n    return {\n      width: rWidth,\n      height: rHeight,\n      scaleX,\n      scaleY,\n      offsetLeft,\n      offsetTop,\n      cropX,\n      cropY,\n    };\n  }\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  static CSS_CANVAS = 'canvas-img';\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link FabricImage.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  static ATTRIBUTE_NAMES = [\n    ...SHARED_ATTRIBUTES,\n    'x',\n    'y',\n    'width',\n    'height',\n    'preserveAspectRatio',\n    'xlink:href',\n    'crossOrigin',\n    'image-rendering',\n  ];\n\n  /**\n   * Creates an instance of FabricImage from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {object} [options] Options object\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @returns {Promise<FabricImage>}\n   */\n  static fromObject<T extends TOptions<SerializedImageProps>>(\n    { filters: f, resizeFilter: rf, src, crossOrigin, type, ...object }: T,\n    options: Abortable = {}\n  ) {\n    return Promise.all([\n      loadImage(src!, { ...options, crossOrigin }),\n      f && enlivenObjects<BaseFilter>(f, options),\n      // TODO: redundant - handled by enlivenObjectEnlivables\n      rf && enlivenObjects<BaseFilter>([rf], options),\n      enlivenObjectEnlivables(object, options),\n    ]).then(([el, filters = [], [resizeFilter] = [], hydratedProps = {}]) => {\n      return new this(el, {\n        ...object,\n        // TODO: this creates a difference between image creation and restoring from JSON\n        src,\n        filters,\n        resizeFilter,\n        ...hydratedProps,\n      });\n    });\n  }\n\n  /**\n   * Creates an instance of Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {LoadImageOptions} [options] Options object\n   * @returns {Promise<FabricImage>}\n   */\n  static fromURL<T extends TOptions<ImageProps>>(\n    url: string,\n    { crossOrigin = null, signal }: LoadImageOptions = {},\n    imageOptions?: T\n  ): Promise<FabricImage> {\n    return loadImage(url, { crossOrigin, signal }).then(\n      (img) => new this(img, imageOptions)\n    );\n  }\n\n  /**\n   * Returns {@link FabricImage} instance from an SVG element\n   * @static\n   * @param {HTMLElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {AbortSignal} [options.signal] handle aborting, see https://developer.mozilla.org/en-US/docs/Web/API/AbortController/signal\n   * @param {Function} callback Callback to execute when Image object is created\n   */\n  static async fromElement(\n    element: HTMLElement,\n    options: Abortable = {},\n    cssRules?: CSSRules\n  ) {\n    const parsedAttributes = parseAttributes(\n      element,\n      this.ATTRIBUTE_NAMES,\n      cssRules\n    );\n    return this.fromURL(\n      parsedAttributes['xlink:href'],\n      options,\n      parsedAttributes\n    ).catch((err) => {\n      log('log', 'Unable to parse Image', err);\n      return null;\n    });\n  }\n}\n\nclassRegistry.setClass(FabricImage);\nclassRegistry.setSVGClass(FabricImage);\n"],"names":["imageDefaultValues","strokeWidth","srcFromAttribute","minimumScaleTrigger","cropX","cropY","imageSmoothing","IMAGE_PROPS","FabricImage","FabricObject","getDefaults","_objectSpread","ownDefaults","constructor","arg0","options","arguments","length","undefined","filters","_defineProperty","cacheKey","concat","uid","setElement","canvas","getDocumentFromElement","getElement","getFabricDocument","getElementById","_element","element","size","removeTexture","_originalElement","_setWidthHeight","classList","add","CSS_CANVAS","applyFilters","resizeFilter","applyResizeFilters","key","backend","getFilterBackend","WebGLFilterBackend","evictCachesForKey","dispose","_cacheContext","forEach","elementKey","el","getEnv","getCrossOrigin","crossOrigin","getOriginalSize","width","height","naturalWidth","naturalHeight","_stroke","ctx","stroke","w","h","beginPath","moveTo","lineTo","closePath","toObject","propertiesToInclude","filterObj","push","src","getSrc","hasCrop","_toSVG","imageMarkup","x","y","svgString","strokeSvg","clipPath","imageRendering","clipPathId","getSvgSrc","strokeDashArray","origFill","fill","getSvgStyles","paintFirst","filtered","toDataURL","getAttribute","setSrc","signal","loadImage","then","img","set","toString","filter","minimumScale","objectScale","getTotalObjectScaling","scaleX","scaleY","elementToFilter","_filteredEl","group","_filterScalingX","_filterScalingY","_lastScaleX","_lastScaleY","canvasEl","createCanvasElement","sourceWidth","sourceHeight","isNeutralState","imgElement","getContext","clearRect","_render","imageSmoothingEnabled","isMoving","_needsResize","_renderPaintInOrder","drawCacheOnCanvas","shouldCache","needsItsOwnCache","_renderFill","elementToDraw","Math","max","elWidth","elHeight","sX","sY","sW","min","sH","maxDestW","maxDestH","drawImage","scale","_resetWidthHeight","parsePreserveAspectRatioAttribute","pAR","preserveAspectRatio","pWidth","pHeight","parsedAttributes","rWidth","rHeight","offsetLeft","offsetTop","offset","alignX","NONE","alignY","meetOrSlice","findScaleToFit","findScaleToCover","fromObject","_ref","f","rf","type","object","_objectWithoutProperties","_excluded","Promise","all","enlivenObjects","enlivenObjectEnlivables","_ref2","hydratedProps","fromURL","url","imageOptions","fromElement","cssRules","parseAttributes","ATTRIBUTE_NAMES","catch","err","log","cacheProperties","SHARED_ATTRIBUTES","classRegistry","setClass","setSVGClass"],"mappings":"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"}