import{defineProperty as t,objectSpread2 as r}from"../../_virtual/_rollupPluginBabelHelpers.min.mjs";import{twoMathPi as e}from"../constants.min.mjs";import{SHARED_ATTRIBUTES as s}from"../parser/attributes.min.mjs";import{parseAttributes as i}from"../parser/parseAttributes.min.mjs";import{classRegistry as a}from"../ClassRegistry.min.mjs";import{FabricObject as n}from"./Object/FabricObject.min.mjs";import{cacheProperties as o}from"./Object/defaultValues.min.mjs";const m={rx:0,ry:0},c=["rx","ry"];class l extends n{static getDefaults(){return r(r({},super.getDefaults()),l.ownDefaults)}_set(t,r){switch(super._set(t,r),t){case"rx":this.rx=r,this.set("width",2*r);break;case"ry":this.ry=r,this.set("height",2*r)}return this}getRx(){return this.get("rx")*this.get("scaleX")}getRy(){return this.get("ry")*this.get("scaleY")}toObject(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return super.toObject([...c,...t])}_toSVG(){return["<ellipse ","COMMON_PARTS",'cx="0" cy="0" rx="'.concat(this.rx,'" ry="').concat(this.ry,'" />\n')]}_render(t){t.beginPath(),t.save(),t.transform(1,0,0,this.ry/this.rx,0,0),t.arc(0,0,this.rx,0,e,!1),t.restore(),this._renderPaintInOrder(t)}static async fromElement(t,r,e){const s=i(t,this.ATTRIBUTE_NAMES,e);return s.left=(s.left||0)-s.rx,s.top=(s.top||0)-s.ry,new this(s)}}t(l,"type","Ellipse"),t(l,"cacheProperties",[...o,...c]),t(l,"ownDefaults",m),t(l,"ATTRIBUTE_NAMES",[...s,"cx","cy","rx","ry"]),a.setClass(l),a.setSVGClass(l);export{l as Ellipse,m as ellipseDefaultValues};
//# sourceMappingURL=Ellipse.min.mjs.map
