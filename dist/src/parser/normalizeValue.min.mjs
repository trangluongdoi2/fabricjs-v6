import{multiplyTransformMatrices as i}from"../util/misc/matrix.min.mjs";import{parseUnit as r}from"../util/misc/svgParsing.min.mjs";import{parseTransformAttribute as t}from"./parseTransformAttribute.min.mjs";import{NONE as e,LEFT as s,RIGHT as o,CENTER as n}from"../constants.min.mjs";function a(a,f,m,l){const p=Array.isArray(f);let c,u=f;if("fill"!==a&&"stroke"!==a||f!==e){if("strokeUniform"===a)return"non-scaling-stroke"===f;if("strokeDashArray"===a)u=f===e?null:f.replace(/,/g," ").split(/\s+/).map(parseFloat);else if("transformMatrix"===a)u=m&&m.transformMatrix?i(m.transformMatrix,t(f)):t(f);else if("visible"===a)u=f!==e&&"hidden"!==f,m&&!1===m.visible&&(u=!1);else if("opacity"===a)u=parseFloat(f),m&&void 0!==m.opacity&&(u*=m.opacity);else if("textAnchor"===a)u="start"===f?s:"end"===f?o:n;else if("charSpacing"===a)c=r(f,l)/l*1e3;else if("paintFirst"===a){const i=f.indexOf("fill"),r=f.indexOf("stroke");u="fill",(i>-1&&r>-1&&r<i||-1===i&&r>-1)&&(u="stroke")}else{if("href"===a||"xlink:href"===a||"font"===a)return f;if("imageSmoothing"===a)return"optimizeQuality"===f;c=p?f.map(r):r(f,l)}}else u="";return!p&&isNaN(c)?u:c}export{a as normalizeValue};
//# sourceMappingURL=normalizeValue.min.mjs.map
