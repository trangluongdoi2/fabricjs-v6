{"version":3,"file":"Noise.mjs","sources":["../../../src/filters/Noise.ts"],"sourcesContent":["import type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/noise';\n\nexport const noiseDefaultValues: Partial<TClassProperties<Noise>> = {\n  mainParameter: 'noise',\n  noise: 0,\n};\n\n/**\n * Noise filter class\n * @example\n * const filter = new Noise({\n *   noise: 700\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n * canvas.renderAll();\n */\nexport class Noise extends BaseFilter {\n  /**\n   * Noise value, from\n   * @param {Number} noise\n   * @default\n   */\n  declare noise: number;\n\n  static type = 'Noise';\n\n  static defaults = noiseDefaultValues;\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    if (this.noise === 0) {\n      return;\n    }\n    const noise = this.noise;\n    for (let i = 0; i < data.length; i += 4) {\n      const rand = (0.5 - Math.random()) * noise;\n      data[i] += rand;\n      data[i + 1] += rand;\n      data[i + 2] += rand;\n    }\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uNoise: gl.getUniformLocation(program, 'uNoise'),\n      uSeed: gl.getUniformLocation(program, 'uSeed'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n    gl.uniform1f(uniformLocations.uSeed, Math.random());\n  }\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject() {\n    return { ...super.toObject(), noise: this.noise };\n  }\n}\n\nclassRegistry.setClass(Noise);\n"],"names":["noiseDefaultValues","mainParameter","noise","Noise","BaseFilter","getFragmentSource","fragmentSource","applyTo2d","_ref","imageData","data","i","length","rand","Math","random","getUniformLocations","gl","program","uNoise","getUniformLocation","uSeed","sendUniformData","uniformLocations","uniform1f","toObject","_objectSpread","_defineProperty","classRegistry","setClass"],"mappings":";;;;;AAMO,MAAMA,kBAAoD,GAAG;AAClEC,EAAAA,aAAa,EAAE,OAAO;AACtBC,EAAAA,KAAK,EAAE,CAAA;AACT,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMC,KAAK,SAASC,UAAU,CAAC;AAYpCC,EAAAA,iBAAiBA,GAAG;AAClB,IAAA,OAAOC,cAAc,CAAA;AACvB,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;EACEC,SAASA,CAAAC,IAAA,EAA4C;IAAA,IAA3C;AAAEC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,IAAAA;AAAK,OAAA;AAAoB,KAAC,GAAAF,IAAA,CAAA;AACjD,IAAA,IAAI,IAAI,CAACN,KAAK,KAAK,CAAC,EAAE;AACpB,MAAA,OAAA;AACF,KAAA;AACA,IAAA,MAAMA,KAAK,GAAG,IAAI,CAACA,KAAK,CAAA;AACxB,IAAA,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,IAAI,CAACE,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;MACvC,MAAME,IAAI,GAAG,CAAC,GAAG,GAAGC,IAAI,CAACC,MAAM,EAAE,IAAIb,KAAK,CAAA;AAC1CQ,MAAAA,IAAI,CAACC,CAAC,CAAC,IAAIE,IAAI,CAAA;AACfH,MAAAA,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,IAAIE,IAAI,CAAA;AACnBH,MAAAA,IAAI,CAACC,CAAC,GAAG,CAAC,CAAC,IAAIE,IAAI,CAAA;AACrB,KAAA;AACF,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEG,EAAAA,mBAAmBA,CACjBC,EAAyB,EACzBC,OAAqB,EACK;IAC1B,OAAO;MACLC,MAAM,EAAEF,EAAE,CAACG,kBAAkB,CAACF,OAAO,EAAE,QAAQ,CAAC;AAChDG,MAAAA,KAAK,EAAEJ,EAAE,CAACG,kBAAkB,CAACF,OAAO,EAAE,OAAO,CAAA;KAC9C,CAAA;AACH,GAAA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACEI,EAAAA,eAAeA,CACbL,EAAyB,EACzBM,gBAA0C,EAC1C;AACAN,IAAAA,EAAE,CAACO,SAAS,CAACD,gBAAgB,CAACJ,MAAM,EAAE,IAAI,CAACjB,KAAK,GAAG,GAAG,CAAC,CAAA;AACvDe,IAAAA,EAAE,CAACO,SAAS,CAACD,gBAAgB,CAACF,KAAK,EAAEP,IAAI,CAACC,MAAM,EAAE,CAAC,CAAA;AACrD,GAAA;;AAEA;AACF;AACA;AACA;AACEU,EAAAA,QAAQA,GAAG;IACT,OAAAC,cAAA,CAAAA,cAAA,CAAA,EAAA,EAAY,KAAK,CAACD,QAAQ,EAAE,CAAA,EAAA,EAAA,EAAA;MAAEvB,KAAK,EAAE,IAAI,CAACA,KAAAA;AAAK,KAAA,CAAA,CAAA;AACjD,GAAA;AACF,CAAA;AAvEE;AACF;AACA;AACA;AACA;AAJEyB,eAAA,CADWxB,KAAK,EAAA,MAAA,EAQF,OAAO,CAAA,CAAA;AAAAwB,eAAA,CARVxB,KAAK,EAAA,UAAA,EAUEH,kBAAkB,CAAA,CAAA;AAgEtC4B,aAAa,CAACC,QAAQ,CAAC1B,KAAK,CAAC;;;;"}