import{defineProperty as r}from"../../_virtual/_rollupPluginBabelHelpers.min.mjs";import{BaseFilter as e}from"./BaseFilter.min.mjs";import{classRegistry as a}from"../ClassRegistry.min.mjs";import{fragmentSource as t}from"./shaders/vibrance.min.mjs";const i={vibrance:0,mainParameter:"vibrance"};class n extends e{getFragmentSource(){return t}applyTo2d(r){let{imageData:{data:e}}=r;if(0===this.vibrance)return;const a=-this.vibrance;for(let r=0;r<e.length;r+=4){const t=Math.max(e[r],e[r+1],e[r+2]),i=(e[r]+e[r+1]+e[r+2])/3,n=2*Math.abs(t-i)/255*a;e[r]+=t!==e[r]?(t-e[r])*n:0,e[r+1]+=t!==e[r+1]?(t-e[r+1])*n:0,e[r+2]+=t!==e[r+2]?(t-e[r+2])*n:0}}getUniformLocations(r,e){return{uVibrance:r.getUniformLocation(e,"uVibrance")}}sendUniformData(r,e){r.uniform1f(e.uVibrance,-this.vibrance)}}r(n,"type","Vibrance"),r(n,"defaults",i),a.setClass(n);export{n as Vibrance,i as vibranceDefaultValues};
//# sourceMappingURL=Vibrance.min.mjs.map
