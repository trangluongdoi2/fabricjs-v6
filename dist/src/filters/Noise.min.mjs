import{defineProperty as e,objectSpread2 as o}from"../../_virtual/_rollupPluginBabelHelpers.min.mjs";import{BaseFilter as t}from"./BaseFilter.min.mjs";import{classRegistry as s}from"../ClassRegistry.min.mjs";import{fragmentSource as i}from"./shaders/noise.min.mjs";const r={mainParameter:"noise",noise:0};class n extends t{getFragmentSource(){return i}applyTo2d(e){let{imageData:{data:o}}=e;if(0===this.noise)return;const t=this.noise;for(let e=0;e<o.length;e+=4){const s=(.5-Math.random())*t;o[e]+=s,o[e+1]+=s,o[e+2]+=s}}getUniformLocations(e,o){return{uNoise:e.getUniformLocation(o,"uNoise"),uSeed:e.getUniformLocation(o,"uSeed")}}sendUniformData(e,o){e.uniform1f(o.uNoise,this.noise/255),e.uniform1f(o.uSeed,Math.random())}toObject(){return o(o({},super.toObject()),{},{noise:this.noise})}}e(n,"type","Noise"),e(n,"defaults",r),s.setClass(n);export{n as Noise,r as noiseDefaultValues};
//# sourceMappingURL=Noise.min.mjs.map
