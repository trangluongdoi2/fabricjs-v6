{"version":3,"file":"Vibrance.min.mjs","sources":["../../../src/filters/Vibrance.ts"],"sourcesContent":["import type { TClassProperties } from '../typedefs';\nimport { BaseFilter } from './BaseFilter';\nimport type { T2DPipelineState, TWebGLUniformLocationMap } from './typedefs';\nimport { classRegistry } from '../ClassRegistry';\nimport { fragmentSource } from './shaders/vibrance';\n\nexport const vibranceDefaultValues: Partial<TClassProperties<Vibrance>> = {\n  vibrance: 0,\n  mainParameter: 'vibrance',\n};\n\n/**\n * Vibrance filter class\n * @example\n * const filter = new Vibrance({\n *   vibrance: 1\n * });\n * object.filters.push(filter);\n * object.applyFilters();\n */\nexport class Vibrance extends BaseFilter {\n  /**\n   * Vibrance value, from -1 to 1.\n   * Increases/decreases the saturation of more muted colors with less effect on saturated colors.\n   * A value of 0 has no effect.\n   *\n   * @param {Number} vibrance\n   * @default\n   */\n  declare vibrance: number;\n\n  static type = 'Vibrance';\n\n  static defaults = vibranceDefaultValues;\n\n  getFragmentSource() {\n    return fragmentSource;\n  }\n\n  /**\n   * Apply the Vibrance operation to a Uint8ClampedArray representing the pixels of an image.\n   *\n   * @param {Object} options\n   * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n   */\n  applyTo2d({ imageData: { data } }: T2DPipelineState) {\n    if (this.vibrance === 0) {\n      return;\n    }\n    const adjust = -this.vibrance;\n    for (let i = 0; i < data.length; i += 4) {\n      const max = Math.max(data[i], data[i + 1], data[i + 2]);\n      const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n      const amt = ((Math.abs(max - avg) * 2) / 255) * adjust;\n      data[i] += max !== data[i] ? (max - data[i]) * amt : 0;\n      data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * amt : 0;\n      data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * amt : 0;\n    }\n  }\n\n  /**\n   * Return WebGL uniform locations for this filter's shader.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {WebGLShaderProgram} program This filter's compiled shader program.\n   */\n  getUniformLocations(\n    gl: WebGLRenderingContext,\n    program: WebGLProgram\n  ): TWebGLUniformLocationMap {\n    return {\n      uVibrance: gl.getUniformLocation(program, 'uVibrance'),\n    };\n  }\n\n  /**\n   * Send data from this filter to its shader program's uniforms.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n   * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n   */\n  sendUniformData(\n    gl: WebGLRenderingContext,\n    uniformLocations: TWebGLUniformLocationMap\n  ) {\n    gl.uniform1f(uniformLocations.uVibrance, -this.vibrance);\n  }\n}\n\nclassRegistry.setClass(Vibrance);\n"],"names":["vibranceDefaultValues","vibrance","mainParameter","Vibrance","BaseFilter","getFragmentSource","fragmentSource","applyTo2d","_ref","imageData","data","this","adjust","i","length","max","Math","avg","amt","abs","getUniformLocations","gl","program","uVibrance","getUniformLocation","sendUniformData","uniformLocations","uniform1f","_defineProperty","classRegistry","setClass"],"mappings":"yPAMO,MAAMA,EAA6D,CACxEC,SAAU,EACVC,cAAe,YAYV,MAAMC,UAAiBC,EAe5BC,iBAAAA,GACE,OAAOC,CACT,CAQAC,SAAAA,CAASC,GAA4C,IAAzCC,WAAWC,KAAEA,IAA0BF,EACjD,GAAsB,IAAlBG,KAAKV,SACP,OAEF,MAAMW,GAAUD,KAAKV,SACrB,IAAK,IAAIY,EAAI,EAAGA,EAAIH,EAAKI,OAAQD,GAAK,EAAG,CACvC,MAAME,EAAMC,KAAKD,IAAIL,EAAKG,GAAIH,EAAKG,EAAI,GAAIH,EAAKG,EAAI,IAC9CI,GAAOP,EAAKG,GAAKH,EAAKG,EAAI,GAAKH,EAAKG,EAAI,IAAM,EAC9CK,EAA8B,EAAtBF,KAAKG,IAAIJ,EAAME,GAAY,IAAOL,EAChDF,EAAKG,IAAME,IAAQL,EAAKG,IAAME,EAAML,EAAKG,IAAMK,EAAM,EACrDR,EAAKG,EAAI,IAAME,IAAQL,EAAKG,EAAI,IAAME,EAAML,EAAKG,EAAI,IAAMK,EAAM,EACjER,EAAKG,EAAI,IAAME,IAAQL,EAAKG,EAAI,IAAME,EAAML,EAAKG,EAAI,IAAMK,EAAM,CACnE,CACF,CAQAE,mBAAAA,CACEC,EACAC,GAEA,MAAO,CACLC,UAAWF,EAAGG,mBAAmBF,EAAS,aAE9C,CAQAG,eAAAA,CACEJ,EACAK,GAEAL,EAAGM,UAAUD,EAAiBH,WAAYZ,KAAKV,SACjD,EAjEA2B,EADWzB,EAAQ,OAWL,YAAUyB,EAXbzB,EAAQ,WAaDH,GAwDpB6B,EAAcC,SAAS3B"}