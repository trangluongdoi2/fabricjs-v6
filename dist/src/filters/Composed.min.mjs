import{defineProperty as t,objectWithoutProperties as s,objectSpread2 as e}from"../../_virtual/_rollupPluginBabelHelpers.min.mjs";import{BaseFilter as r}from"./BaseFilter.min.mjs";import{isWebGLPipelineState as i}from"./utils.min.mjs";import{classRegistry as l}from"../ClassRegistry.min.mjs";const o=["subFilters"];class a extends r{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{subFilters:e=[]}=t;super(s(t,o)),this.subFilters=e}applyTo(t){i(t)&&(t.passes+=this.subFilters.length-1),this.subFilters.forEach((s=>{s.applyTo(t)}))}toObject(){return e(e({},super.toObject()),{},{subFilters:this.subFilters.map((t=>t.toObject()))})}isNeutralState(){return!this.subFilters.some((t=>!t.isNeutralState()))}static fromObject(t,s){return Promise.all((t.subFilters||[]).map((t=>l.getClass(t.type).fromObject(t,s)))).then((t=>new this({subFilters:t})))}}t(a,"type","Composed"),l.setClass(a);export{a as Composed};
//# sourceMappingURL=Composed.min.mjs.map
