import{defineProperty as t}from"../../_virtual/_rollupPluginBabelHelpers.min.mjs";import{Intersection as i}from"../Intersection.min.mjs";import{Point as e}from"../Point.min.mjs";import{multiplyTransformMatrixArray as r,createTranslateMatrix as s,createRotateMatrix as o,createScaleMatrix as n}from"../util/misc/matrix.min.mjs";import{renderSquareControl as l,renderCircleControl as a}from"./controlRendering.min.mjs";class c{constructor(i){t(this,"visible",!0),t(this,"actionName","scale"),t(this,"angle",0),t(this,"x",0),t(this,"y",0),t(this,"offsetX",0),t(this,"offsetY",0),t(this,"sizeX",0),t(this,"sizeY",0),t(this,"touchSizeX",0),t(this,"touchSizeY",0),t(this,"cursorStyle","crosshair"),t(this,"withConnection",!1),Object.assign(this,i)}shouldActivate(t,e,r,s){var o;let{tl:n,tr:l,br:a,bl:c}=s;return(null===(o=e.canvas)||void 0===o?void 0:o.getActiveObject())===e&&e.isControlVisible(t)&&i.isPointInPolygon(r,[n,l,a,c])}getActionHandler(t,i,e){return this.actionHandler}getMouseDownHandler(t,i,e){return this.mouseDownHandler}getMouseUpHandler(t,i,e){return this.mouseUpHandler}cursorStyleHandler(t,i,e){return i.cursorStyle}getActionName(t,i,e){return i.actionName}getVisibility(t,i){var e,r;return null!==(e=null===(r=t._controlsVisibility)||void 0===r?void 0:r[i])&&void 0!==e?e:this.visible}setVisibility(t,i,e){this.visible=t}positionHandler(t,i,r,s){return new e(this.x*t.x+this.offsetX,this.y*t.y+this.offsetY).transform(i)}calcCornerCoords(t,i,l,a,c,h){const m=r([s(l,a),o({angle:t}),n((c?this.touchSizeX:this.sizeX)||i,(c?this.touchSizeY:this.sizeY)||i)]);return{tl:new e(-.5,-.5).transform(m),tr:new e(.5,-.5).transform(m),bl:new e(-.5,.5).transform(m),br:new e(.5,.5).transform(m)}}render(t,i,e,r,s){if("circle"===((r=r||{}).cornerStyle||s.cornerStyle))a.call(this,t,i,e,r,s);else l.call(this,t,i,e,r,s)}}export{c as Control};
//# sourceMappingURL=Control.min.mjs.map
