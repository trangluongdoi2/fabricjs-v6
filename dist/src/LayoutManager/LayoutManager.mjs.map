{"version":3,"file":"LayoutManager.mjs","sources":["../../../src/LayoutManager/LayoutManager.ts"],"sourcesContent":["import type { TModificationEvents } from '../EventTypeDefs';\nimport { Point } from '../Point';\nimport { CENTER, iMatrix } from '../constants';\nimport type { Group } from '../shapes/Group';\nimport type { FabricObject } from '../shapes/Object/FabricObject';\nimport { invertTransform } from '../util/misc/matrix';\nimport { resolveOrigin } from '../util/misc/resolveOrigin';\nimport { FitContentLayout } from './LayoutStrategies/FitContentLayout';\nimport type { LayoutStrategy } from './LayoutStrategies/LayoutStrategy';\nimport {\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_ADDED,\n  LAYOUT_TYPE_REMOVED,\n  LAYOUT_TYPE_IMPERATIVE,\n  LAYOUT_TYPE_OBJECT_MODIFIED,\n  LAYOUT_TYPE_OBJECT_MODIFYING,\n} from './constants';\nimport type {\n  LayoutContext,\n  LayoutResult,\n  RegistrationContext,\n  StrictLayoutContext,\n} from './types';\nimport { classRegistry } from '../ClassRegistry';\n\nconst LAYOUT_MANAGER = 'layoutManager';\n\nexport type SerializedLayoutManager = {\n  type: string;\n  strategy: string;\n};\n\nexport class LayoutManager {\n  private declare _prevLayoutStrategy?: LayoutStrategy;\n  private declare _subscriptions: Map<FabricObject, VoidFunction[]>;\n\n  strategy: LayoutStrategy;\n\n  constructor(strategy: LayoutStrategy = new FitContentLayout()) {\n    this.strategy = strategy;\n    this._subscriptions = new Map();\n  }\n\n  public performLayout(context: LayoutContext) {\n    const strictContext: StrictLayoutContext = {\n      bubbles: true,\n      strategy: this.strategy,\n      ...context,\n      prevStrategy: this._prevLayoutStrategy,\n      stopPropagation() {\n        this.bubbles = false;\n      },\n    };\n\n    this.onBeforeLayout(strictContext);\n\n    const layoutResult = this.getLayoutResult(strictContext);\n    layoutResult && this.commitLayout(strictContext, layoutResult);\n\n    this.onAfterLayout(strictContext, layoutResult);\n    this._prevLayoutStrategy = strictContext.strategy;\n  }\n\n  /**\n   * subscribe to object layout triggers\n   */\n  protected subscribe(\n    object: FabricObject,\n    context: RegistrationContext & Partial<StrictLayoutContext>\n  ) {\n    const { target } = context;\n    this.unsubscribe(object, context);\n    const disposers = [\n      object.on('modified', (e) =>\n        this.performLayout({\n          trigger: 'modified',\n          e,\n          type: LAYOUT_TYPE_OBJECT_MODIFIED,\n          target,\n        })\n      ),\n      ...(\n        [\n          'moving',\n          'resizing',\n          'rotating',\n          'scaling',\n          'skewing',\n          'changed',\n          'modifyPoly',\n        ] as TModificationEvents[]\n      ).map((key) =>\n        object.on(key, (e) =>\n          this.performLayout({\n            trigger: key,\n            e: { ...e, target: object },\n            type: LAYOUT_TYPE_OBJECT_MODIFYING,\n            target,\n          })\n        )\n      ),\n    ];\n    this._subscriptions.set(object, disposers);\n  }\n\n  /**\n   * unsubscribe object layout triggers\n   */\n  protected unsubscribe(\n    object: FabricObject,\n    context?: RegistrationContext & Partial<StrictLayoutContext>\n  ) {\n    (this._subscriptions.get(object) || []).forEach((d) => d());\n    this._subscriptions.delete(object);\n  }\n\n  unsubscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>\n  ) {\n    context.targets.forEach((object) => this.unsubscribe(object, context));\n  }\n\n  subscribeTargets(\n    context: RegistrationContext & Partial<StrictLayoutContext>\n  ) {\n    context.targets.forEach((object) => this.subscribe(object, context));\n  }\n\n  protected onBeforeLayout(context: StrictLayoutContext) {\n    const { target } = context;\n    const { canvas } = target;\n    // handle layout triggers subscription\n    if (\n      context.type === LAYOUT_TYPE_INITIALIZATION ||\n      context.type === LAYOUT_TYPE_ADDED\n    ) {\n      this.subscribeTargets(context);\n    } else if (context.type === LAYOUT_TYPE_REMOVED) {\n      this.unsubscribeTargets(context);\n    }\n    // fire layout event (event will fire only for layouts after initialization layout)\n    target.fire('layout:before', {\n      context,\n    });\n    canvas &&\n      canvas.fire('object:layout:before', {\n        target,\n        context,\n      });\n\n    if (context.type === LAYOUT_TYPE_IMPERATIVE && context.deep) {\n      const { strategy: _, ...tricklingContext } = context;\n      // traverse the tree\n      target.forEachObject((object) => {\n        (object as Group).layoutManager?.performLayout({\n          ...tricklingContext,\n          bubbles: false,\n          target: object as Group,\n        });\n      });\n    }\n  }\n\n  protected getLayoutResult(\n    context: StrictLayoutContext\n  ): Required<LayoutResult> | undefined {\n    const { target } = context;\n\n    const result = context.strategy.calcLayoutResult(\n      context,\n      target.getObjects()\n    );\n\n    if (!result) {\n      return;\n    }\n\n    const prevCenter =\n      context.type === LAYOUT_TYPE_INITIALIZATION\n        ? new Point()\n        : target.getRelativeCenterPoint();\n\n    const {\n      center: nextCenter,\n      correction = new Point(),\n      relativeCorrection = new Point(),\n    } = result;\n    const offset = prevCenter\n      .subtract(nextCenter)\n      .add(correction)\n      .transform(\n        // in `initialization` we do not account for target's transformation matrix\n        context.type === LAYOUT_TYPE_INITIALIZATION\n          ? iMatrix\n          : invertTransform(target.calcOwnMatrix()),\n        true\n      )\n      .add(relativeCorrection);\n\n    return {\n      result,\n      prevCenter,\n      nextCenter,\n      offset,\n    };\n  }\n\n  protected commitLayout(\n    context: StrictLayoutContext,\n    layoutResult: Required<LayoutResult>\n  ) {\n    const { target } = context;\n    const {\n      result: { size },\n      nextCenter,\n    } = layoutResult;\n    // set dimensions\n    target.set({ width: size.x, height: size.y });\n    // layout descendants\n    this.layoutObjects(context, layoutResult);\n    //  set position\n    // in `initialization` we do not account for target's transformation matrix\n    if (context.type === LAYOUT_TYPE_INITIALIZATION) {\n      // TODO: what about strokeWidth?\n      target.set({\n        left:\n          context.x ?? nextCenter.x + size.x * resolveOrigin(target.originX),\n        top: context.y ?? nextCenter.y + size.y * resolveOrigin(target.originY),\n      });\n    } else {\n      target.setPositionByOrigin(nextCenter, CENTER, CENTER);\n      // invalidate\n      target.setCoords();\n      target.set({ dirty: true });\n    }\n  }\n\n  protected layoutObjects(\n    context: StrictLayoutContext,\n    layoutResult: Required<LayoutResult>\n  ) {\n    const { target } = context;\n    //  adjust objects to account for new center\n    target.forEachObject((object) => {\n      object.group === target &&\n        this.layoutObject(context, layoutResult, object);\n    });\n    // adjust clip path to account for new center\n    context.strategy.shouldLayoutClipPath(context) &&\n      this.layoutObject(context, layoutResult, target.clipPath as FabricObject);\n  }\n\n  /**\n   * @param {FabricObject} object\n   * @param {Point} offset\n   */\n  protected layoutObject(\n    context: StrictLayoutContext,\n    { offset }: Required<LayoutResult>,\n    object: FabricObject\n  ) {\n    // TODO: this is here for cache invalidation.\n    // verify if this is necessary since we have explicit\n    // cache invalidation at the end of commitLayout\n    object.set({\n      left: object.left + offset.x,\n      top: object.top + offset.y,\n    });\n  }\n\n  protected onAfterLayout(\n    context: StrictLayoutContext,\n    layoutResult?: LayoutResult\n  ) {\n    const {\n      target,\n      strategy,\n      bubbles,\n      prevStrategy: _,\n      ...bubblingContext\n    } = context;\n    const { canvas } = target;\n\n    //  fire layout event (event will fire only for layouts after initialization layout)\n    target.fire('layout:after', {\n      context,\n      result: layoutResult,\n    });\n    canvas &&\n      canvas.fire('object:layout:after', {\n        context,\n        result: layoutResult,\n        target,\n      });\n\n    //  bubble\n    const parent = target.group;\n    if (bubbles && parent?.layoutManager) {\n      //  add target to context#path\n      (bubblingContext.path || (bubblingContext.path = [])).push(target);\n      //  all parents should invalidate their layout\n      parent.layoutManager.performLayout({\n        ...bubblingContext,\n        target: parent,\n      });\n    }\n  }\n\n  dispose() {\n    this._subscriptions.forEach((disposers) => disposers.forEach((d) => d()));\n    this._subscriptions.clear();\n  }\n\n  toObject() {\n    return {\n      type: LAYOUT_MANAGER,\n      strategy: (this.strategy.constructor as typeof LayoutStrategy).type,\n    };\n  }\n\n  toJSON() {\n    return this.toObject();\n  }\n}\n\nclassRegistry.setClass(LayoutManager, LAYOUT_MANAGER);\n"],"names":["LAYOUT_MANAGER","LayoutManager","constructor","strategy","arguments","length","undefined","FitContentLayout","_defineProperty","_subscriptions","Map","performLayout","context","strictContext","_objectSpread","bubbles","prevStrategy","_prevLayoutStrategy","stopPropagation","onBeforeLayout","layoutResult","getLayoutResult","commitLayout","onAfterLayout","subscribe","object","target","unsubscribe","disposers","on","e","trigger","type","LAYOUT_TYPE_OBJECT_MODIFIED","map","key","LAYOUT_TYPE_OBJECT_MODIFYING","set","get","forEach","d","delete","unsubscribeTargets","targets","subscribeTargets","canvas","LAYOUT_TYPE_INITIALIZATION","LAYOUT_TYPE_ADDED","LAYOUT_TYPE_REMOVED","fire","LAYOUT_TYPE_IMPERATIVE","deep","tricklingContext","_objectWithoutProperties","_excluded","forEachObject","_layoutManager","layoutManager","result","calcLayoutResult","getObjects","prevCenter","Point","getRelativeCenterPoint","center","nextCenter","correction","relativeCorrection","offset","subtract","add","transform","iMatrix","invertTransform","calcOwnMatrix","size","width","x","height","y","layoutObjects","_context$x","_context$y","left","resolveOrigin","originX","top","originY","setPositionByOrigin","CENTER","setCoords","dirty","group","layoutObject","shouldLayoutClipPath","clipPath","_ref","_","bubblingContext","_excluded2","parent","path","push","dispose","clear","toObject","toJSON","classRegistry","setClass"],"mappings":"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"}