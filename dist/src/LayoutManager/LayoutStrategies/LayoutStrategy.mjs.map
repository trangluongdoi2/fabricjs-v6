{"version":3,"file":"LayoutStrategy.mjs","sources":["../../../../src/LayoutManager/LayoutStrategies/LayoutStrategy.ts"],"sourcesContent":["import { Point } from '../../Point';\nimport type { FabricObject } from '../../shapes/Object/FabricObject';\nimport { makeBoundingBoxFromPoints } from '../../util/misc/boundingBoxFromPoints';\nimport {\n  LAYOUT_TYPE_INITIALIZATION,\n  LAYOUT_TYPE_IMPERATIVE,\n} from '../constants';\nimport type {\n  InitializationLayoutContext,\n  LayoutStrategyResult,\n  StrictLayoutContext,\n} from '../types';\nimport { getObjectBounds } from './utils';\n\n/**\n * Exposes a main public method {@link calcLayoutResult} that is used by the `LayoutManager` to perform layout.\n * Returning `undefined` signals the `LayoutManager` to skip the layout.\n *\n * In charge of calculating the bounding box of the passed objects.\n */\nexport abstract class LayoutStrategy {\n  /**\n   * override by subclass for persistence (TS does not support `static abstract`)\n   */\n  static type = 'strategy';\n\n  /**\n   * Used by the `LayoutManager` to perform layout\n   * @returns layout result **OR** `undefined` to skip layout\n   */\n  public calcLayoutResult(\n    context: StrictLayoutContext,\n    objects: FabricObject[]\n  ): LayoutStrategyResult | undefined {\n    if (this.shouldPerformLayout(context)) {\n      return this.calcBoundingBox(objects, context);\n    }\n  }\n\n  shouldPerformLayout(context: StrictLayoutContext) {\n    return (\n      context.type === LAYOUT_TYPE_INITIALIZATION ||\n      context.type === LAYOUT_TYPE_IMPERATIVE ||\n      (!!context.prevStrategy && context.strategy !== context.prevStrategy)\n    );\n  }\n\n  shouldLayoutClipPath({ type, target: { clipPath } }: StrictLayoutContext) {\n    return (\n      type !== LAYOUT_TYPE_INITIALIZATION &&\n      clipPath &&\n      !clipPath.absolutePositioned\n    );\n  }\n\n  getInitialSize(\n    context: StrictLayoutContext & InitializationLayoutContext,\n    result: Pick<LayoutStrategyResult, 'center' | 'size'>\n  ) {\n    return result.size;\n  }\n\n  /**\n   * Override this method to customize layout.\n   */\n  calcBoundingBox(\n    objects: FabricObject[],\n    context: StrictLayoutContext\n  ): LayoutStrategyResult | undefined {\n    if (context.type === LAYOUT_TYPE_IMPERATIVE && context.overrides) {\n      return context.overrides;\n    }\n    if (objects.length === 0) {\n      return;\n    }\n    const { target } = context;\n    const { left, top, width, height } = makeBoundingBoxFromPoints(\n      objects\n        .map((object) => getObjectBounds(target, object))\n        .reduce<Point[]>((coords, curr) => coords.concat(curr), [])\n    );\n    const bboxSize = new Point(width, height);\n    const bboxLeftTop = new Point(left, top);\n    const bboxCenter = bboxLeftTop.add(bboxSize.scalarDivide(2));\n\n    if (context.type === LAYOUT_TYPE_INITIALIZATION) {\n      const actualSize = this.getInitialSize(context, {\n        size: bboxSize,\n        center: bboxCenter,\n      });\n      return {\n        // in `initialization` we do not account for target's transformation matrix\n        center: bboxCenter,\n        // TODO: investigate if this is still necessary\n        relativeCorrection: new Point(0, 0),\n        size: actualSize,\n      };\n    } else {\n      //  we send `relativeCenter` up to group's containing plane\n      const center = bboxCenter.transform(target.calcOwnMatrix());\n      return {\n        center,\n        size: bboxSize,\n      };\n    }\n  }\n}\n"],"names":["LayoutStrategy","calcLayoutResult","context","objects","shouldPerformLayout","calcBoundingBox","type","LAYOUT_TYPE_INITIALIZATION","LAYOUT_TYPE_IMPERATIVE","prevStrategy","strategy","shouldLayoutClipPath","_ref","target","clipPath","absolutePositioned","getInitialSize","result","size","overrides","length","left","top","width","height","makeBoundingBoxFromPoints","map","object","getObjectBounds","reduce","coords","curr","concat","bboxSize","Point","bboxLeftTop","bboxCenter","add","scalarDivide","actualSize","center","relativeCorrection","transform","calcOwnMatrix","_defineProperty"],"mappings":"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"}